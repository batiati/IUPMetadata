[
  {
    "Documentation": "Creates void element, which dynamically occupies empty spaces always trying to expand itself. Its parent should be an IupHbox, an IupVbox or a IupGridBox, or else this type of expansion will not work. If an EXPAND is set on at least one of the other children of the box, then the fill expansion is ignored. It does not have a native representation.",
    "ClassName": "fill",
    "Name": "Fill",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE / RASTERSIZE (non inheritable): Defines the width, if inside a IupHbox, or the height, if it is inside a IupVbox. The standard format \"wxh\" can also be used, but width will be ignored if inside a IupVbox and height will be ignored if inside a IupHbox (since 3.3). When consulted behaves as the standard SIZE/RASTERSIZE attributes.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable)(read-only): If User size is not defined, then when inside a IupHbox/IupGridBox EXPAND is HORIZONTAL, when inside a IupVbox EXPAND is VERTICAL. If User size is defined then EXPAND is NO.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a detachable void container. Dragging and dropping this element, it creates a new dialog composed by its child or elements arranged in it (for example, a child like IupVbox or IupHbox). During the drag, the ESC key can be pressed to cancel the action. It does not have a native representation, but it contains also a IupCanvas to implement the bar handler.",
    "ClassName": "detachbox",
    "Name": "DetachBox",
    "ParentClassName": null,
    "ChildrenCount": 2,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "OLDBROTHER_HANDLE (read only): returns the previous reference child of the detached element. Only valid after the element was detached. See IupReparent for a reference child definition.",
        "AttributeName": "OLDBROTHER_HANDLE",
        "Name": "OldBrotherHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BARSIZE (non inheritable): controls the size of the bar handler. To completely hide the bar set BARSIZE to 0 (since 3.16). Default: 10.",
        "AttributeName": "BARSIZE",
        "Name": "BarSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "10",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RESTOREWHENCLOSED: automatically restore the box to its original position when the new dialog is closed. Can be Yes or No. Default: No. (since 3.21)",
        "AttributeName": "RESTOREWHENCLOSED",
        "Name": "RestoreWhenClosed",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "OLDPARENT_HANDLE (read only): returns the previous parent of the detached element. Only valid after the element was detached.",
        "AttributeName": "OLDPARENT_HANDLE",
        "Name": "OldParentHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DETACH (write-only): detach the box by creating a new dialog and placing the detachbox as the child of the new dialog. The DETACHED_CB callback is called, use it to configure the new dialog. The handler is hidden, the USERSIZE of the detachbox is set to the CURRENTSIZE of the child, and the PARENTDIALOG of the new dialog is set to old dialog. To re-parent the child we need to map the dialog before doing it, so to force a dialog resize its size is reset before its is shown, to control the dialog size use the child size. The new dialog is show at the current cursor position, and the USERSIZE of the detachbox is reset.",
        "AttributeName": "DETACH",
        "Name": "Detach",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RESTORE (write-only): restore the box to its previous place (parent and brother) and destroys the new dialog. Value can be NULL or can be the name of a new parent when the control will be appended. Use IupSetHandle or IupSetAttributeHandle to associate an Ihandle* to a name (since 3.16). The handler is shown (if restored to inside a zbox, the application must update the zbox child visibility manually).",
        "AttributeName": "RESTORE",
        "Name": "Restore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "COLOR: Changes the color of the bar grip affordance. The value should be given in \"R G B\" color style. Default: \"160 160 160\". When SHOWGRIP = NO, this attribute sets the background color of the bar handler.",
        "AttributeName": "COLOR",
        "Name": "Color",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160 160 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (creation only) (non inheritable): Indicates the orientation of the bar handler. The direction of the resize is perpendicular to the orientation. Possible values are \"VERTICAL\" or \"HORIZONTAL\". Default: \"VERTICAL\".",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "VERTICAL",
        "IsNullable": false
      },
      {
        "Documentation": "SHOWGRIP (non inheritable): Shows the bar grip affordance. Default: YES. When set to NO, the BARSIZE is set to 5 (if greater than 5). To completely hide the bar set BARSIZE to 0 (since 3.16).",
        "AttributeName": "SHOWGRIP",
        "Name": "ShowGrip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DETACHED_CB",
        "Name": "Detached",
        "Arguments": [
          "Handle",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "RESTORED_CB",
        "Name": "Restored",
        "Arguments": [
          "Handle",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container that split its client area in two. Allows the provided controls to be enclosed in a box that allows expanding and contracting the element size in one direction, but when one is expanded the other is contracted. It does not have a native representation, but it contains also a IupFlatSeparator to implement the bar handler.",
    "ClassName": "split",
    "Name": "Split",
    "ParentClassName": null,
    "ChildrenCount": 3,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BARSIZE (non inheritable): controls the size of the bar handler. Default: 5.",
        "AttributeName": "BARSIZE",
        "Name": "BarSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": "MINMAX (non inheritable): sets minimum and maximum crop values for VALUE, in the format \"%d:%d\" [min:max]. The min value can not be less than 0, and the max value can not be larger than 1000. This will constrain the interactive change of the bar handler. Default: \"0:1000\". (Since 3.2)",
        "AttributeName": "MINMAX",
        "Name": "MinMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0:1000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "LAYOUTDRAG (non inheritable): When the bar is moved automatically update the children layout. Default: YES. If set to NO then the layout will be updated only when the mouse drag is released.",
        "AttributeName": "LAYOUTDRAG",
        "Name": "LayoutDrag",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): The proportion of the left or top (child1) client area relative to the full available area. It is an integer between 0 and 1000. If not defined or set to NULL, the Native size of the two children will define its initial size.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "500",
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "AUTOHIDE (non inheritable): if the child client area is smaller than the bar size, then automatically hide the child. Default: NO.",
        "AttributeName": "AUTOHIDE",
        "Name": "AutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "COLOR: Changes the color of the bar grip affordance. Default: \"160 160 160\".",
        "AttributeName": "COLOR",
        "Name": "Color",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160 160 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (creation only) (non inheritable): Indicates the orientation of the bar handler. The direction of the resize is perpendicular to the orientation. Possible values are \"VERTICAL\" or \"HORIZONTAL\". Default: \"VERTICAL\".",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "VERTICAL",
        "IsNullable": false
      },
      {
        "Documentation": "SHOWGRIP (non inheritable): Shows the bar grip affordance. Default: YES. When set to NO, the BARSIZE is set to 3. When set to NO, COLOR is used to fill the grip area (since 3.11.1) if defined, if COLOR is not defined the area is filled with the parent background color. If set to \"LINES\" then instead of the traditional grip appearance, it will be two parallel lines (since 3.11.1).",
        "AttributeName": "SHOWGRIP",
        "Name": "ShowGrip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIRECTION",
        "Name": "Direction",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "North",
            "StrValue": "NORTH",
            "IntValue": null
          },
          {
            "Name": "South",
            "StrValue": "SOUTH",
            "IntValue": null
          },
          {
            "Name": "West",
            "StrValue": "WEST",
            "IntValue": null
          },
          {
            "Name": "East",
            "StrValue": "EAST",
            "IntValue": null
          }
        ],
        "Default": "VERTICAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container for composing elements horizontally. It is a box that arranges the elements it contains from left to right. It does not have a native representation.",
    "ClassName": "hbox",
    "Name": "HBox",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MARGIN, CMARGIN: Defines a margin in pixels, CMARGIN is in the same units of the SIZE attribute. Its value has the format \"widthxheight\", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: \"0x0\" (no margin). (CMARGIN since 3.0)",
        "AttributeName": "MARGIN",
        "Name": "Margin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": "NORMALIZESIZE (non inheritable): normalizes all children natural size to be the biggest natural size among them. All natural width will be set to the biggest width, and all natural height will be set to the biggest height according to is value. Can be NO, HORIZONTAL, VERTICAL or BOTH. Default: \"NO\". Same as using IupNormalizer. (since 3.0)",
        "AttributeName": "NORMALIZESIZE",
        "Name": "NormalizeSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "Both",
            "StrValue": "BOTH",
            "IntValue": null
          },
          {
            "Name": "None",
            "StrValue": "NONE",
            "IntValue": null
          }
        ],
        "Default": "NONE",
        "IsNullable": false
      },
      {
        "Documentation": "NGAP, NCGAP (non inheritable): Same as GAP but are non inheritable. (since 3.0)",
        "AttributeName": "NGAP",
        "Name": "NGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPANDCHILDREN (non inheritable): forces all children to expand vertically and to fully occupy its space available inside the box. Default: \"NO\". This has the same effect as setting EXPAND=VERTICAL on each child. (since 3.0)",
        "AttributeName": "EXPANDCHILDREN",
        "Name": "ExpandChildren",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "GAP, CGAP: Defines an horizontal space in pixels between the children, CGAP is in the same units of the SIZE attribute for the width. Default: \"0\". (CGAP since 3.0)",
        "AttributeName": "GAP",
        "Name": "Gap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "MARGIN, CMARGIN: Defines a margin in pixels, CMARGIN is in the same units of the SIZE attribute. Its value has the format \"widthxheight\", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: \"0x0\" (no margin). (CMARGIN since 3.0)",
        "AttributeName": "CMARGIN",
        "Name": "CMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "HOMOGENEOUS (non inheritable): forces all children to get equal horizontal space. The space width will be based on the largest child. Default: \"NO\". Notice that this does not changes the children size, only the available space for each one of them to expand. (since 3.0)",
        "AttributeName": "HOMOGENEOUS",
        "Name": "Homogeneous",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE / RASTERSIZE (non inheritable): Defines the width of the box. When consulted behaves as the standard SIZE/RASTERSIZE attributes. The standard format \"wxh\" can also be used, but height will be ignored (since 3.3).",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "GAP, CGAP: Defines an horizontal space in pixels between the children, CGAP is in the same units of the SIZE attribute for the width. Default: \"0\". (CGAP since 3.0)",
        "AttributeName": "CGAP",
        "Name": "CGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NMARGIN, NCMARGIN (non inheritable): Same as MARGIN but are non inheritable. (since 3.0)",
        "AttributeName": "NMARGIN",
        "Name": "NMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "NMARGIN, NCMARGIN (non inheritable): Same as MARGIN but are non inheritable. (since 3.0)",
        "AttributeName": "NCMARGIN",
        "Name": "NcMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable*): The default value is \"YES\". See the documentation of the attribute for EXPAND inheritance.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (read-only) (non inheritable): Returns \"HORIZONTAL\". (since 3.28)",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NGAP, NCGAP (non inheritable): Same as GAP but are non inheritable. (since 3.0)",
        "AttributeName": "NCGAP",
        "Name": "NcGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): Vertically aligns the elements. Possible values: \"ATOP\", \"ACENTER\", \"ABOTTOM\". Default: \"ATOP\".",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ABottom",
            "StrValue": "ABOTTOM",
            "IntValue": null
          },
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ATop",
            "StrValue": "ATOP",
            "IntValue": null
          }
        ],
        "Default": "ATOP",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "UPDATEATTRIBFROMFONT_CB",
        "Name": "UpDateAttribfromFont",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a label interface element, which displays a separator, a text or an image.",
    "ClassName": "label",
    "Name": "Label",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "WORDWRAP [Windows and GTK only]: enables or disable the wrapping of lines that does not fits in the label. Can be \"YES\" or \"NO\". Default: \"NO\". Can only set WORDWRAP=YES if ALIGNMENT=ALEFT. (since 3.0)",
        "AttributeName": "WORDWRAP",
        "Name": "WordWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPFILESTARGET [Windows and GTK Only] (non inheritable): Enable or disable the drop of files. Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled. (since 3.0)",
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "SEPARATOR (creation only) (non inheritable): Turns the label into a line separator. Possible values: \"HORIZONTAL\" or \"VERTICAL\". When changed before mapping the EXPAND attribute is set to \"HORIZONTALFREE\" or \"VERTICALFREE\" accordingly. (Since 3.11 changed to FREE based expand)",
        "AttributeName": "SEPARATOR",
        "Name": "Separator",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): Image name. If set before map defines the behavior of the label to contain an image. The natural size will be size of the image in pixels. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Not used when SEPARATOR is used. Default value: \"0x0\". (since 3.0)",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Label's text. If SEPARATOR or IMAGE are not defined before map, then the default behavior is to contain a text. The label behavior can not be changed after map. The natural size will be larger enough to include all the text in the selected font, even using multiple lines. The '\\n' character is accepted for line change. The \"&\" character can be used to define a mnemonic, the next character will be used as key. Use \"&&\" to show the \"&\" character instead of defining a mnemonic. The next control from the label will be activated from any control in the dialog using the \"Alt+key\" combination. (mnemonic support since 3.0)",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: ignored, transparent in all systems. Will use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): horizontal and vertical alignment. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\", combined to \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: \"ALEFT:ACENTER\". Partial values are also accepted, like \"ARIGHT\" or \":ATOP\", the other value will be used obtained from the default value. In Motif, vertical alignment is restricted to \"ACENTER\". (vertical alignment since 3.0)",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MARKUP [GTK only]: allows the title string to contains pango markup commands. Works only if a mnemonic is NOT defined in the title. Can be \"YES\" or \"NO\". Default: \"NO\".",
        "AttributeName": "MARKUP",
        "Name": "Markup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ELLIPSIS [Windows and GTK only]: add an ellipsis: \"...\" to the text if there is not enough space to render the entire string. Can be \"YES\" or \"NO\". Default: \"NO\". (since 3.0) (GTK 2.6)",
        "AttributeName": "ELLIPSIS",
        "Name": "Ellipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ACTIVE: The only difference between an active label and an inactive one is its visual feedback. Possible values: \"YES, \"NO\". Default: \"YES\".",
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FONT, EXPAND, SCREENPOSITION, POSITION, MINSIZE, MAXSIZE, WID, TIP, SIZE, RASTERSIZE, ZORDER, VISIBLE, THEME: also accepted.",
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a tree containing nodes of branches or leaves. Both branches and leaves can have an associated text and image. The branches can be expanded or collapsed. When a branch is expanded, its immediate children are visible, and when it is collapsed they are hidden. The leaves can generate an \"executed\" or \"renamed\" actions, branches can only generate a \"renamed\" action. The focus node is the node with the focus rectangle, marked nodes have their background inverted.",
    "ClassName": "tree",
    "Name": "Tree",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDEXPANDED",
        "Name": "AddExpanded",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPEQUALDRAG",
        "Name": "DropEqualDrag",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "KIND",
        "Name": "Kind",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDLEAF",
        "Name": "AddLeaf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RENAMECARET",
        "Name": "RenameCaret",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STARTING",
        "Name": "Starting",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXPANDED",
        "Name": "ImageExpanded",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INSERTLEAF",
        "Name": "InsertLeaf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NEXT",
        "Name": "Next",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROPTREE",
        "Name": "DragDropTree",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MOVENODE",
        "Name": "MoveNode",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKED",
        "Name": "Marked",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEFONTSTYLE",
        "Name": "TitleFontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLEVISIBLE",
        "Name": "ToggleVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PREVIOUS",
        "Name": "Previous",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SHIFT",
        "Name": "Shift",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEFONTSIZE",
        "Name": "TitleFontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWTOGGLE",
        "Name": "ShowToggle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INFOTIP",
        "Name": "InfoTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGELEAF",
        "Name": "ImageLeaf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "IMGLEAF",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DELNODE",
        "Name": "DelNode",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOPITEM",
        "Name": "TopItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERDATA",
        "Name": "UserData",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "VoidPtr",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CTRL",
        "Name": "Ctrl",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWDRAGDROP",
        "Name": "ShowDragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDALL",
        "Name": "ExpandAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COLOR",
        "Name": "Color",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "RENAMESELECTION",
        "Name": "RenameSelection",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LASTADDNODE",
        "Name": "LastAddNode",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LAST",
        "Name": "Last",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEPTH",
        "Name": "Depth",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FIRST",
        "Name": "First",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEFONT",
        "Name": "TitleFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKMODE",
        "Name": "MarkMode",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "SINGLE",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INSERTBRANCH",
        "Name": "InsertBranch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HLCOLOR",
        "Name": "HlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTHLCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKWHENTOGGLE",
        "Name": "MarkWhenToggle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STATE",
        "Name": "State",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Expanded",
            "StrValue": "EXPANDED",
            "IntValue": null
          },
          {
            "Name": "Collapsed",
            "StrValue": "COLLAPSED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ALPHA",
        "Name": "FlatAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKSTART",
        "Name": "MarkStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INDENTATION",
        "Name": "Indentation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEBRANCHEXPANDED",
        "Name": "ImageBranchExpanded",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "IMGEXPANDED",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PARENT",
        "Name": "Parent",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARK",
        "Name": "Mark",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ROOTCOUNT",
        "Name": "RootCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLEVALUE",
        "Name": "ToggleValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "On",
            "StrValue": "ON",
            "IntValue": null
          },
          {
            "Name": "Off",
            "StrValue": "OFF",
            "IntValue": null
          },
          {
            "Name": "NotDef",
            "StrValue": "NOTDEF",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDEBUTTONS",
        "Name": "HideButtons",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOTALCHILDCOUNT",
        "Name": "TotalChildCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWRENAME",
        "Name": "ShowRename",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEBRANCHCOLLAPSED",
        "Name": "ImageBranchCollapsed",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "IMGCOLLAPSED",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDCOUNT",
        "Name": "ChildCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RENAME",
        "Name": "Rename",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKEDNODES",
        "Name": "MarkedNodes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOREDRAW",
        "Name": "AutoRedraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDROOT",
        "Name": "AddRoot",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDBRANCH",
        "Name": "AddBranch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COPYNODE",
        "Name": "CopyNode",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EMPTYAS3STATE",
        "Name": "EmptyAs3State",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDELINES",
        "Name": "HideLines",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "BRANCHCLOSE_CB",
        "Name": "BranchClose",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "EXECUTEBRANCH_CB",
        "Name": "ExecuteBranch",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTIUNSELECTION_CB",
        "Name": "MultiUnselection",
        "Arguments": [
          "RefInt",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "RIGHTCLICK_CB",
        "Name": "RightClick",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP_CB",
        "Name": "DragDrop",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWRENAME_CB",
        "Name": "ShowRename",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SELECTION_CB",
        "Name": "Selection",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLEVALUE_CB",
        "Name": "ToggleValue",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "BRANCHOPEN_CB",
        "Name": "BranchOpen",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "NODEREMOVED_CB",
        "Name": "NodeRemoved",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "EXECUTELEAF_CB",
        "Name": "ExecuteLeaf",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "RENAME_CB",
        "Name": "Rename",
        "Arguments": [
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTISELECTION_CB",
        "Name": "MultiSelection",
        "Arguments": [
          "RefInt",
          "Int"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a simple native container with no decorations. Useful for controlling children visibility for IupZbox or IupExpander. It inherits from IupCanvas.",
    "ClassName": "backgroundbox",
    "Name": "BackgroundBox",
    "ParentClassName": "canvas",
    "ChildrenCount": 1,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANVASBOX",
        "Name": "CanvasBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "DECORATION (non inheritable): Enable a decoration area around the child. Can be Yes or No. Default No. (since 3.20)",
        "AttributeName": "DECORATION",
        "Name": "Decoration",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "BACKCOLOR (non inheritable): if defined used to fill the background color when BACKIMAGE is defined. If not defined BGCOLOR is used. (since 3.26)",
        "AttributeName": "BACKCOLOR",
        "Name": "BackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS> (non inheritable): the default is changed to NO. But it can receive the focus (since 3.19).",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDOFFSET (non inheritable): Allow to specify a position offset for the child. Available for native containers only. It will not affect the natural size, and allows to position controls outside the client area. Format \"dxxdy\", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: 0x0. (since 3.14)",
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): behaves as a container. See CANVASBOX attribute.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: by default will use the background color of the native parent, but can be set to a custom value (since 3.11).",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DECOROFFSET (non inheritable): decoration offset from left border and top border in the format \"XxY\" (in C \"%dx%d). Used only when DECORATION=Yes. (since 3.20)",
        "AttributeName": "DECOROFFSET",
        "Name": "DecorOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEZOOM (non inheritable): if set the back image will be zoomed to occupy the full background. Aspect ratio is NOT preserved. Can be Yes or No. Default: No. (since 3.26)",
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "DECORSIZE (non inheritable): total size of the decoration in the format \"WidthxHeight\" (in C \"%dx%d). Used only when DECORATION=Yes. (since 3.20)",
        "AttributeName": "DECORSIZE",
        "Name": "DecorSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGE (non inheritable): image name to be used as background. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage. When defined the ACTION callback of the IupCanvas will be defined. (since 3.26)",
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): the default value is \"NO\".",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container that does not affect the dialog layout. It acts by normalizing all the controls in a list so their natural size becomes the biggest natural size amongst them. All natural widths will be set to the biggest width, and all natural heights will be set to the biggest height. The controls of the list must be inside a valid container in the dialog.",
    "ClassName": "normalizer",
    "Name": "Normalizer",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": "DELCONTROL (non inheritable, write-only): Removes a control from the normalizer. The value passed must be the name of an element. Use IupSetHandle or IupSetAttributeHandle to associate an element to a name. In Lua you can also use the element reference directly. (since 3.17)",
        "AttributeName": "DELCONTROL",
        "Name": "DelControl",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FIRST_CONTROL_HANDLE",
        "Name": "FirstControlHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NEXT_CONTROL_HANDLE",
        "Name": "NextControlHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ADDCONTROL_HANDLE (non inheritable, write-only): Adds a control to the normalizer. The value passed must be a handle of an element.",
        "AttributeName": "ADDCONTROL_HANDLE",
        "Name": "AddControlHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NORMALIZE (non inheritable): normalization direction. Can be HORIZONTAL, VERTICAL or BOTH. These are the same values of the NORMALIZESIZE attribute. Default: HORIZONTAL.",
        "AttributeName": "NORMALIZE",
        "Name": "Normalize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DELCONTROL_HANDLE",
        "Name": "DelControlHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ADDCONTROL (non inheritable, write-only): Adds a control to the normalizer. The value passed must be the name of an element. Use IupSetHandle or IupSetAttributeHandle to associate an element to a name. In Lua you can also use the element reference directly.",
        "AttributeName": "ADDCONTROL",
        "Name": "AddControl",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates the Font Dialog element. It is a predefined dialog for selecting a font. The dialog can be shown with the IupPopup function only.",
    "ClassName": "fontdlg",
    "Name": "FontDlg",
    "ParentClassName": "dialog",
    "ChildrenCount": 0,
    "NativeType": "Dialog",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLIENT",
        "Name": "MdiClient",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROL",
        "Name": "Control",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENU",
        "Name": "Menu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Menu",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOFLUSH",
        "Name": "NoFlush",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLEICON",
        "Name": "TrayTipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITYIMAGE",
        "Name": "OpacityImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HELPBUTTON",
        "Name": "HelpButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOFOCUS",
        "Name": "ShowNoFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATPARENT",
        "Name": "MaximizeAtParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITY",
        "Name": "Opacity",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COMPOSITED",
        "Name": "Composited",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDERSIZE",
        "Name": "BorderSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ICON",
        "Name": "Icon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW",
        "Name": "CustomFrameDraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENUBOX",
        "Name": "MenuBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVE",
        "Name": "MdiActive",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXBOX",
        "Name": "MaxBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGHINT",
        "Name": "DialogHint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWMINIMIZENEXT",
        "Name": "ShowMinimizeNext",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGFRAME",
        "Name": "DialogFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NACTIVE",
        "Name": "NActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLE",
        "Name": "TrayTipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVEUNDER",
        "Name": "SaveUnder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAY",
        "Name": "Tray",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESS",
        "Name": "TaskbarProgress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "DialogSize",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "STATUS (read-only): defined to \"1\" if the user pressed the Ok button, \"0\" or NULL if pressed the Cancel button.",
        "AttributeName": "STATUS",
        "Name": "Status",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIMENU",
        "Name": "MdiMenu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STARTFOCUS",
        "Name": "StartFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPDELAY",
        "Name": "TrayTipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONLIMITS",
        "Name": "CustomFrameCaptionLimits",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAME",
        "Name": "CustomFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDINEXT",
        "Name": "MdiNext",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE: Dialog title.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTESC",
        "Name": "DefaultEsc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PLACEMENT",
        "Name": "Placement",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Maximized",
            "StrValue": "MAXIMIZED",
            "IntValue": null
          },
          {
            "Name": "Minimized",
            "StrValue": "MINIMIZED",
            "IntValue": null
          },
          {
            "Name": "Full",
            "StrValue": "FULL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "LAYERALPHA",
        "Name": "LayerAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOON",
        "Name": "TrayTipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIARRANGE",
        "Name": "MdiArrange",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "TileHorizontal",
            "StrValue": "TILEHORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "TileVertical",
            "StrValue": "TILEVERTICAL",
            "IntValue": null
          },
          {
            "Name": "Cascade",
            "StrValue": "CASCADE",
            "IntValue": null
          },
          {
            "Name": "Icon",
            "StrValue": "ICON",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZED",
        "Name": "Maximized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "COLOR [Windows Only]: The initial color value and the returned selected value if the user pressed the Ok button. In Windows the Choose Font dialog allows the user to select a color from a pre-defined list of colors. Since IUP 3.15 must set SHOWCOLOR=Yes to enable this option.",
        "AttributeName": "COLOR",
        "Name": "Color",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SHAPEIMAGE",
        "Name": "ShapeImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWCOLOR",
        "Name": "ShowColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOACTIVATE",
        "Name": "ShowNoActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATDIALOG",
        "Name": "MaximizeAtDialog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOPMOST",
        "Name": "TopMost",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARBUTTON",
        "Name": "TaskbarButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Show",
            "StrValue": "SHOW",
            "IntValue": null
          },
          {
            "Name": "Hide",
            "StrValue": "HIDE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINBOX",
        "Name": "MinBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTENTER",
        "Name": "DefaultEnter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MODAL",
        "Name": "Modal",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE",
        "Name": "MdiActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "MdiActivate",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PARENTDIALOG (creation only): Name of a dialog to be used as parent. This dialog will be always in front of the parent dialog.",
        "AttributeName": "PARENTDIALOG",
        "Name": "ParentDialog",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Dialog",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKGROUND",
        "Name": "Background",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDETASKBAR",
        "Name": "HideTaskbar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BRINGFRONT",
        "Name": "BringFront",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYIMAGE",
        "Name": "TrayImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1x1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVEWINDOW",
        "Name": "ActiveWindow",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONHEIGHT",
        "Name": "CustomFrameCaptionHeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMESIMULATE",
        "Name": "CustomFramesImulate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLOSEALL",
        "Name": "MdiCloseAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHRINK",
        "Name": "Shrink",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIP",
        "Name": "TrayTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOOLBOX",
        "Name": "ToolBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIFRAME",
        "Name": "MdiFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICHILD",
        "Name": "MdiChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSSTATE",
        "Name": "TaskbarProgressState",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "NoProgress",
            "StrValue": "NOPROGRESS",
            "IntValue": null
          },
          {
            "Name": "Indeterminate",
            "StrValue": "INDETERMINATE",
            "IntValue": null
          },
          {
            "Name": "Error",
            "StrValue": "ERROR",
            "IntValue": null
          },
          {
            "Name": "Paused",
            "StrValue": "PAUSED",
            "IntValue": null
          },
          {
            "Name": "Normal",
            "StrValue": "NORMAL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSVALUE",
        "Name": "TaskbarProgressValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FULLSCREEN",
        "Name": "FullScreen",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATIVEPARENT",
        "Name": "NativeParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEDIALOG",
        "Name": "MaximizedIalog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINIMIZED",
        "Name": "Minimized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIMULATEMODAL",
        "Name": "SimulateModal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "CLOSE_CB CLOSE_CB Called just before a dialog is closed when the user clicks the close button of the title bar or an equivalent action. Callback int function(Ihandle *ih); [in C] ih:close_cb() -> (ret: number) [in Lua] ih: identifies the element that activated the event. Returns: if IUP_IGNORE, it prevents the dialog from being closed. If you destroy the dialog in this callback, you must return IUP_IGNORE. IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "CLOSE_CB",
        "Name": "Close",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE_CB",
        "Name": "MdiActivate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEACTIVATE_CB",
        "Name": "CustomFrameActivate",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW_CB",
        "Name": "CustomFrameDraw",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SHOW_CB SHOW_CB Called right after the dialog is showed, hidden, maximized, minimized or restored from minimized/maximized. This callback is called when those actions were performed by the user or programmatically by the application. Callback int function(Ihandle *ih, int state); [in C] ih:show_cb(state: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. state: indicates which of the following situations generated the event: IUP_HIDE (since 3.0) IUP_SHOW IUP_RESTORE (was minimized or maximized) IUP_MINIMIZE IUP_MAXIMIZE (since 3.0) (not received in Motif when activated from the maximize button) Returns: IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "SHOW_CB",
        "Name": "Show",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYCLICK_CB",
        "Name": "TrayClick",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an interface element that displays a list of items, but it does not have native decorations. It behaves like IupList when DROPDOWN=NO and EDITBOX=NO. It inherits from IupCanvas.",
    "ClassName": "flatlist",
    "Name": "FlatList",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "COUNT (read-only) (non inheritable): returns the number of items.",
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute TXTFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "HASFOCUS (read-only): returns the button state if has focus. Can be Yes or No.",
        "AttributeName": "HASFOCUS",
        "Name": "HasFocus",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMPRESS",
        "Name": "SbImageBottomPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWTRANSPARENT",
        "Name": "ShowTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ITEMTIPid: tip of the item at the given id. If defined will be shown instead of the TIP attribute. (since 3.29)",
        "AttributeName": "ITEMTIP",
        "Name": "ItemTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_PRESSCOLOR",
        "Name": "SbPressColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "96 96 96",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FOCUSFEEDBACK (non inheritable): draw the focus feedback. Can be Yes or No. Default: Yes.",
        "AttributeName": "FOCUSFEEDBACK",
        "Name": "FocusFeedback",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ITEMFONTSTYLEid: text font style. When changed will actually set ITEMFONTid.",
        "AttributeName": "ITEMFONTSTYLE",
        "Name": "ItemFontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPFILESTARGET (non inheritable): Enable or disable the drop of files. Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled.",
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATINGDELAY",
        "Name": "FloatingDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMHIGHLIGHT",
        "Name": "SbImageBottomHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PSCOLOR: background color of a selected item. If not defined BACKCOLORid will be used. (since 3.30)",
        "AttributeName": "PSCOLOR",
        "Name": "PsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_BACKCOLOR",
        "Name": "SbBackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTPRESS",
        "Name": "SbImageLeftPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTHIGHLIGHT",
        "Name": "SbImageRightHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWARROWS",
        "Name": "ShowArrows",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLELINES",
        "Name": "VisibleLines",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOP",
        "Name": "SbImageTop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE: Size of the list. The Natural Size is defined by the number of elements in the list and the with of the largest item, the default has room for 5 characters in 1 item. The Natural Size ignores the list contents if VISIBLECOLUMNS or VISIBLELINES attributes are defined.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin of each item. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Alignment does not includes the padding area. Default value: \"2x2\".",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2x2",
        "IsNullable": false
      },
      {
        "Documentation": "VALUESTRING (non inheritable): changes or retrieves the value attribute using a string of an item. Works only when MULTIPLE=NO. When set it will search for the first item with the same string.",
        "AttributeName": "VALUESTRING",
        "Name": "ValueString",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HLCOLORALPHA: the transparency used to draw the selection. Default: 128. If set to 0 the selection box is not drawn.",
        "AttributeName": "HLCOLORALPHA",
        "Name": "HlColorAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "128",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWFLOATING",
        "Name": "ShowFloating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTELLIPSIS (non inheritable): If the text is larger that its box, an ellipsis (\"...\") will be placed near the last visible part of the text and replace the invisible part. It will be ignored when TEXTWRAP=Yes.",
        "AttributeName": "TEXTELLIPSIS",
        "Name": "TextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DRAGDROPLIST (non inheritable): prepare the Drag & Drop callbacks to support drag and drop of items between lists (IupList or IupFlatList), in the same IUP application. Drag & Drop attributes still need to be set in order to activate the drag & drop support, so the application can control if this list will be source and/or target. Default: NO.",
        "AttributeName": "DRAGDROPLIST",
        "Name": "DragDropList",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "REMOVEITEM (write-only): removes the given value. value starts at 1. If value is NULL or \"ALL\" removes all the items. Different from IupList, can be set before map.",
        "AttributeName": "REMOVEITEM",
        "Name": "RemoveItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TOPITEM (write-only): position the given item at the top of the list or near to make it visible.",
        "AttributeName": "TOPITEM",
        "Name": "TopItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_HIGHCOLOR",
        "Name": "SbHighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "132 132 132",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTINACTIVE",
        "Name": "SbImageLeftInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SCROLLBAR (read-only): is always \"NO\". So the IupCanvas native scrollbars are hidden. See the FLATSCROLLBAR attribute bellow. YAUTOHIDE and XAUTOHIDE will be always Yes.",
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTINACTIVE",
        "Name": "SbImageRightInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWDRAGDROP (creation only) (non inheritable): enables the internal drag and drop of items in the same list, and enables the DRAGDROP_CB callback. Default: \"NO\". Works only if MULTIPLE=NO. Drag & Drop attributes are NOT used.",
        "AttributeName": "SHOWDRAGDROP",
        "Name": "ShowDragDrop",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS (non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO.",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color of the text. Default: the global attribute TXTBGCOLOR.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ITEMFONTSIZEid: text font size. When changed will actually set ITEMFONTid.",
        "AttributeName": "ITEMFONTSIZE",
        "Name": "ItemFontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): horizontal and vertical alignment of the set image+text for each item. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\", combined to \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: \"ALEFT:ACENTER\". Partial values are also accepted, like \"ARIGHT\" or \":ATOP\", the other value will be obtained from the default value. Alignment does not includes the padding area.",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SPACING: internal space between each item. Different from IupList, it does not affects the internal margin. Not drawn with any item background color. Default: 0",
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTPRESS",
        "Name": "SbImageRightPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INSERTITEM",
        "Name": "InsertItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "TEXTPSCOLOR: foreground color of a selected item. If not defined FORECOLORid will be used. (since 3.30)",
        "AttributeName": "TEXTPSCOLOR",
        "Name": "TextPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FLATSCROLLBAR: Can be Yes, Vertical or Horizontal. Can be set only before map. Default: Yes.",
        "AttributeName": "FLATSCROLLBAR",
        "Name": "FlatScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERCOLOR: color used for the internal border. Default: \"50 150 255\". This is for the internal border.",
        "AttributeName": "BORDERCOLOR",
        "Name": "BorderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "50 150 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGENATIVEHANDLE",
        "Name": "ImageNativeHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFT",
        "Name": "SbImageLeft",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CSPACING: same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute. (since 3.29)",
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HLCOLOR: color of a filled box drawn over the selected item. Default: \"TXTHLCOLOR\".",
        "AttributeName": "HLCOLOR",
        "Name": "HlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTHLCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLECOLUMNS: Defines the number of visible columns for the Natural Size, this means that will act also as minimum number of visible columns. It uses a wider character size then the one used for the SIZE attribute so strings will fit better without the need of extra columns. Set this attribute to speed Natural Size computation for very large lists.",
        "AttributeName": "VISIBLECOLUMNS",
        "Name": "VisibleColumns",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPHIGHLIGHT",
        "Name": "SbImageTopHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_FORECOLOR",
        "Name": "SbForeColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "220 220 220",
        "IsNullable": false
      },
      {
        "Documentation": "APPENDITEM (write-only): inserts an item after the last item. Ignored if set before map.",
        "AttributeName": "APPENDITEM",
        "Name": "AppendItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MULTIPLE (creation only): Allows selecting several items simultaneously (multiple list). Default: \"NO\".",
        "AttributeName": "MULTIPLE",
        "Name": "Multiple",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Depends on the selection mode: MULTIPLE=YES: Sequence of '+' and '-' symbols indicating the state of each item. When setting this value, the user must provide the same amount of '+' and '-' symbols as the amount of items in the list. It can use ' ' (space) or another character so the current selection on that item will remain the same (since 3.28). MULTIPLE=NO: Integer number representing the selected item in the list (begins at 1). It returns NULL if there is no selected item. For both cases, when setting NULL all items are deselected.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEZOOM (non inheritable): if set the back image will be zoomed to occupy the full background. Aspect ratio is NOT preserved. Can be Yes or No. Default: No.",
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTHIGHLIGHT",
        "Name": "SbImageLeftHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FITTOBACKIMAGE (non inheritable): enable the natural size to be computed from the BACKIMAGE. If BACKIMAGE is not defined will be ignored. Can be Yes or No. Default: No.",
        "AttributeName": "FITTOBACKIMAGE",
        "Name": "FitToBackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ICONSPACING (non inheritable): spacing between the image and the text. Default: \"2\".",
        "AttributeName": "ICONSPACING",
        "Name": "IconSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGE (non inheritable): image name to be used as background. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOM",
        "Name": "SbImageBottom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMINACTIVE",
        "Name": "SbImageBottomInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ARROWIMAGES",
        "Name": "ArrowImages",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ITEMFGCOLORid: foreground color of the item at the given id. id starts at 1. If not defined FGCOLOR is used.",
        "AttributeName": "ITEMFGCOLOR",
        "Name": "ItemFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IDVALUE",
        "Name": "IdValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): the default value is \"NO\". This is the IupCanvas border. It is displayed around the scrollbars.",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "IMAGEPOSITION (non inheritable): Position of the image relative to the text when both are displayed. Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.",
        "AttributeName": "IMAGEPOSITION",
        "Name": "ImagePosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          },
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          }
        ],
        "Default": "LEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBARSIZE",
        "Name": "ScrollBarSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "15",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ITEMBGCOLORid: background color of the item at the given id. id starts at 1. If not defined BGCOLOR is used.",
        "AttributeName": "ITEMBGCOLOR",
        "Name": "ItemBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERWIDTH: line width used for the internal border. Default: \"0\". The internal borders are hidden by simply setting this value to 0. It is drawn inside the canvas, so inside the scrollbars.",
        "AttributeName": "BORDERWIDTH",
        "Name": "BorderWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTALIGNMENT (non inheritable): Horizontal text alignment for multiple lines. Can be: ALEFT, ARIGHT or ACENTER. Default: ALEFT.",
        "AttributeName": "TEXTALIGNMENT",
        "Name": "TextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          },
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPINACTIVE",
        "Name": "SbImageTopInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHT",
        "Name": "SbImageRight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTWRAP (non inheritable): For single line texts if the text is larger than its box the line will be automatically broken in multiple lines. Notice that this is done internally by the system, the element natural size will still use only a single line. For the remaining lines to be visible the element should use EXPAND=VERTICAL or set a SIZE/RASTERSIZE with enough height for the wrapped lines.",
        "AttributeName": "TEXTWRAP",
        "Name": "TextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ITEMFONTid: text font of the tab. If not defined FONT is used.",
        "AttributeName": "ITEMFONT",
        "Name": "ItemFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPPRESS",
        "Name": "SbImageTopPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_FOCUS_CB",
        "Name": "FlatFocus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_LEAVEWINDOW_CB",
        "Name": "FlatLeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP_CB",
        "Name": "DragDrop",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_BUTTON_CB",
        "Name": "FlatButton",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DBLCLICK_CB",
        "Name": "DblClick",
        "Arguments": [
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ACTION",
        "Name": "FlatAction",
        "Arguments": [
          "String",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_MOTION_CB",
        "Name": "FlatMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTISELECT_CB",
        "Name": "MultiSelect",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a thread element in IUP, which is not associated to any interface element. It is a very simple support to create and manage threads in a multithread environment. It inherits from IupUser. In non Windows systems uses the pthreads library.",
    "ClassName": "thread",
    "Name": "Thread",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Other",
    "Attributes": [
      {
        "Documentation": "START (write-only, non inheritable): starts the thread and calls the callback. Can be YES only. The thread exits when the callback is terminated.",
        "AttributeName": "START",
        "Name": "Start",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "YIELD (write-only, non inheritable): yield execution to another thread. value is ignored.",
        "AttributeName": "YIELD",
        "Name": "Yield",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ISCURRENT (read-only, non inheritable): returns if the started thread is the current thread.",
        "AttributeName": "ISCURRENT",
        "Name": "IsCurrent",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXIT (write-only, non inheritable): exit the current thread. Value contains the exit code.",
        "AttributeName": "EXIT",
        "Name": "Exit",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "JOIN (write-only, non inheritable): Waits until thread finishes. value is ignored.",
        "AttributeName": "JOIN",
        "Name": "Join",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LOCK",
        "Name": "Lock",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "THREAD_CB",
        "Name": "Thread",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an animated label interface element, which displays an image that is changed periodically. It uses an animation that is simply an IupUser with several IupImage as children. It inherits from IupLabel.",
    "ClassName": "animatedlabel",
    "Name": "AnimatedLabel",
    "ParentClassName": "label",
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WORDWRAP",
        "Name": "WordWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRAMETIME: The time between each frame. If the IupUser element has a FRAMETIME attribute it will be used to set the IupAnimatedLabel FRAMETIME attribute, but it can be overwritten later on.",
        "AttributeName": "FRAMETIME",
        "Name": "FrameTime",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "30",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRAMECOUNT (read-only): number of frames in the animation. It is simply IupGetChildCount of the given IupUser element.",
        "AttributeName": "FRAMECOUNT",
        "Name": "FrameCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RUNNING (read-only): return YES if the animation is running.",
        "AttributeName": "RUNNING",
        "Name": "Running",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SEPARATOR",
        "Name": "Separator",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKUP",
        "Name": "Markup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "START (write-only): starts the animation. The value is ignored. By default the animation is stopped.",
        "AttributeName": "START",
        "Name": "Start",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FIRST_CONTROL_HANDLE",
        "Name": "FirstControlHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ELLIPSIS",
        "Name": "Ellipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NEXT_CONTROL_HANDLE",
        "Name": "NextControlHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ANIMATION_HANDLE",
        "Name": "AnimationHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ANIMATION: the name of the element that contains the list of images. The value passed must be the name of an IupUser element with several IupImage as children. Use IupSetHandle or IupSetAttributeHandle to associate a child to a name. In Lua you can also use the element reference directly.",
        "AttributeName": "ANIMATION",
        "Name": "Animation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "STOP (write-only): stops the animation. The value is ignored.",
        "AttributeName": "STOP",
        "Name": "Stop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "STOPWHENHIDDEN: automatically stops the animation when the label is hidden. Default: Yes. (since 3.18)",
        "AttributeName": "STOPWHENHIDDEN",
        "Name": "StopWhenHidden",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates the Color Dialog element. It is a predefined dialog for selecting a color. (since IUP version 3.24 the native versions were removed and only the IupColorBrowser based dialog remains.)",
    "ClassName": "colordlg",
    "Name": "ColorDlg",
    "ParentClassName": "dialog",
    "ChildrenCount": 0,
    "NativeType": "Dialog",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLIENT",
        "Name": "MdiClient",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROL",
        "Name": "Control",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENU",
        "Name": "Menu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Menu",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOFLUSH",
        "Name": "NoFlush",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLEICON",
        "Name": "TrayTipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITYIMAGE",
        "Name": "OpacityImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HELPBUTTON",
        "Name": "HelpButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOFOCUS",
        "Name": "ShowNoFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATPARENT",
        "Name": "MaximizeAtParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITY",
        "Name": "Opacity",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COMPOSITED",
        "Name": "Composited",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDERSIZE",
        "Name": "BorderSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ICON",
        "Name": "Icon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW",
        "Name": "CustomFrameDraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENUBOX",
        "Name": "MenuBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWHELP: if enabled will display the Help button. The Help button is shown only if the HELP_CB callback is defined.",
        "AttributeName": "SHOWHELP",
        "Name": "ShowHelp",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVE",
        "Name": "MdiActive",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXBOX",
        "Name": "MaxBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGHINT",
        "Name": "DialogHint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWMINIMIZENEXT",
        "Name": "ShowMinimizeNext",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGFRAME",
        "Name": "DialogFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NACTIVE",
        "Name": "NActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLE",
        "Name": "TrayTipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVEUNDER",
        "Name": "SaveUnder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAY",
        "Name": "Tray",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESS",
        "Name": "TaskbarProgress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "DialogSize",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "STATUS (read-only): defined to \"1\" if the user pressed the Ok button, NULL if pressed the Cancel button.",
        "AttributeName": "STATUS",
        "Name": "Status",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIMENU",
        "Name": "MdiMenu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STARTFOCUS",
        "Name": "StartFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPDELAY",
        "Name": "TrayTipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONLIMITS",
        "Name": "CustomFrameCaptionLimits",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAME",
        "Name": "CustomFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDINEXT",
        "Name": "MdiNext",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE: Dialog title.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTESC",
        "Name": "DefaultEsc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PLACEMENT",
        "Name": "Placement",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Maximized",
            "StrValue": "MAXIMIZED",
            "IntValue": null
          },
          {
            "Name": "Minimized",
            "StrValue": "MINIMIZED",
            "IntValue": null
          },
          {
            "Name": "Full",
            "StrValue": "FULL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "LAYERALPHA",
        "Name": "LayerAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOON",
        "Name": "TrayTipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "COLORTABLE: list of colors separated by \";\". If a color is not specified then the default color is used. You can skip colors using \";;\". The maximum number of colors is 20.",
        "AttributeName": "COLORTABLE",
        "Name": "ColorTable",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIARRANGE",
        "Name": "MdiArrange",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "TileHorizontal",
            "StrValue": "TILEHORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "TileVertical",
            "StrValue": "TILEVERTICAL",
            "IntValue": null
          },
          {
            "Name": "Cascade",
            "StrValue": "CASCADE",
            "IntValue": null
          },
          {
            "Name": "Icon",
            "StrValue": "ICON",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZED",
        "Name": "Maximized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SHAPEIMAGE",
        "Name": "ShapeImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALPHA: if defined it will enable an alpha selection additional controls with its initial value. If the user pressed the Ok button contains the returned value. Default: no defined, or 255 if SHOWALPHA=YES.",
        "AttributeName": "ALPHA",
        "Name": "Alpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWALPHA: if enabled will display the alpha selection controls, regardless if ALPHA is defined for the initial value or not.",
        "AttributeName": "SHOWALPHA",
        "Name": "ShowAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOACTIVATE",
        "Name": "ShowNoActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATDIALOG",
        "Name": "MaximizeAtDialog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOPMOST",
        "Name": "TopMost",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARBUTTON",
        "Name": "TaskbarButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Show",
            "StrValue": "SHOW",
            "IntValue": null
          },
          {
            "Name": "Hide",
            "StrValue": "HIDE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINBOX",
        "Name": "MinBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTENTER",
        "Name": "DefaultEnter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MODAL",
        "Name": "Modal",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE",
        "Name": "MdiActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "MdiActivate",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PARENTDIALOG (creation only): Name of a dialog to be used as parent. This dialog will be always in front of the parent dialog.",
        "AttributeName": "PARENTDIALOG",
        "Name": "ParentDialog",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Dialog",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKGROUND",
        "Name": "Background",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDETASKBAR",
        "Name": "HideTaskbar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE: The color value in RGB coordinates and optionally alpha. It is used as the initial value and contains the selected value if the user pressed the Ok button. Format: \"R G B\" or \"R G B A\". Each component range from 0 to 255.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BRINGFRONT",
        "Name": "BringFront",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYIMAGE",
        "Name": "TrayImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUEHEX",
        "Name": "ValueHex",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWCOLORTABLE",
        "Name": "ShowColorTable",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1x1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVEWINDOW",
        "Name": "ActiveWindow",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUEHSI: The color value in HSI coordinates. It is used as the initial value and contains the selected value if the user pressed the Ok button. Format: \"H S I\". Each component range from 0-359, 0-100 and 0-100 respectively.",
        "AttributeName": "VALUEHSI",
        "Name": "ValueHsi",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONHEIGHT",
        "Name": "CustomFrameCaptionHeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWHEX: if enabled will display the Hexadecimal notation of the color.",
        "AttributeName": "SHOWHEX",
        "Name": "ShowHex",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMESIMULATE",
        "Name": "CustomFramesImulate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLOSEALL",
        "Name": "MdiCloseAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHRINK",
        "Name": "Shrink",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIP",
        "Name": "TrayTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOOLBOX",
        "Name": "ToolBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIFRAME",
        "Name": "MdiFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICHILD",
        "Name": "MdiChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSSTATE",
        "Name": "TaskbarProgressState",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "NoProgress",
            "StrValue": "NOPROGRESS",
            "IntValue": null
          },
          {
            "Name": "Indeterminate",
            "StrValue": "INDETERMINATE",
            "IntValue": null
          },
          {
            "Name": "Error",
            "StrValue": "ERROR",
            "IntValue": null
          },
          {
            "Name": "Paused",
            "StrValue": "PAUSED",
            "IntValue": null
          },
          {
            "Name": "Normal",
            "StrValue": "NORMAL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSVALUE",
        "Name": "TaskbarProgressValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FULLSCREEN",
        "Name": "FullScreen",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATIVEPARENT",
        "Name": "NativeParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEDIALOG",
        "Name": "MaximizedIalog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINIMIZED",
        "Name": "Minimized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIMULATEMODAL",
        "Name": "SimulateModal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "CLOSE_CB CLOSE_CB Called just before a dialog is closed when the user clicks the close button of the title bar or an equivalent action. Callback int function(Ihandle *ih); [in C] ih:close_cb() -> (ret: number) [in Lua] ih: identifies the element that activated the event. Returns: if IUP_IGNORE, it prevents the dialog from being closed. If you destroy the dialog in this callback, you must return IUP_IGNORE. IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "CLOSE_CB",
        "Name": "Close",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE_CB",
        "Name": "MdiActivate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "COLORUPDATE_CB",
        "Name": "ColorUpDate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEACTIVATE_CB",
        "Name": "CustomFrameActivate",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW_CB",
        "Name": "CustomFrameDraw",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SHOW_CB SHOW_CB Called right after the dialog is showed, hidden, maximized, minimized or restored from minimized/maximized. This callback is called when those actions were performed by the user or programmatically by the application. Callback int function(Ihandle *ih, int state); [in C] ih:show_cb(state: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. state: indicates which of the following situations generated the event: IUP_HIDE (since 3.0) IUP_SHOW IUP_RESTORE (was minimized or maximized) IUP_MINIMIZE IUP_MAXIMIZE (since 3.0) (not received in Motif when activated from the maximize button) Returns: IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "SHOW_CB",
        "Name": "Show",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYCLICK_CB",
        "Name": "TrayClick",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a timer which periodically invokes a callback when the time is up. Each timer should be destroyed using IupDestroy.",
    "ClassName": "timer",
    "Name": "Timer",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Other",
    "Attributes": [
      {
        "Documentation": "RUN: Starts and stops the timer. Possible values: \"YES\" or \"NO\". Returns the current timer state. If you have multiple threads start the timer in the main thread.",
        "AttributeName": "RUN",
        "Name": "Run",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TIME: The time interval in milliseconds. In Windows the minimum value is 10ms.",
        "AttributeName": "TIME",
        "Name": "Time",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "ACTION_CB",
        "Name": "Action",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container for composing elements vertically. It is a box that arranges the elements it contains from top to bottom. It does not have a native representation.",
    "ClassName": "vbox",
    "Name": "VBox",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MARGIN, CMARGIN: Defines a margin in pixels, CMARGIN is in the same units of the SIZE attribute. Its value has the format \"widthxheight\", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: \"0x0\" (no margin). (CMARGIN since 3.0)",
        "AttributeName": "MARGIN",
        "Name": "Margin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": "NORMALIZESIZE (non inheritable): normalizes all children natural size to be the biggest natural size among them. All natural width will be set to the biggest width, and all natural height will be set to the biggest height according to is value. Can be NO, HORIZONTAL, VERTICAL or BOTH. Default: \"NO\". Same as using IupNormalizer. (since 3.0)",
        "AttributeName": "NORMALIZESIZE",
        "Name": "NormalizeSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "Both",
            "StrValue": "BOTH",
            "IntValue": null
          },
          {
            "Name": "None",
            "StrValue": "NONE",
            "IntValue": null
          }
        ],
        "Default": "NONE",
        "IsNullable": false
      },
      {
        "Documentation": "NGAP, NCGAP (non inheritable): Same as GAP but are non inheritable. (since 3.0)",
        "AttributeName": "NGAP",
        "Name": "NGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPANDCHILDREN (non inheritable): forces all children to expand horizontally and to fully occupy its space available inside the box. Default: \"NO\". This has the same effect as setting EXPAND=HORIZONTAL on each child. (since 3.0)",
        "AttributeName": "EXPANDCHILDREN",
        "Name": "ExpandChildren",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "GAP, CGAP: Defines a vertical space in pixels between the children, CGAP is in the same units of the SIZE attribute for the height. Default: \"0\". (CGAP since 3.0)",
        "AttributeName": "GAP",
        "Name": "Gap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "MARGIN, CMARGIN: Defines a margin in pixels, CMARGIN is in the same units of the SIZE attribute. Its value has the format \"widthxheight\", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: \"0x0\" (no margin). (CMARGIN since 3.0)",
        "AttributeName": "CMARGIN",
        "Name": "CMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "HOMOGENEOUS (non inheritable): forces all children to get equal vertical space. The space height will be based on the highest child. Default: \"NO\". Notice that this does not changes the children size, only the available space for each one of them to expand. (since 3.0)",
        "AttributeName": "HOMOGENEOUS",
        "Name": "Homogeneous",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE / RASTERSIZE (non inheritable): Defines the height of the box. When consulted behaves as the standard SIZE/RASTERSIZE attributes. The standard format \"wxh\" can also be used, but width will be ignored (since 3.3).",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "GAP, CGAP: Defines a vertical space in pixels between the children, CGAP is in the same units of the SIZE attribute for the height. Default: \"0\". (CGAP since 3.0)",
        "AttributeName": "CGAP",
        "Name": "CGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NMARGIN, NCMARGIN (non inheritable): Same as MARGIN but are non inheritable. (since 3.0)",
        "AttributeName": "NMARGIN",
        "Name": "NMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "NMARGIN, NCMARGIN (non inheritable): Same as MARGIN but are non inheritable. (since 3.0)",
        "AttributeName": "NCMARGIN",
        "Name": "NcMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable*): The default value is \"YES\". See the documentation of the attribute for EXPAND inheritance.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (read-only) (non inheritable): Returns \"VERTICAL\". (since 3.28)",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "VERTICAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NGAP, NCGAP (non inheritable): Same as GAP but are non inheritable. (since 3.0)",
        "AttributeName": "NCGAP",
        "Name": "NcGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): Horizontally aligns the elements. Possible values: \"ALEFT\", \"ACENTER\", \"ARIGHT\". Default: \"ALEFT\".",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "UPDATEATTRIBFROMFONT_CB",
        "Name": "UpDateAttribfromFont",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a native container for composing elements in hidden layers with only one layer visible (just like IupZbox), but its visibility can be interactively controlled. The interaction is done in a line of tabs with titles and arranged according to the tab type. Also known as Notebook in native systems.",
    "ClassName": "tabs",
    "Name": "Tabs",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "COUNT (read-only) (non inheritable): returns the number of tabs. Same value returned by IupGetChildCount. (since 3.3)",
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FGCOLOR: Tabs title color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWCLOSE [Windows and GTK Only] (non inheritable): enables the close button on each tab. Default value: \"NO\". In Windows the close button imply the classic visual for the control. By default when closed the tab is hidden. To change that behavior use the TABCLOSE_CB callback. (since 3.10)",
        "AttributeName": "SHOWCLOSE",
        "Name": "ShowClose",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDOFFSET: Allow to specify a position offset for the child. Available for native containers only. It will not affect the natural size, and allows to position controls outside the client area. Format \"dxxdy\", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: 0x0. (since 3.14)",
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABTYPE",
        "Name": "TabType",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          },
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          },
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          }
        ],
        "Default": "TOP",
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "SIZE (non inheritable): The default size is the smallest size that fits its largest child. All child elements are considered even invisible ones.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABVISIBLE",
        "Name": "TabVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: In Windows and in GTK when in Windows, the tab buttons background it will be always defined by the system. In Windows the default background is different from the dialog background. Default: the global attribute DLGBGCOLOR.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE_HANDLE",
        "Name": "ValueHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDSIZEALL (non inheritable): compute the natural size using all children. If set to NO will compute using only the current tab. Default: Yes. (since 3.27)",
        "AttributeName": "CHILDSIZEALL",
        "Name": "ChildSizeAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TABORIENTATION (non inheritable): Indicates the orientation of tab text, which can be \"HORIZONTAL\" or \"VERTICAL\". Default is \"HORIZONTAL\". VERTICAL is supported only in GTK and in Windows. In Windows, it can NOT be set, it is dependent on the TABTYPE attribute, if TABTYPE=LEFT or TABTYPE=RIGHT then TABORIENTATION=VERTICAL, if TABTYPE=TOP or TABTYPE=BOTTOM then TABORIENTATION=HORIZONTAL. (GTK 2.6)",
        "AttributeName": "TABORIENTATION",
        "Name": "TabOrientation",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUEPOS",
        "Name": "ValuePos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ALPHA",
        "Name": "FlatAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABIMAGE",
        "Name": "TabImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MULTILINE [Windows Only] (non inheritable): Enable multiple lines of tab buttons. This will hide the tab scroll and fits to make all tab buttons visible. Can be \"YES\" or \"NO\". Default \"NO\". It is always enabled when TABTYPE=LEFT or TABTYPE=RIGHT. (since 3.0)",
        "AttributeName": "MULTILINE",
        "Name": "Multiline",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TABPADDING (non inheritable): internal margin of the tab title. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Default value: \"0x0\". (since 3.0) (renamed in 3.19 to avoid conflict with PADDING)",
        "AttributeName": "TABPADDING",
        "Name": "TabPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABTITLE",
        "Name": "TabTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TABCHANGE_CB",
        "Name": "TabChange",
        "Arguments": [
          "Handle",
          "Handle"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "RIGHTCLICK_CB",
        "Name": "RightClick",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TABCHANGEPOS_CB",
        "Name": "TabChangePos",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TABCLOSE_CB",
        "Name": "TabClose",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an editable field with one or more lines. Since IUP 3.0, IupText has support for multiple lines when the MULTILINE attribute is set to YES. Now when a IupMultiline element is created in fact a IupText element with MULTILINE=YES is created. See IupText",
    "ClassName": "multiline",
    "Name": "Multiline",
    "ParentClassName": "text",
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WORDWRAP",
        "Name": "WordWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PASSWORD",
        "Name": "Password",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CARET",
        "Name": "Caret",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "LinColPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKDECIMALSYMBOL",
        "Name": "MaskDecimalSymbol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OVERWRITE",
        "Name": "Overwrite",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDFORMATTAG_HANDLE",
        "Name": "AddFormatTagHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "User",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPININC",
        "Name": "SpinInc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOHIDESEL",
        "Name": "NoHideSel",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "APPENDNEWLINE",
        "Name": "AppendNewLine",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LOADRTF",
        "Name": "LoadRtf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKFLOAT",
        "Name": "MaskFloat",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "FloatRange",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDFORMATTAG",
        "Name": "AddFormatTag",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NC",
        "Name": "Nc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVERTF",
        "Name": "SaveRtf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INSERT",
        "Name": "Insert",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKREAL",
        "Name": "MaskReal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Signed",
            "StrValue": "SIGNED",
            "IntValue": null
          },
          {
            "Name": "Unsigned",
            "StrValue": "UNSIGNED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEVALUE",
        "Name": "LineValue",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLELINES",
        "Name": "VisibleLines",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPINMIN",
        "Name": "SpinMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LOADRTFSTATUS",
        "Name": "LoadRtfStatus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Ok",
            "StrValue": "OK",
            "IntValue": null
          },
          {
            "Name": "Failed",
            "StrValue": "FAILED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SELECTION",
        "Name": "Selection",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Selection",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSIZE",
        "Name": "TabsIZe",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "8",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUEMASKED",
        "Name": "ValueMasked",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTOPOS",
        "Name": "ScrollTopOs",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FORMATTING",
        "Name": "Formatting",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTO",
        "Name": "ScrollTo",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINECOUNT",
        "Name": "LineCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVERTFSTATUS",
        "Name": "SaveRtfStatus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Ok",
            "StrValue": "OK",
            "IntValue": null
          },
          {
            "Name": "Failed",
            "StrValue": "FAILED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPINWRAP",
        "Name": "SpinWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLECOLUMNS",
        "Name": "VisibleColumns",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "MASKINT",
        "Name": "MaskInt",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SPINVALUE",
        "Name": "SpinValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPINALIGN",
        "Name": "SpinAlign",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          }
        ],
        "Default": "RIGHT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKCASEI",
        "Name": "MaskCasei",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SELECTIONPOS",
        "Name": "SelectionPos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FILTER",
        "Name": "Filter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "LowerCase",
            "StrValue": "LOWERCASE",
            "IntValue": null
          },
          {
            "Name": "Number",
            "StrValue": "NUMBER",
            "IntValue": null
          },
          {
            "Name": "UpperCase",
            "StrValue": "UPPERCASE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SPINMAX",
        "Name": "SpinMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "100",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MULTILINE",
        "Name": "Multiline",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SELECTEDTEXT",
        "Name": "SelectedText",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHANGECASE",
        "Name": "ChangeCase",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Upper",
            "StrValue": "UPPER",
            "IntValue": null
          },
          {
            "Name": "Lower",
            "StrValue": "LOWER",
            "IntValue": null
          },
          {
            "Name": "Toggle",
            "StrValue": "TOGGLE",
            "IntValue": null
          },
          {
            "Name": "Title",
            "StrValue": "TITLE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUEBANNER",
        "Name": "CueBanner",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPIN",
        "Name": "Spin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CARETPOS",
        "Name": "CaretPos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPINAUTO",
        "Name": "SpinAuto",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASK",
        "Name": "Mask",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOHIDE",
        "Name": "AutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOREDRAW",
        "Name": "AutoRedraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIPBOARD",
        "Name": "Clipboard",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Copy",
            "StrValue": "COPY",
            "IntValue": null
          },
          {
            "Name": "Cut",
            "StrValue": "CUT",
            "IntValue": null
          },
          {
            "Name": "Paste",
            "StrValue": "PASTE",
            "IntValue": null
          },
          {
            "Name": "Clear",
            "StrValue": "CLEAR",
            "IntValue": null
          },
          {
            "Name": "Undo",
            "StrValue": "UNDO",
            "IntValue": null
          },
          {
            "Name": "Redo",
            "StrValue": "REDO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "REMOVEFORMATTING",
        "Name": "RemoveFormatting",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "All",
            "StrValue": "ALL",
            "IntValue": null
          },
          {
            "Name": "Selection",
            "StrValue": "SELECTION",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "READONLY",
        "Name": "Readonly",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "APPEND",
        "Name": "Append",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKNOEMPTY",
        "Name": "MaskNoEmpty",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CARET_CB",
        "Name": "Caret",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SPIN_CB",
        "Name": "Spin",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a native container, which draws a frame with a title around its child. The decorations are manually drawn. The control inherits from IupBackgroundBox.",
    "ClassName": "flatframe",
    "Name": "FlatFrame",
    "ParentClassName": "backgroundbox",
    "ChildrenCount": 1,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANVASBOX",
        "Name": "CanvasBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "DECORATION [read-only] (non inheritable): return Yes.",
        "AttributeName": "DECORATION",
        "Name": "Decoration",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKCOLOR",
        "Name": "BackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLEIMAGE (non inheritable): image name to be used in title. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "TITLEIMAGE",
        "Name": "TitleImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLETEXTORIENTATION",
        "Name": "TitleTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLETEXTCLIP",
        "Name": "TitleTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRAMESPACE (non inheritable): spacing between frame line and child area. Used only when FRAME=Yes. Default: 2.",
        "AttributeName": "FRAMESPACE",
        "Name": "FramesPace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Text the user will see at the top of the frame.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "TITLECOLOR (non inheritable): title text color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "TITLECOLOR",
        "Name": "TitleColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": "TITLELINECOLOR (non inheritable): title line color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "TITLELINECOLOR",
        "Name": "TitleLineColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: background color of the child area. If not defined it will use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLEIMAGEPOSITION (non inheritable): position of the image relative to the text when both are displayed. Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.",
        "AttributeName": "TITLEIMAGEPOSITION",
        "Name": "TitleImagePosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "LEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLETEXTALIGNMENT (non inheritable): horizontal text alignment for multiple lines. Can be: ALEFT, ARIGHT or ACENTER. Default: ALEFT. (since 3.22)",
        "AttributeName": "TITLETEXTALIGNMENT",
        "Name": "TitleTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DECOROFFSET and DECORSIZE [read-only] (non inheritable): are calculated according FRAME, FRAMEWIDTH, FRAMESPACE and the title area.",
        "AttributeName": "DECOROFFSET",
        "Name": "DecorOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRAMECOLOR (non inheritable): frame line color. Default: \"160 160 160\" (changed in 3.28).",
        "AttributeName": "FRAMECOLOR",
        "Name": "FrameColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160 160 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLEIMAGESPACING (non inheritable): spacing between the image and the text. Default: \"2\".",
        "AttributeName": "TITLEIMAGESPACING",
        "Name": "TitleImagesPacIng",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLEBGCOLOR (non inheritable): background color of the title area. If not defined BGCOLOR will be used (since 3.25).",
        "AttributeName": "TITLEBGCOLOR",
        "Name": "TitleBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DECORSIZE",
        "Name": "DecorSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "TITLELINEWIDTH (non inheritable): title line width. Default: 1.",
        "AttributeName": "TITLELINEWIDTH",
        "Name": "TitleLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLETEXTELLIPSIS (non inheritable): If the text is larger that its box, an ellipsis (\"...\") will be placed near the last visible part of the text and replace the invisible part. It will be ignored when TEXTWRAP=Yes. (since 3.25)",
        "AttributeName": "TITLETEXTELLIPSIS",
        "Name": "TitleTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLEALIGNMENT (non inheritable): horizontal alignment. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\". Default: \"ACENTER\". Alignment does not includes the padding area.",
        "AttributeName": "TITLEALIGNMENT",
        "Name": "TitleAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLETEXTWRAP (non inheritable): For single line texts if the text is larger than its box the line will be automatically broken in multiple lines. Notice that this is done internally by the system, the element natural size will still use only a single line. For the remaining lines to be visible the element should use EXPAND=VERTICAL or set a SIZE/RASTERSIZE with enough height for the wrapped lines. (since 3.25)",
        "AttributeName": "TITLETEXTWRAP",
        "Name": "TitleTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEPADDING",
        "Name": "TitlePadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "TITLELINE (non inheritable): enables the title line. Horizontal line that separates the title area from the child area. Default: Yes.",
        "AttributeName": "TITLELINE",
        "Name": "TitleLine",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "FRAMEWIDTH (non inheritable): frame line width. Default: 1.",
        "AttributeName": "FRAMEWIDTH",
        "Name": "FrameWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "FRAME (non inheritable): enables the frame line. Default: Yes. If value is CROSSTITLE the the frame at top crosses the title, like traditional frames in native systems (since 3.25). When CROSSTITLE is used TITLELINE and TITLEALIGNMENT are ignored, the title line is never drawn and alignment is always left.",
        "AttributeName": "FRAME",
        "Name": "Frame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          },
          {
            "Name": "CrossTitle",
            "StrValue": "CROSSTITLE",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an image to be shown on a label, button, toggle, or as a cursor. (IupImageRGB and IupImageRGBA, since 3.0)",
    "ClassName": "image",
    "Name": "Image",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Image",
    "Attributes": [
      {
        "Documentation": "RESIZE (write-only): given a new size if format \"widthxheight\", changes WIDTH and HEIGHT attributes, and resizes the image contents using bilinear interpolation for RGB and RGBA images and nearest neighborhood for 8 bits. (since 3.24)",
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IDVALUE",
        "Name": "IdValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SCALED (read-only): returns Yes if the image has been resized. (since 3.25)",
        "AttributeName": "SCALED",
        "Name": "Scaled",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DPI: resolution expected for display. Used when AUTOSCALE=DPI. If not defined the global attribute IMAGESDPI will be used. (since 3.23)",
        "AttributeName": "DPI",
        "Name": "Dpi",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BPP (read-only): returns the number of bits per pixel in the image. Images created with IupImage returns 8, with IupImageRGB returns 24 and with IupImageRGBA returns 32. (since 3.0)",
        "AttributeName": "BPP",
        "Name": "Bpp",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RESHAPE (write-only): given a new size if format \"widthxheight\", allocates enough memory for the new size and changes WIDTH and HEIGHT attributes. Image contents is ignored and it will contain trash after the reshape. (since 3.24)",
        "AttributeName": "RESHAPE",
        "Name": "Reshape",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHANNELS (read-only): returns the number of channels in the image. Images created with IupImage returns 1, with IupImageRGB returns 3 and with IupImageRGBA returns 4. (since 3.0)",
        "AttributeName": "CHANNELS",
        "Name": "Channels",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HOTSPOT: Hotspot is the position inside a cursor image indicating the mouse-click spot. Its value is given by the x and y coordinates inside a cursor image. Its value has the format \"x:y\", where x and y are integers defining the coordinates in pixels. Default: \"0:0\".",
        "AttributeName": "HOTSPOT",
        "Name": "Hotspot",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0:0",
        "IsNullable": false
      },
      {
        "Documentation": "AUTOSCALE: automatically scale the image by a given real factor. Can be \"DPI\" or a scale factor. If not defined the global attribute IMAGEAUTOSCALE will be used. Values are the same of the global attribute. The minimum resulted size when automatically resized is 24 pixels height (since 3.29). (since 3.16)",
        "AttributeName": "AUTOSCALE",
        "Name": "AutoScale",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HEIGHT (read-only): Image height in pixels.",
        "AttributeName": "HEIGHT",
        "Name": "Height",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CLEARCACHE (write-only): clears the internal native image cache, so WID can be dynamically changed. (since 3.24)",
        "AttributeName": "CLEARCACHE",
        "Name": "ClearCache",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: The color used for transparency. If not defined uses the BGCOLOR of the control that contains the image.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": "ORIGINALSCALE (read-only): returns the width and height before the image was scaled. (since 3.25)",
        "AttributeName": "ORIGINALSCALE",
        "Name": "OriginalScale",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WIDTH",
        "Name": "Width",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RASTERSIZE (read-only): returns the image size in pixels. (since 3.0)",
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "WID (read-only): returns the internal pixels data pointer. (since 3.0)",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": []
  },
  {
    "Documentation": "Creates an interface element that is a button with a drop down arrow. It can function as a button and as a dropdown. Its visual presentation can contain a text and/or an image. When dropped displays a child inside a dialog with no decorations, so it can simulate the initial function of a dropdown list, but it can display any layout of IUP elements inside the dropped dialog. When the user click outside the dialog, it is automatically closed. It inherits from IupCanvas.",
    "ClassName": "dropbutton",
    "Name": "DropButton",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "HASFOCUS (read-only): returns the button state if has focus. Can be Yes or No.",
        "AttributeName": "HASFOCUS",
        "Name": "HasFocus",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEHIGHLIGHT (non inheritable): foreground image name of the element in highlight state. If it is not defined then the FRONTIMAGE is used.",
        "AttributeName": "FRONTIMAGEHIGHLIGHT",
        "Name": "FrontImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ARROWIMAGEPRESS (non inheritable): Arrow image name of the element in pressed state. If it is not defined then the ARROWIMAGE is used.",
        "AttributeName": "ARROWIMAGEPRESS",
        "Name": "ArrowImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FOCUSFEEDBACK (non inheritable): draw the focus feedback. Can be Yes or No. Default: Yes. (since 3.26)",
        "AttributeName": "FOCUSFEEDBACK",
        "Name": "FocusFeedback",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the button will respect CANFOCUS in opposite to the other controls. Default: YES.",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PSCOLOR: background color used to indicate a press state. Pre-defined to \"150 200 235\". Can be set to NULL. If NULL BGCOLOR will be used instead.",
        "AttributeName": "PSCOLOR",
        "Name": "PsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "DROPPOSITION (non inheritable): the drop child can be shown in four different positions relative to the drop button: BOTTOMLEFT, TOPLEFT, BOTTOMRIGHT, TOPRIGHT. BOTTOMLEFT the top-left corner of the drop child is aligned with the bottom-left corner of the drop button, BOTTOMRIGHT the top-right corner of the drop child is aligned with the bottom-right corner of the drop button, TOPLEFT the bottom-left corner of the drop child is aligned with the top-left corner of the drop button, TOPRIGHT the bottom-right corner of the drop child is aligned with the top-right corner of the drop button. Default: BOTTOMLEFT.",
        "AttributeName": "DROPPOSITION",
        "Name": "DropPosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "BOTTOMLEFT",
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): Image name. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ARROWPADDING (non inheritable): internal margin for the arrow. It is inside ARROWSIZE. Default: 5.",
        "AttributeName": "ARROWPADDING",
        "Name": "ArrowPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "4",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ARROWALIGN (non inheritable): vertical arrow alignment. Can be: TOP, CENTER or BOTTOM. Default: CENTER. (since 3.27)",
        "AttributeName": "ARROWALIGN",
        "Name": "ArrowAlign",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "CENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"NO\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Alignment does not includes the padding area. Default value: \"3x3\". Value can be DEFAULTBUTTONPADDING, so the global attribute of this name will be used instead (since 3.29).",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "3x3",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERHLCOLOR: color used for borders when highlighted. Default use BORDERCOLOR.",
        "AttributeName": "BORDERHLCOLOR",
        "Name": "BorderHlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTHLCOLOR: text color used to indicate a highlight state. If not defined FGCOLOR will be used instead. (since 3.26)",
        "AttributeName": "TEXTHLCOLOR",
        "Name": "TextHlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTCLIP",
        "Name": "TextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTELLIPSIS (non inheritable): If the text is larger that its box, an ellipsis (\"...\") will be placed near the last visible part of the text and replace the invisible part. It will be ignored when TEXTWRAP=Yes. (since 3.25)",
        "AttributeName": "TEXTELLIPSIS",
        "Name": "TextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEINACTIVE (non inheritable): background image name of the element when inactive. If it is not defined then the BACKIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "BACKIMAGEINACTIVE",
        "Name": "BackImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPCHILD: the name of the element that will be displayed when dropped. Use IupSetHandle or IupSetAttributeHandle to associate a child to a name. In Lua you can also use the element reference directly. The drop dialog, were the drop child is inserted, is available right after setting the attribute using IupGetDialog on the drop child handle. See the Notes bellow for more information.",
        "AttributeName": "DROPCHILD",
        "Name": "DropChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Label's text. The '\\n' character is accepted for line change.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS (non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO.",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color. If text and image are not defined, the button is configured to simply show a color, in this case set the button size because the natural size will be very small. If not defined it will use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HIGHLIGHTED (read-only): returns the button state if highlighted. Can be Yes or No.",
        "AttributeName": "HIGHLIGHTED",
        "Name": "HighlightEd",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): horizontal and vertical alignment of the set image+text. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\", combined to \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: \"ALEFT:ACENTER\". Partial values are also accepted, like \"ARIGHT\" or \":ATOP\", the other value will be obtained from the default value. Alignment does not includes the padding area.",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SPACING (non inheritable): spacing between the image and the text. Default: \"2\".",
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": true
      },
      {
        "Documentation": "BORDERPSCOLOR: color used for borders when pressed or selected. Default use BORDERCOLOR.",
        "AttributeName": "BORDERPSCOLOR",
        "Name": "BorderPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "TEXTPSCOLOR: text color used to indicate a press state. If not defined FGCOLOR will be used instead. (since 3.26)",
        "AttributeName": "TEXTPSCOLOR",
        "Name": "TextPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERCOLOR: color used for borders. Default: \"50 150 255\". This is for the IupDropButton drawn border.",
        "AttributeName": "BORDERCOLOR",
        "Name": "BorderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "50 150 255",
        "IsNullable": false
      },
      {
        "Documentation": "ARROWSIZE (non inheritable): size of the area occupied by the arrow, even when using images. Default: 24",
        "AttributeName": "ARROWSIZE",
        "Name": "ArrowsIZe",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "24",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ARROWIMAGEHIGHLIGHT (non inheritable): Arrow image name of the element in highlight state. If it is not defined then the ARROWIMAGE is used.",
        "AttributeName": "ARROWIMAGEHIGHLIGHT",
        "Name": "ArrowImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEINACTIVE (non inheritable): foreground image name of the element when inactive. If it is not defined then the FRONTIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "FRONTIMAGEINACTIVE",
        "Name": "FrontImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ARROWIMAGEINACTIVE (non inheritable): Arrow image name of the element when inactive. If it is not defined then the ARROWIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "ARROWIMAGEINACTIVE",
        "Name": "ArrowImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEHIGHLIGHT (non inheritable): background image name of the element in highlight state. If it is not defined then the BACKIMAGE is used.",
        "AttributeName": "BACKIMAGEHIGHLIGHT",
        "Name": "BackImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEPRESS (non inheritable): foreground image name of the element in pressed state. If it is not defined then the FRONTIMAGE is used.",
        "AttributeName": "FRONTIMAGEPRESS",
        "Name": "FrontImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CSPACING: same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute. (since 3.29)",
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HLCOLOR: background color used to indicate a highlight state. Pre-defined to \"200 225 245\". Can be set to NULL. If NULL BGCOLOR will be used instead.",
        "AttributeName": "HLCOLOR",
        "Name": "HlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGE (non inheritable): image name to be used as foreground. The foreground image is drawn in the same position as the background, but it is drawn at last. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "FRONTIMAGE",
        "Name": "FrontImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FIRST_CONTROL_HANDLE",
        "Name": "FirstControlHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLECOLUMNS: Defines the number of visible columns for the Natural Size, this means that will act also as minimum number of visible columns. It uses a wider character size then the one used for the SIZE attribute so strings will fit better without the need of extra columns. Padding will be around the visible columns.",
        "AttributeName": "VISIBLECOLUMNS",
        "Name": "VisibleColumns",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "IMAGEPRESS (non inheritable): Image name of the element in pressed state. If it is not defined then the IMAGE is used.",
        "AttributeName": "IMAGEPRESS",
        "Name": "ImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ARROWIMAGE (non inheritable): Arrow image name. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "ARROWIMAGE",
        "Name": "ArrowImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPCHILD_HANDLE: same as DROPCHILD but directly using the Ihandle* of the element.",
        "AttributeName": "DROPCHILD_HANDLE",
        "Name": "DropChildHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEZOOM (non inheritable): if set the back image will be zoomed to occupy the full background. Aspect ratio is NOT preserved. Can be Yes or No. Default: No. (since 3.25)",
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NEXT_CONTROL_HANDLE",
        "Name": "NextControlHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTORIENTATION",
        "Name": "TextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FITTOBACKIMAGE (non inheritable): enable the natural size to be computed from the BACKIMAGE. If BACKIMAGE is not defined will be ignored. Can be Yes or No. Default: No.",
        "AttributeName": "FITTOBACKIMAGE",
        "Name": "FitToBackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEHIGHLIGHT (non inheritable): Image name of the element in highlight state. If it is not defined then the IMAGE is used.",
        "AttributeName": "IMAGEHIGHLIGHT",
        "Name": "ImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGE (non inheritable): image name to be used as background. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEINACTIVE (non inheritable): Image name of the element when inactive. If it is not defined then the IMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "IMAGEINACTIVE",
        "Name": "ImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPONARROW (non inheritable): when enabled only clicking on the drop arrow will show the drop child. Clicking on the remaining of the button will call FLAT_ACTION. There will be two separates areas in the button, one for the drop arrow and one for the regular button. When disabled there will be only one area, and the drop child will be show any where the button is clicked, the callback FLAT_ACTION will not be called. Default: Yes.",
        "AttributeName": "DROPONARROW",
        "Name": "DropOnArrow",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": "SHOWDROPDOWN (write-only): opens or closes the dropdown child. Can be \"YES\" or \"NO\". Ignored if set before map.",
        "AttributeName": "SHOWDROPDOWN",
        "Name": "ShowDropDown",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "SHOWBORDER: by default borders are drawn only when the button is highlighted, if SHOWBORDER=Yes borders are always show. When SHOWBORDER=Yes and BGCOLOR is not defined, the actual BGCOLOR will be a darker version of the background color of the native parent.",
        "AttributeName": "SHOWBORDER",
        "Name": "ShowBorder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ARROWIMAGES (non inheritable): replace the drawn arrows by the following images. Make sure their sizes are equal or smaller than ARROWSIZE. Default: No.",
        "AttributeName": "ARROWIMAGES",
        "Name": "ArrowImages",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): the default value is \"NO\". This is the IupCanvas border.",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "ARROWACTIVE (non inheritable): the arrow can be disabled when the button is enabled. If there is no drop child the arrow will be automatically disabled.",
        "AttributeName": "ARROWACTIVE",
        "Name": "ArrowActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "IMAGEPOSITION (non inheritable): Position of the image relative to the text when both are displayed. Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.",
        "AttributeName": "IMAGEPOSITION",
        "Name": "ImagePosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          },
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          }
        ],
        "Default": "LEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERWIDTH: line width used for borders. Default: \"1\". Any borders can be hidden by simply setting this value to 0. This is for the IupDropButton drawn border.",
        "AttributeName": "BORDERWIDTH",
        "Name": "BorderWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTALIGNMENT (non inheritable): Horizontal text alignment for multiple lines. Can be: ALEFT, ARIGHT or ACENTER. Default: ALEFT.",
        "AttributeName": "TEXTALIGNMENT",
        "Name": "TextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          },
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTWRAP (non inheritable): For single line texts if the text is larger than its box the line will be automatically broken in multiple lines. Notice that this is done internally by the system, the element natural size will still use only a single line. For the remaining lines to be visible the element should use EXPAND=VERTICAL or set a SIZE/RASTERSIZE with enough height for the wrapped lines. (since 3.25)",
        "AttributeName": "TEXTWRAP",
        "Name": "TextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEPRESS (non inheritable): background image name of the element in pressed state. If it is not defined then the BACKIMAGE is used.",
        "AttributeName": "BACKIMAGEPRESS",
        "Name": "BackImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": "ARROWCOLOR: color used for the arrow. Default use FGCOLOR.",
        "AttributeName": "ARROWCOLOR",
        "Name": "ArrowColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PRESSED (read-only): returns the button state if pressed. Can be Yes or No.",
        "AttributeName": "PRESSED",
        "Name": "Pressed",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_FOCUS_CB",
        "Name": "FlatFocus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_LEAVEWINDOW_CB",
        "Name": "FlatLeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ENTERWINDOW_CB",
        "Name": "FlatEnterWindow",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_BUTTON_CB",
        "Name": "FlatButton",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPSHOW_CB",
        "Name": "DropShow",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ACTION",
        "Name": "FlatAction",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_MOTION_CB",
        "Name": "FlatMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDOWN_CB",
        "Name": "DropDown",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates void element, which occupies an empty space. It does not have a native representation.",
    "ClassName": "space",
    "Name": "Space",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an interface element that is a Separator, but it does not have native decorations. It inherits from IupCanvas.",
    "ClassName": "flatseparator",
    "Name": "FlatSeparator",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): Its behavior depends on the orientation. It will expand in the direction of the separator, but occupying only the available space.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (non inheritable): Indicates the orientation of the separator. Possible values are \"VERTICAL\" or \"HORIZONTAL\". Default: \"VERTICAL\".",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "VERTICAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "COLOR (non inheritable): Changes the color of the separator. Default: \"192 192 192\".",
        "AttributeName": "COLOR",
        "Name": "Color",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160, 160, 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "STYLE (non inheritable): The separator appearance. Can be: \"LINE\", \"SUNKENLINE\", \"DUALLINES\", \"GRIP\", \"FILL\" or \"EMPTY\". Default: SUNKENLINE. FILL is a rectangle filled with COLOR. EMPTY uses the parent background color only, COLOR is ignored (since 3.27).",
        "AttributeName": "STYLE",
        "Name": "Style",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "SUNKENLINE",
        "IsNullable": false
      },
      {
        "Documentation": "BARSIZE (non inheritable): controls the size of the separator in the opposite direction of its orientation. Default: 5.",
        "AttributeName": "BARSIZE",
        "Name": "BarSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container that allows its child to be resized. Allows expanding and contracting the child size in one direction. It does not have a native representation but it contains also a IupFlatSeparator to implement the bar handler.",
    "ClassName": "sbox",
    "Name": "SBox",
    "ParentClassName": null,
    "ChildrenCount": 2,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BARSIZE (non inheritable): controls the size of the bar handler. Default: 5. (since 3.27)",
        "AttributeName": "BARSIZE",
        "Name": "BarSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "LAYOUTDRAG (non inheritable): When the bar is moved automatically update the children layout. Default: YES. If set to NO then the layout will be updated only when the mouse drag is released. (since 3.27)",
        "AttributeName": "LAYOUTDRAG",
        "Name": "LayoutDrag",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): It will expand automatically only in the direction opposite to the handler.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "COLOR: Changes the color of the bar handler. Default: \"160 160 160\". (changed in 3.28 to match IupSplit default color)",
        "AttributeName": "COLOR",
        "Name": "Color",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160 160 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWGRIP (non inheritable): Shows the bar grip affordance. Default: NO. When set to NO, COLOR is used to fill the grip area. If set to \"LINES\" then instead of the traditional grip appearance, it will be two parallel lines. (since 3.27)",
        "AttributeName": "SHOWGRIP",
        "Name": "ShowGrip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DIRECTION (creation only): Indicates the direction of the resize and the position of the bar handler. Possible values are \"NORTH\", \"SOUTH\" (vertical direction), \"EAST\" or \"WEST\" (horizontal direction). Default: \"EAST\".",
        "AttributeName": "DIRECTION",
        "Name": "Direction",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "North",
            "StrValue": "NORTH",
            "IntValue": null
          },
          {
            "Name": "South",
            "StrValue": "SOUTH",
            "IntValue": null
          },
          {
            "Name": "West",
            "StrValue": "WEST",
            "IntValue": null
          },
          {
            "Name": "East",
            "StrValue": "EAST",
            "IntValue": null
          }
        ],
        "Default": "EAST",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an interface element that is a label, but it does not have native decorations. Its visual presentation can contain a text and/or an image. It behaves just like an IupLabel, but since it is not a native control it has more flexibility for additional options. It inherits from IupCanvas.",
    "ClassName": "flatlabel",
    "Name": "FlatLabel",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): Image name. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"NO\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Default value: \"0x0\". Alignment does not includes the padding area.",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTCLIP",
        "Name": "TextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTELLIPSIS (non inheritable): If the text is larger that its box, an ellipsis (\"...\") will be placed near the last visible part of the text and replace the invisible part. It will be ignored when TEXTWRAP=Yes. (since 3.25)",
        "AttributeName": "TEXTELLIPSIS",
        "Name": "TextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Label's text. The '\\n' character is accepted for line change.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: ignored. It will use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): horizontal and vertical alignment of the set image+text. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\", combined to \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: \"ALEFT:ACENTER\". Partial values are also accepted, like \"ARIGHT\" or \":ATOP\", the other value will be obtained from the default value. Alignment does not includes the padding area.",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SPACING (non inheritable): spacing between the image and the text. Default: \"2\".",
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FRONTIMAGEINACTIVE",
        "Name": "FrontImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CSPACING: same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute. (since 3.29)",
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGE (non inheritable): image name to be used as foreground. The foreground image is drawn in the same position as the background, but it is drawn at last. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "FRONTIMAGE",
        "Name": "FrontImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEZOOM (non inheritable): if set the back image will be zoomed to occupy the full background. Aspect ratio is NOT preserved. Can be Yes or No. Default: No. (since 3.25)",
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTORIENTATION",
        "Name": "TextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FITTOBACKIMAGE (non inheritable): enable the natural size to be computed from the BACKIMAGE. If BACKIMAGE is not defined will be ignored. Can be Yes or No. Default: No.",
        "AttributeName": "FITTOBACKIMAGE",
        "Name": "FitToBackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGE (non inheritable): image name to be used as background. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEINACTIVE (non inheritable): Image name of the element when inactive. If it is not defined then the IMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "IMAGEINACTIVE",
        "Name": "ImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): the default value is \"NO\". This is the IupCanvas border.",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "IMAGEPOSITION (non inheritable): Position of the image relative to the text when both are displayed. Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.",
        "AttributeName": "IMAGEPOSITION",
        "Name": "ImagePosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          },
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          }
        ],
        "Default": "LEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTALIGNMENT (non inheritable): Horizontal text alignment for multiple lines. Can be: ALEFT, ARIGHT or ACENTER. Default: ALEFT. (since 3.22)",
        "AttributeName": "TEXTALIGNMENT",
        "Name": "TextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          },
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTWRAP (non inheritable): For single line texts if the text is larger than its box the line will be automatically broken in multiple lines. Notice that this is done internally by the system, the element natural size will still use only a single line. For the remaining lines to be visible the element should use EXPAND=VERTICAL or set a SIZE/RASTERSIZE with enough height for the wrapped lines. (since 3.25)",
        "AttributeName": "TEXTWRAP",
        "Name": "TextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Construction element used only in IupParamBox. It is not mapped in the native system, but it will exist while its IupParamBox container exists.",
    "ClassName": "param",
    "Name": "Param",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "INTERVAL",
        "Name": "Interval",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIRECTORY",
        "Name": "Directory",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "LABEL [read-only]: returns an IUP Ihandle*, the label associated with the parameter. Valid only after the IupParamBox is created.",
        "AttributeName": "LABEL",
        "Name": "Label",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOOVERWRITEPROMPT",
        "Name": "NoOverwritePrompt",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PRECISION",
        "Name": "Precision",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PARTIAL",
        "Name": "Partial",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "INDEX [read-only]: returns an integer value associated with the parameter index. IupGetInt can also be used. Valid only after the IupParamBox is created.",
        "AttributeName": "INDEX",
        "Name": "Index",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MULTILINE",
        "Name": "Multiline",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FILTER",
        "Name": "Filter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAX",
        "Name": "Max",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOFRAME",
        "Name": "NoFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INDENT",
        "Name": "Indent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CONTROL [read-only]: returns an IUP Ihandle*, the real control associated with the parameter. Valid only after the IupParamBox is created.",
        "AttributeName": "CONTROL",
        "Name": "Control",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON1",
        "Name": "Button1",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON2",
        "Name": "Button2",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASK",
        "Name": "Mask",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON3",
        "Name": "Button3",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRUE",
        "Name": "True",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ANGLE",
        "Name": "Angle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TYPE",
        "Name": "Type",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FALSE",
        "Name": "False",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGTYPE",
        "Name": "DialogType",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Save",
            "StrValue": "SAVE",
            "IntValue": null
          },
          {
            "Name": "Dir",
            "StrValue": "DIR",
            "IntValue": null
          },
          {
            "Name": "Open",
            "StrValue": "OPEN",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOCHANGEDIR",
        "Name": "NoChangeDir",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "AUXCONTROL [read-only]: returns an IUP Ihandle*, the auxiliary control associated with the parameter (for instance Valuators). Valid only after the IupParamBox is created.",
        "AttributeName": "AUXCONTROL",
        "Name": "AuxControl",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MIN",
        "Name": "Min",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DATATYPE",
        "Name": "DataType",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STEP",
        "Name": "Step",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an interface element that is a button. When selected, this element activates a function in the application. Its visual presentation can contain a text and/or an image.",
    "ClassName": "button",
    "Name": "Button",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMPRESS (non inheritable): Image name of the pressed button. If IMPRESS and IMAGE are defined, the button borders are not shown and not computed in natural size. When the button is clicked the pressed image does not offset. In Motif the button will lose its focus feedback also. (GTK 2.6)",
        "AttributeName": "IMPRESS",
        "Name": "Impress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMINACTIVE (non inheritable): Image name of the element when inactive. If it is not defined then the IMAGE is used and the colors will be replaced by a modified version of the background color creating the disabled effect. GTK will also change the inactive image to look like other inactive objects. (GTK 2.6)",
        "AttributeName": "IMINACTIVE",
        "Name": "IMinActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the button will respect CANFOCUS differently to some other controls. Default: YES. (since 3.0)",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): Image name. If set before map defines the behavior of the button to contain an image. The natural size will be size of the image in pixels, plus the button borders. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage. If TITLE is also defined and not empty both will be shown (except in Motif). (GTK 2.6)",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Default value: \"0x0\". Value can be DEFAULTBUTTONPADDING, so the global attribute of this name will be used instead (since 3.29). (since 3.0)",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Button's text. If IMAGE is not defined before map, then the default behavior is to contain only a text. The button behavior can not be changed after map. The natural size will be larger enough to include all the text in the selected font, even using multiple lines, plus the button borders. The '\\n' character is accepted for line change. The \"&\" character can be used to define a mnemonic, the next character will be used as key. Use \"&&\" to show the \"&\" character instead on defining a mnemonic. The button can be activated from any control in the dialog using the \"Alt+key\" combination. In old Motif versions (2.1) using a '\\n' causes an invalid memory access inside Motif. (mnemonic support since 3.0)",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS(non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO. (since 3.23)",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color. If text and image are not defined, the button is configured to simply show a color, in this case set the button size because the natural size will be very small. In Windows and in GTK 3, the BGCOLOR attribute is ignored if text or image is defined. Default: the global attribute DLGBGCOLOR. BGCOLOR is ignored when FLAT=YES because it will be used the background from the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): horizontal and vertical alignment. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\", combined to \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: \"ACENTER:ACENTER\". Partial values are also accepted, like \"ARIGHT\" or \":ATOP\", the other value will be obtained from the default value. In Motif, vertical alignment is restricted to \"ACENTER\". In GTK, horizontal alignment for multiple lines will align only the text block. (since 3.0)",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ACENTER:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": "IMPRESSBORDER (non inheritable): if enabled the button borders will be shown and computed even if IMPRESS is defined. Can be \"YES\" or \"NO\". Default: \"NO\".",
        "AttributeName": "IMPRESSBORDER",
        "Name": "ImpressBorder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MARKUP [GTK only]: allows the title string to contains pango markup commands. Works only if a mnemonic is NOT defined in the title. Can be \"YES\" or \"NO\". Default: \"NO\".",
        "AttributeName": "MARKUP",
        "Name": "Markup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SPACING (creation only): defines the spacing between the image associated and the button's text. Default: \"2\".",
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUSONCLICK",
        "Name": "FocusOnClick",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CSPACING: same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute. (since 3.29)",
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "FLAT (creation only): Hides the button borders until the mouse cursor enters the button area. The border space is always there. Can be YES or NO. Default: NO.",
        "AttributeName": "FLAT",
        "Name": "Flat",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "IMAGEPOSITION (non inheritable): Position of the image relative to the text when both are displayed. Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT. (since 3.0) (GTK 2.10)",
        "AttributeName": "IMAGEPOSITION",
        "Name": "ImagePosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          },
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          }
        ],
        "Default": "LEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates the File Dialog element. It is a predefined dialog for selecting files or a directory. The dialog can be shown with the IupPopup function only.",
    "ClassName": "filedlg",
    "Name": "FileDlg",
    "ParentClassName": "dialog",
    "ChildrenCount": 0,
    "NativeType": "Dialog",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLIENT",
        "Name": "MdiClient",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROL",
        "Name": "Control",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NOPLACESBAR [Windows Only]: do not show the places bar. (since 3.26)",
        "AttributeName": "NOPLACESBAR",
        "Name": "NoPlacesBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWPREVIEW: A preview area is shown inside the file dialog. Can have values \"YES\" or \"NO\". Default: \"NO\". In Windows, you must link with the \"iup.rc\" resource file so the preview area can be enabled (not necessary if using \"iup.dll\"). Valid only if the FILE_CB callback is defined, use it to retrieve the file name and the necessary attributes to paint the preview area. (in Motif since 3.0) Read only attributes that are valid inside the FILE_CB callback when status=\"PAINT\": PREVIEWDC: Returns the Device Context (HDC in Windows and GC in UNIX) PREVIEWWIDTH and PREVIEWHEIGHT: Returns the width and the height of the client rectangle for the preview area. Also the attributes WID, HWND, XWINDOW and XDISPLAY are valid and are relative to the preview area. If the attribute PREVIEWGLCANVAS is defined then it is used as the name of an existent IupGLCanvas control to be mapped internally to the preview canvas. Notice that this is not a fully implemented IupGLCanvas that inherits from IupCanvas. This does the minimum necessary so you can use IupGLCanvas auxiliary functions for the preview canvas and call OpenGL functions. No IupCanvas attributes or callbacks are available. (since 3.0)",
        "AttributeName": "SHOWPREVIEW",
        "Name": "ShowPreview",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENU",
        "Name": "Menu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Menu",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOFLUSH",
        "Name": "NoFlush",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLEICON",
        "Name": "TrayTipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITYIMAGE",
        "Name": "OpacityImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NOCHANGEDIR: Indicates if the current working directory must be restored after the user navigation. Default: \"YES\".",
        "AttributeName": "NOCHANGEDIR",
        "Name": "NoChangeDir",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HELPBUTTON",
        "Name": "HelpButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOFOCUS",
        "Name": "ShowNoFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATPARENT",
        "Name": "MaximizeAtParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITY",
        "Name": "Opacity",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COMPOSITED",
        "Name": "Composited",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PREVIEWHEIGHT",
        "Name": "PreviewHeight",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDERSIZE",
        "Name": "BorderSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "MULTIPLEFILES: Allows the user to select multiple files when DIALOGTYPE=OPEN. Can be \"Yes\" or \"No\". Default \"No\".",
        "AttributeName": "MULTIPLEFILES",
        "Name": "MultipleFiles",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ICON",
        "Name": "Icon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PREVIEWWIDTH",
        "Name": "PreviewWidth",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW",
        "Name": "CustomFrameDraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENUBOX",
        "Name": "MenuBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "DIALOGTYPE: Type of dialog (Open, Save or Directory). Can have values \"OPEN\", \"SAVE\" or \"DIR\". Default: \"OPEN\". In Windows, when DIALOGTYPE=DIR the dialog shown is not the same dialog for OPEN and SAVE, this new dialog does not have the Help button neither filters. Also this new dialog needs CoInitializeEx with COINIT_APARTMENTTHREADED (done in IupOpen), if the COM library was initialized with COINIT_MULTITHREADED prior to IupOpen then the new dialog will have limited functionality. In Motif or GTK the dialog is the same, but it only allows the user to select a directory.",
        "AttributeName": "DIALOGTYPE",
        "Name": "DialogType",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Save",
            "StrValue": "SAVE",
            "IntValue": null
          },
          {
            "Name": "Dir",
            "StrValue": "DIR",
            "IntValue": null
          },
          {
            "Name": "Open",
            "StrValue": "OPEN",
            "IntValue": null
          }
        ],
        "Default": "OPEN",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVE",
        "Name": "MdiActive",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXBOX",
        "Name": "MaxBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGHINT",
        "Name": "DialogHint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWMINIMIZENEXT",
        "Name": "ShowMinimizeNext",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALLOWNEW: Indicates if non-existent file names are accepted. If equals \"NO\" and the user specifies a non-existing file, an alert dialog is shown. Default: if the dialog is of type \"OPEN\", default is \"NO\"; if the dialog is of type \"SAVE\", default is \"YES\". Not used when DIALOGTYPE=DIR.",
        "AttributeName": "ALLOWNEW",
        "Name": "AllowNew",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGFRAME",
        "Name": "DialogFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NACTIVE",
        "Name": "NActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLE",
        "Name": "TrayTipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVEUNDER",
        "Name": "SaveUnder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAY",
        "Name": "Tray",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESS",
        "Name": "TaskbarProgress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "DialogSize",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "PREVIEWDC",
        "Name": "PreviewDc",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FILTERINFO [Windows and GTK Only]: Filter's description. If not defined the filter itself will be used as its description.",
        "AttributeName": "FILTERINFO",
        "Name": "FilterInfo",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "STATUS (read-only): Indicates the status of the selection made: \"1\": New file. \"0\": Normal, existing file or directory. \"-1\": Operation cancelled.",
        "AttributeName": "STATUS",
        "Name": "Status",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Normal",
            "StrValue": null,
            "IntValue": 0
          },
          {
            "Name": "NewFile",
            "StrValue": null,
            "IntValue": 1
          },
          {
            "Name": "Cancelled",
            "StrValue": null,
            "IntValue": -1
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXTDEFAULT: default extension to be used if selected file does not have an extension. The inspected extension will consider to have the same number of characters of the default extension. It must NOT include the period \".\". (since 3.18)",
        "AttributeName": "EXTDEFAULT",
        "Name": "ExtDefault",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIMENU",
        "Name": "MdiMenu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STARTFOCUS",
        "Name": "StartFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPDELAY",
        "Name": "TrayTipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONLIMITS",
        "Name": "CustomFrameCaptionLimits",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAME",
        "Name": "CustomFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDINEXT",
        "Name": "MdiNext",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FILE: Name of the file initially shown in the \"File Name\" field in the dialog. If contains a full path, then it is used as the initial directory and DIRECTORY is ignored.",
        "AttributeName": "FILE",
        "Name": "File",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE: Dialog's title.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTESC",
        "Name": "DefaultEsc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PLACEMENT",
        "Name": "Placement",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Maximized",
            "StrValue": "MAXIMIZED",
            "IntValue": null
          },
          {
            "Name": "Minimized",
            "StrValue": "MINIMIZED",
            "IntValue": null
          },
          {
            "Name": "Full",
            "StrValue": "FULL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": true
      },
      {
        "Documentation": "EXTFILTER [Windows and GTK Only]: Defines several file filters. It has priority over FILTERINFO and FILTER. Must be a text with the format \"FilterInfo1|Filter1|FilterInfo2|Filter2|...\". The list ends with character '|'. Example: \"Text files|*.txt;*.doc|Image files|*.gif;*.jpg;*.bmp|\". In GTK there is no way how to overwrite the filters, so it is recommended to always add a less restrictive filter to the filter list, for example \"All Files|*.*\".",
        "AttributeName": "EXTFILTER",
        "Name": "ExtFilter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LAYERALPHA",
        "Name": "LayerAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOON",
        "Name": "TrayTipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIARRANGE",
        "Name": "MdiArrange",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "TileHorizontal",
            "StrValue": "TILEHORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "TileVertical",
            "StrValue": "TILEVERTICAL",
            "IntValue": null
          },
          {
            "Name": "Cascade",
            "StrValue": "CASCADE",
            "IntValue": null
          },
          {
            "Name": "Icon",
            "StrValue": "ICON",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZED",
        "Name": "Maximized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MULTIVALUEPATH",
        "Name": "MultiValuePath",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SHAPEIMAGE",
        "Name": "ShapeImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOACTIVATE",
        "Name": "ShowNoActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATDIALOG",
        "Name": "MaximizeAtDialog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOPMOST",
        "Name": "TopMost",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARBUTTON",
        "Name": "TaskbarButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Show",
            "StrValue": "SHOW",
            "IntValue": null
          },
          {
            "Name": "Hide",
            "StrValue": "HIDE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINBOX",
        "Name": "MinBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTENTER",
        "Name": "DefaultEnter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MODAL",
        "Name": "Modal",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE",
        "Name": "MdiActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "MdiActivate",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PARENTDIALOG: Makes the dialog be treated as a child of the specified dialog.",
        "AttributeName": "PARENTDIALOG",
        "Name": "ParentDialog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Dialog",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKGROUND",
        "Name": "Background",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": "FILTERUSED [Windows and GTK Only]: the index of the filter in EXTFILTER to use starting at 1. It returns the selection made by the user. Set only if EXTFILTER is defined.",
        "AttributeName": "FILTERUSED",
        "Name": "FilterUsed",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDETASKBAR",
        "Name": "HideTaskbar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FILTER: String containing a list of file filters separated by ';' without spaces. Example: \"*.C;*.LED;test.*\". In Motif only the first filter is used.",
        "AttributeName": "FILTER",
        "Name": "Filter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (read-only): Name of the selected file(s), or NULL if no file was selected. If FILE is not defined this is used as the initial value. When MULTIPLEFILES=Yes it contains the path (but NOT the same value returned in DIRECTORY, it does not contains the last separator) and several file names separated by the '|' character. The file list ends with character '|'. BUT when the user selects just one file, the directory and the file are not separated by '|'. For example: \"/tecgraf/iup/test|a.txt|b.txt|c.txt|\" (MULTIPLEFILES=Yes and more than one file is selected) \"/tecgraf/iup/test/a.txt\" (only one file is selected)",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BRINGFRONT",
        "Name": "BringFront",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYIMAGE",
        "Name": "TrayImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1x1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVEWINDOW",
        "Name": "ActiveWindow",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWHIDDEN: Show hidden files. Default: NO. (since 3.0) (GTK 2.6)",
        "AttributeName": "SHOWHIDDEN",
        "Name": "ShowHidden",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONHEIGHT",
        "Name": "CustomFrameCaptionHeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FILEEXIST (read-only): Indicates if the file defined by the FILE attribute exists or not. It is only valid if the user has pressed OK in the dialog. Not set when DIALOGTYPE=DIR or MULTIPLEFILES=YES.",
        "AttributeName": "FILEEXIST",
        "Name": "FileExist",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMESIMULATE",
        "Name": "CustomFramesImulate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLOSEALL",
        "Name": "MdiCloseAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHRINK",
        "Name": "Shrink",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIP",
        "Name": "TrayTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOOLBOX",
        "Name": "ToolBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIFRAME",
        "Name": "MdiFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NOOVERWRITEPROMPT: do not prompt to overwrite an existent file when in \"SAVE\" dialog. Default is \"NO\", i.e. prompt before overwrite. (GTK 2.8)",
        "AttributeName": "NOOVERWRITEPROMPT",
        "Name": "NoOverwritePrompt",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DIRECTORY: Initial directory. When consulted after the dialog is closed and the user pressed the OK button, it will contain the directory of the selected file. When set the last separator does not need to be specified, but when get the returned value will always contains the last separator. In Motif or GTK, if not defined, the dialog opens in the current directory. In Windows, if not defined and the application has used the dialog in the past, the path most recently used is selected as the initial directory. However, if an application is not run for a long time, its saved selected path is discarded. Also if not defined and the current directory contains any files of the specified filter types, the initial directory is the current directory. Otherwise, the initial directory is the \"My Documents\" directory of the current user. Otherwise, the initial directory is the Desktop folder.",
        "AttributeName": "DIRECTORY",
        "Name": "Directory",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICHILD",
        "Name": "MdiChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSSTATE",
        "Name": "TaskbarProgressState",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "NoProgress",
            "StrValue": "NOPROGRESS",
            "IntValue": null
          },
          {
            "Name": "Indeterminate",
            "StrValue": "INDETERMINATE",
            "IntValue": null
          },
          {
            "Name": "Error",
            "StrValue": "ERROR",
            "IntValue": null
          },
          {
            "Name": "Paused",
            "StrValue": "PAUSED",
            "IntValue": null
          },
          {
            "Name": "Normal",
            "StrValue": "NORMAL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSVALUE",
        "Name": "TaskbarProgressValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FULLSCREEN",
        "Name": "FullScreen",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATIVEPARENT",
        "Name": "NativeParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEDIALOG",
        "Name": "MaximizedIalog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINIMIZED",
        "Name": "Minimized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIMULATEMODAL",
        "Name": "SimulateModal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "CLOSE_CB CLOSE_CB Called just before a dialog is closed when the user clicks the close button of the title bar or an equivalent action. Callback int function(Ihandle *ih); [in C] ih:close_cb() -> (ret: number) [in Lua] ih: identifies the element that activated the event. Returns: if IUP_IGNORE, it prevents the dialog from being closed. If you destroy the dialog in this callback, you must return IUP_IGNORE. IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "CLOSE_CB",
        "Name": "Close",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE_CB",
        "Name": "MdiActivate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEACTIVATE_CB",
        "Name": "CustomFrameActivate",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW_CB",
        "Name": "CustomFrameDraw",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SHOW_CB SHOW_CB Called right after the dialog is showed, hidden, maximized, minimized or restored from minimized/maximized. This callback is called when those actions were performed by the user or programmatically by the application. Callback int function(Ihandle *ih, int state); [in C] ih:show_cb(state: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. state: indicates which of the following situations generated the event: IUP_HIDE (since 3.0) IUP_SHOW IUP_RESTORE (was minimized or maximized) IUP_MINIMIZE IUP_MAXIMIZE (since 3.0) (not received in Motif when activated from the maximize button) Returns: IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "SHOW_CB",
        "Name": "Show",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYCLICK_CB",
        "Name": "TrayClick",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FILE_CB",
        "Name": "File",
        "Arguments": [
          "String",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an interface element that displays a list of items. The list can be visible or can be dropped down. It also can have an edit box for text input. So it is a 4 in 1 element. In native systems the dropped down case is called Combo Box.",
    "ClassName": "list",
    "Name": "List",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "COUNT (read-only) (non inheritable): returns the number of items. Before mapping it counts the number of non NULL items before the first NULL item. (since 3.0)",
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute TXTFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "APPEND, CARET, CARETPOS, CLIPBOARD, CUEBANNER, FILTER, INSERT, PADDING, MASK, NC, READONLY, SELECTEDTEXT, SELECTION, SELECTIONPOS, SCROLLTO, SCROLLTOPOS : Same as the IupText attributes, but are valid only when EDITBOX=YES and effective only for the edit box inside the list.",
        "AttributeName": "CARET",
        "Name": "Caret",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "LinColPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKDECIMALSYMBOL",
        "Name": "MaskDecimalSymbol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE_ITEMS",
        "Name": "VisibleItems",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPFILESTARGET [Windows and GTK Only] (non inheritable): Enable or disable the drop of files. Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled. (since 3.0)",
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the control will still get the focus when clicked. Default: YES. (since 3.0)",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKFLOAT",
        "Name": "MaskFloat",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "FloatRange",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NC",
        "Name": "Nc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INSERT",
        "Name": "Insert",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWIMAGE (creation only) [Windows and GTK Only]: enables the use of an image for each item. Can be \"YES\" or \"NO\". Ignored if set after map. (since 3.6)",
        "AttributeName": "SHOWIMAGE",
        "Name": "ShowImage",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKREAL",
        "Name": "MaskReal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Signed",
            "StrValue": "SIGNED",
            "IntValue": null
          },
          {
            "Name": "Unsigned",
            "StrValue": "UNSIGNED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLELINES: When DROPDOWN=NO defines the number of visible lines for the Natural Size, this means that will act also as minimum number of visible lines. (since 3.0)",
        "AttributeName": "VISIBLELINES",
        "Name": "VisibleLines",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "SIZE: Size of the list. The Natural Size is defined by the number of elements in the list and the with of the largest item, the default has room for 5 characters in 1 item. In IUP 3, the Natural Size ignores the list contents if VISIBLECOLUMNS or VISIBLELINES attributes are defined. The text in the edit box is ignored when considering the list contents.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "VALUESTRING (non inheritable): changes or retrieves the value attribute using a string of an item. Works only when EDITBOX=NO and DROPDOWN=YES, or DROPDOWN=NO and MULTIPLE=NO. When set it will search for the first item with the same string. (since 3.12)",
        "AttributeName": "VALUESTRING",
        "Name": "ValueString",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPEXPAND [Windows Only]: When DROPDOWN=Yes the size of the dropped list will expand to include the largest text. Can be \"YES\" or \"NO\". Default: \"YES\".",
        "AttributeName": "DROPEXPAND",
        "Name": "DropExpand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SELECTION",
        "Name": "Selection",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Selection",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DRAGDROPLIST (non inheritable): prepare the Drag & Drop callbacks to support drag and drop of items between lists (IupList or IupFlatList), in the same IUP application. Drag & Drop attributes still need to be set in order to activate the drag & drop support, so the application can control if this list will be source and/or target. Default: NO. (since 3.10)",
        "AttributeName": "DRAGDROPLIST",
        "Name": "DragDropList",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "REMOVEITEM (write-only): removes the given value. value starts at 1. If value is NULL or \"ALL\" removes all the items. Ignored if set before map. (since 3.0)",
        "AttributeName": "REMOVEITEM",
        "Name": "RemoveItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TOPITEM (write-only): position the given item at the top of the list or near to make it visible. Valid only when DROPDOWN=NO. (since 3.0)",
        "AttributeName": "TOPITEM",
        "Name": "TopItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLEITEMS [Windows and Motif Only]: Number of items that are visible when DROPDOWN=YES is used for the dropdown list. Default: 5.",
        "AttributeName": "VISIBLEITEMS",
        "Name": "VisibleItems",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": false
      },
      {
        "Documentation": "SCROLLBAR (creation only): Associates automatic scrollbars to the list when DROPDOWN=NO. Can be: \"YES\" or \"NO\" (none). Default: \"YES\". For all systems, when SCROLLBAR=YES the natural size will always include its size even if the native system hides the scrollbars. If AUTOHIDE=YES scrollbars are shown only if they are necessary, by default AUTOHIDE=YES. In Motif, SCROLLBAR=NO is not supported and if EDITBOX=YES the horizontal scrollbar is never shown.",
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWDRAGDROP (creation only) (non inheritable): enables the internal drag and drop of items in the same list, and enables the DRAGDROP_CB callback. Default: \"NO\". Works only if DROPDOWN=NO and MULTIPLE=NO. Drag & Drop attributes are NOT used. (since 3.7)",
        "AttributeName": "SHOWDRAGDROP",
        "Name": "ShowDragDrop",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS(non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO. (since 3.23)",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color of the text. Default: the global attribute TXTBGCOLOR. In GTK does nothing when DROPDOWN=Yes.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EDITBOX (creation only): Adds an edit box to the list. Can be \"YES\" or \"NO\". Default \"NO\".",
        "AttributeName": "EDITBOX",
        "Name": "EditBox",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUEMASKED (non inheritable) (write-only): sets VALUE but first checks if it is validated by MASK. If not does nothing. Works only when EDITBOX=YES. (since 3.13)",
        "AttributeName": "VALUEMASKED",
        "Name": "ValueMasked",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SPACING: internal padding for each item. Notice that vertically the distance between each item will be actually 2x the spacing. It also affects the horizontal margin of the item. In Windows, the text is aligned at the top left of the item always. Valid only when DROPDOWN=NO. (since 3.0)",
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "INSERTITEM",
        "Name": "InsertItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTOPOS",
        "Name": "ScrollTopOs",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTO",
        "Name": "ScrollTo",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGENATIVEHANDLE",
        "Name": "ImageNativeHandle",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CSPACING: same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute. (since 3.29)",
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLECOLUMNS: Defines the number of visible columns for the Natural Size, this means that will act also as minimum number of visible columns. It uses a wider character size then the one used for the SIZE attribute so strings will fit better without the need of extra columns. Set this attribute to speed Natural Size computation for very large lists. (since 3.0)",
        "AttributeName": "VISIBLECOLUMNS",
        "Name": "VisibleColumns",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "MASKINT",
        "Name": "MaskInt",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "APPENDITEM (write-only): inserts an item after the last item. Ignored if set before map. (since 3.0)",
        "AttributeName": "APPENDITEM",
        "Name": "AppendItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKCASEI",
        "Name": "MaskCasei",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MULTIPLE (creation only): Allows selecting several items simultaneously (multiple list). Default: \"NO\". Only valid when EDITBOX=NO and DROPDOWN=NO.",
        "AttributeName": "MULTIPLE",
        "Name": "Multiple",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SELECTIONPOS",
        "Name": "SelectionPos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Depends on the DROPDOWN+EDITBOX combination: EDITBOX=YES: Text entered by the user. MULTIPLE=YES: Sequence of '+' and '-' symbols indicating the state of each item. When setting this value, the user must provide the same amount of '+' and '-' symbols as the amount of items in the list, otherwise the specified items will be deselected. Others: Integer number representing the selected item in the list (begins at 1). It can be zero if there is no selected item. (In Motif when DROPDOWN=YES there is always an item selected, except when the list is empty). Should return a non NULL value, even when the list is empty or the text box is empty. It can be NULL when no item selected (since 3.0).",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FILTER",
        "Name": "Filter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SELECTEDTEXT",
        "Name": "SelectedText",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ACTIVE, FONT, EXPAND, SCREENPOSITION, POSITION, MINSIZE, MAXSIZE, WID, TIP, RASTERSIZE, ZORDER, VISIBLE, THEME: also accepted.",
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUEBANNER",
        "Name": "CueBanner",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWDROPDOWN (write-only): opens or closes the dropdown list. Can be \"YES\" or \"NO\". Valid only when DROPDOWN=YES. Ignored if set before map.",
        "AttributeName": "SHOWDROPDOWN",
        "Name": "ShowDropDown",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IDVALUE",
        "Name": "IdValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "APPEND, CARET, CARETPOS, CLIPBOARD, CUEBANNER, FILTER, INSERT, PADDING, MASK, NC, READONLY, SELECTEDTEXT, SELECTION, SELECTIONPOS, SCROLLTO, SCROLLTOPOS : Same as the IupText attributes, but are valid only when EDITBOX=YES and effective only for the edit box inside the list.",
        "AttributeName": "CARETPOS",
        "Name": "CaretPos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASK",
        "Name": "Mask",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "AUTOHIDE: scrollbars are shown only if they are necessary. Default: \"YES\".",
        "AttributeName": "AUTOHIDE",
        "Name": "AutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "AUTOREDRAW [Windows] (non inheritable): automatically redraws the list when something has change. Set to NO to add many items to the list without updating the display. Default: \"YES\". (since 3.3)",
        "AttributeName": "AUTOREDRAW",
        "Name": "AutoRedraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIPBOARD",
        "Name": "Clipboard",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Copy",
            "StrValue": "COPY",
            "IntValue": null
          },
          {
            "Name": "Cut",
            "StrValue": "CUT",
            "IntValue": null
          },
          {
            "Name": "Paste",
            "StrValue": "PASTE",
            "IntValue": null
          },
          {
            "Name": "Clear",
            "StrValue": "CLEAR",
            "IntValue": null
          },
          {
            "Name": "Undo",
            "StrValue": "UNDO",
            "IntValue": null
          },
          {
            "Name": "Redo",
            "StrValue": "REDO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPDOWN (creation only): Changes the appearance of the list for the user: only the selected item is shown beside a button with the image of an arrow pointing down. To select another option, the user must press this button, which displays all items in the list. Can be \"YES\" or \"NO\". Default \"NO\".",
        "AttributeName": "DROPDOWN",
        "Name": "DropDown",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "READONLY",
        "Name": "Readonly",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "APPEND, CARET, CARETPOS, CLIPBOARD, CUEBANNER, FILTER, INSERT, PADDING, MASK, NC, READONLY, SELECTEDTEXT, SELECTION, SELECTIONPOS, SCROLLTO, SCROLLTOPOS : Same as the IupText attributes, but are valid only when EDITBOX=YES and effective only for the edit box inside the list.",
        "AttributeName": "APPEND",
        "Name": "Append",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKNOEMPTY",
        "Name": "MaskNoEmpty",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "String",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP_CB",
        "Name": "DragDrop",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DBLCLICK_CB",
        "Name": "DblClick",
        "Arguments": [
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CARET_CB",
        "Name": "Caret",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDOWN_CB",
        "Name": "DropDown",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTISELECT_CB",
        "Name": "MultiSelect",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "EDIT_CB",
        "Name": "Edit",
        "Arguments": [
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container for composing elements in hidden layers with only one layer visible. It is a box that piles up the children it contains, only the one child is visible. It does not have a native representation. Zbox works by changing the VISIBLE attribute of its children, so if any of the grand children has its VISIBLE attribute directly defined then Zbox will NOT change its state.",
    "ClassName": "zbox",
    "Name": "ZBox",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDSIZEALL (non inheritable): compute the natural size using all children. If set to NO will compute using only the visible child. Default: Yes. (since 3.27)",
        "AttributeName": "CHILDSIZEALL",
        "Name": "ChildSizeAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "VALUEPOS (non inheritable): The visible child accessed by its position. The value passed must be the index of a child contained in the zbox, starting at 0. When the zbox is created, the first element inserted is set as the visible child. (since 3.0)",
        "AttributeName": "VALUEPOS",
        "Name": "ValuePos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE / RASTERSIZE (non inheritable): The default size is the smallest size that fits its largest child. All child elements are considered even invisible ones, except when FLOATING=YES in a child.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "VALUE_HANDLE (non inheritable): The visible child accessed by its handle. The value passed must be the handle of a child contained in the zbox. When the zbox is created, the first element inserted is set as the visible child. (since 3.0)",
        "AttributeName": "VALUE_HANDLE",
        "Name": "ValueHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): The visible child accessed by its name. The value passed must be the name of one of the children contained in the zbox. Use IupSetHandle or IupSetAttributeHandle to associate a child to a name. In Lua you can also use the element reference directly. When the value is changed the selected child is made visible and all other children are made invisible, regardless their previous visible state.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): Defines the alignment of the visible child. Possible values:",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "North",
            "StrValue": "NORTH",
            "IntValue": null
          },
          {
            "Name": "South",
            "StrValue": "SOUTH",
            "IntValue": null
          },
          {
            "Name": "West",
            "StrValue": "WEST",
            "IntValue": null
          },
          {
            "Name": "East",
            "StrValue": "EAST",
            "IntValue": null
          },
          {
            "Name": "Ne",
            "StrValue": "NE",
            "IntValue": null
          },
          {
            "Name": "Se",
            "StrValue": "SE",
            "IntValue": null
          },
          {
            "Name": "Nw",
            "StrValue": "NW",
            "IntValue": null
          },
          {
            "Name": "Sw",
            "StrValue": "SW",
            "IntValue": null
          },
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          }
        ],
        "Default": "NW",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a native container that allows its child to be scrolled. It inherits from IupCanvas.",
    "ClassName": "scrollbox",
    "Name": "ScrollBox",
    "ParentClassName": "canvas",
    "ChildrenCount": 1,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANVASBOX",
        "Name": "CanvasBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS: is set to NO.",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTOCHILD",
        "Name": "ScrollToChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDOFFSET: Allow to specify a position offset for the child. Available for native containers only. It will not affect the natural size, and allows to position controls outside the client area. Format \"dxxdy\", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: 0x0. (since 3.14)",
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTOCHILD_HANDLE",
        "Name": "ScrollToChildHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "SCROLLBAR (creation only): the default value is \"YES\".",
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: will always use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "LAYOUTDRAG (non inheritable) [Windows Only]: When the scrollbar is moved automatically update the children layout. Default: YES. If set to NO then the layout will be updated only when the mouse drag is released. (since 3.19)",
        "AttributeName": "LAYOUTDRAG",
        "Name": "LayoutDrag",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTO",
        "Name": "ScrollTo",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): it is always \"NO\".",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LAYOUTUPDATE_CB",
        "Name": "LayoutUpDate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a date editing interface element, which can displays a calendar for selecting a date. In Windows is a native element. In GTK and Motif is a custom element. In Motif is not capable of displaying the calendar.",
    "ClassName": "datepick",
    "Name": "DatePick",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "TODAY (read-only): Returns the date corresponding to today in VALUE format.",
        "AttributeName": "TODAY",
        "Name": "Today",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Date",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MONTHSHORTNAMES [Windows Only]: Month display will use a short name instead of numbers. Must be set before ORDER. Default: NO. Names will be in the language of the system.",
        "AttributeName": "MONTHSHORTNAMES",
        "Name": "MonthShortNames",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "SEPARATOR: Separator between day, month and year. Must be set before ORDER in Windows. Default: \"/\".",
        "AttributeName": "SEPARATOR",
        "Name": "Separator",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "/",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZEROPRECED",
        "Name": "ZeroPreced",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FORMAT [Windows Only]: Flexible format for the date in Windows. For more information see \"About Date and Time Picker Control\" in the Windows SDK. The Windows control was configured to display date only without any time options. Default: \"d'/'M'/'yyyy\". See Noted bellow.",
        "AttributeName": "FORMAT",
        "Name": "Format",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "d'/'M'/'yyyy",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE: the current date always in the format \"year/month/day\" (\"%d/%d/%d\" in C). Can be set to \"TODAY\". Default value is the today date.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWDROPDOWN (write-only): opens or closes the dropdown calendar. Can be \"YES\" or \"NO\". Ignored if set before map. In Windows, it works only for NO. (since 3.28)",
        "AttributeName": "SHOWDROPDOWN",
        "Name": "ShowDropDown",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "CALENDARWEEKNUMBERS: Shows the number of the week along the year in the calendar. Default: NO.",
        "AttributeName": "CALENDARWEEKNUMBERS",
        "Name": "CalendarWeekNumbers",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ORDER: Day, month and year order. Can be any combination of \"D\", \"M\" and \"Y\" without repetition, and with all three letters. It will set the FORMAT attribute in Windows. It will NOT affect the VALUE attribute order. Default: \"DMY\".",
        "AttributeName": "ORDER",
        "Name": "Order",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DMY",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "This functions will create a control set with a vertical box containing two buttons, one with an up arrow and the other with a down arrow, to be used to increment and decrement values. Unlike the SPIN attribute of the IupText element, the IupSpin element can NOT automatically increment the value and it is NOT inserted inside the IupText area. But they can be used with any element.",
    "ClassName": "spin",
    "Name": "Spin",
    "ParentClassName": "vbox",
    "ChildrenCount": 0,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARGIN",
        "Name": "Margin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZESIZE",
        "Name": "NormalizeSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "Both",
            "StrValue": "BOTH",
            "IntValue": null
          },
          {
            "Name": "None",
            "StrValue": "NONE",
            "IntValue": null
          }
        ],
        "Default": "NONE",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NGAP",
        "Name": "NGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDCHILDREN",
        "Name": "ExpandChildren",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "GAP",
        "Name": "Gap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CMARGIN",
        "Name": "CMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HOMOGENEOUS",
        "Name": "Homogeneous",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CGAP",
        "Name": "CGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NMARGIN",
        "Name": "NMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NCMARGIN",
        "Name": "NcMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "VERTICAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NCGAP",
        "Name": "NcGap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "UPDATEATTRIBFROMFONT_CB",
        "Name": "UpDateAttribfromFont",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SPIN_CB",
        "Name": "Spin",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an element that allows access to the clipboard. Each clipboard should be destroyed using IupDestroy, but you can use only one for the entire application because it does not store any data inside. Or you can simply create and destroy every time you need to copy or paste.",
    "ClassName": "clipboard",
    "Name": "Clipboard",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Other",
    "Attributes": [
      {
        "Documentation": "FORMAT: set the current format to be used by the FORMATAVAILABLE and FORMATDATA attributes. This is a custom format string. The application copy and paste functions must know what it is copying and pasting in FORMATDATA based on that string. (since 3.7)",
        "AttributeName": "FORMAT",
        "Name": "Format",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXT: copy or paste text to or from the clipboard. If set to NULL clears the clipboard data.",
        "AttributeName": "TEXT",
        "Name": "Text",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTAVAILABLE (read-only): informs if there is a text available at the clipboard.",
        "AttributeName": "TEXTAVAILABLE",
        "Name": "TextAvailable",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FORMATDATASIZE: size of the data on the clipboard. Used by the FORMATDATA attribute processing. (since 3.7)",
        "AttributeName": "FORMATDATASIZE",
        "Name": "FormatDataSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (write-only): name of an image to copy to the clipboard. If set to NULL clears the clipboard data. (GTK 2.6)",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ADDFORMAT (write-only): register a custom format for clipboard data given its name. The registration remains valid even after the element is destroyed. A new format must be added before used. (since 3.7)",
        "AttributeName": "ADDFORMAT",
        "Name": "AddFormat",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SAVEEMF (write-only) [Windows Only]: saves the EMF from the clipboard to the given filename. (Since 3.2)",
        "AttributeName": "SAVEEMF",
        "Name": "SaveEmf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEAVAILABLE (read-only): informs if there is an image available at the clipboard. (GTK 2.6)",
        "AttributeName": "IMAGEAVAILABLE",
        "Name": "ImageAvailable",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SAVEWMF (write-only) [Windows Only]: saves the WMF from the clipboard to the given filename. (Since 3.2)",
        "AttributeName": "SAVEWMF",
        "Name": "SaveWmf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EMFAVAILABLE (read-only) [Windows Only]: informs if there is a Windows Enhanced Metafile available at the clipboard. (Since 3.2)",
        "AttributeName": "EMFAVAILABLE",
        "Name": "EmfAvailable",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WMFAVAILABLE",
        "Name": "WmfAvailable",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FORMATDATA: sets or retrieves the data from the clipboard in the format defined by the FORMAT attribute. If FORMAT is not set returns NULL. If set to NULL clears the clipboard data. When set the FORMATDATASIZE attribute must be set before with the data size. When retrieved FORMATDATASIZE will be set and available after data is retrieved. (since 3.7)",
        "AttributeName": "FORMATDATA",
        "Name": "FormatData",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FORMATDATASTRING [Windows and GTK Only]: sets/gets FORMATDATA and FORMATDATASIZE considering data being a string in the system format. (since 3.29)",
        "AttributeName": "FORMATDATASTRING",
        "Name": "FormatDataString",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FORMATAVAILABLE (read-only): informs if there is a data in the FORMAT available at the clipboard. If FORMAT is not set returns NULL. (since 3.7)",
        "AttributeName": "FORMATAVAILABLE",
        "Name": "FormatAvailable",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NATIVEIMAGE: native handle of an image to copy or paste, to or from the clipboard. In Win32 is a HANDLE of a DIB. In GTK is a GdkPixbuf*. In Motif is a Pixmap. If set to NULL clears the clipboard data. The returned handle in a paste must be released after used (GlobalFree(handle), g_object_unref(pixbuf) or XFreePixmap(display, pixmap)). After copy, do NOT release the given handle. See IUP-IM Functions for utility functions on image native handles. (GTK 2.6)",
        "AttributeName": "NATIVEIMAGE",
        "Name": "NativeImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": []
  },
  {
    "Documentation": "Creates a menu item that, when selected, opens another menu.",
    "ClassName": "submenu",
    "Name": "SubMenu",
    "ParentClassName": null,
    "ChildrenCount": 1,
    "NativeType": "Menu",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "FLAT_ALPHA",
        "Name": "FlatAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Submenu Text. The \"&\" character can be used to define a mnemonic, the next character will be used as key. Use \"&&\" to show the \"&\" character instead on defining a mnemonic.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE [Windows and GTK Only] (non inheritable): Image name of the submenu image. In Windows, an item in a menu bar cannot have a check mark. Ignored if submenu in a menu bar. A recommended size would be 16x16 to fit the image in the menu item. In Windows, if larger than the check mark area it will be cropped. (since 3.0)",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "MENUBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": "KEY (non inheritable): Underlines a key character in the submenu title. It is updated only when TITLE is updated. Deprecated, use the mnemonic support directly in the TITLE attribute.",
        "AttributeName": "KEY",
        "Name": "Key",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (non inheritable): In Windows, returns the HMENU of the parent menu and it is actually created only when its child menu is mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HIGHLIGHT_CB HIGHLIGHT_CB Callback triggered every time the user selects an IupItem or IupSubmenu. Callback int function(Ihandle *ih); [in C] elem:highlight_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects IupItem, IupSubmenu",
        "AttributeName": "HIGHLIGHT_CB",
        "Name": "Highlight",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container for composing elements in a regular grid. It is a box that arranges the elements it contains from top to bottom and from left to right, but can distribute the elements in lines or in columns. The child elements are added to the control just like a vbox and hbox, sequentially. Then they are distributed accordingly the attributes ORIENTATION and NUMDIV. When ORIENTATION=HORIZONTAL children are distributed from left to right on the first line until NUMDIV, then on the second line, and so on. When ORIENTATION=VERTICAL children are distributed from top to bottom on the first column until NUMDIV, then on the second column, and so on. The number of lines and the number of columns can be easily obtained from the combination of these attributes: if (orientation==IGBOX_HORIZONTAL) num_lin = child_count / num_div num_col = num_div else num_lin = num_div num_col = child_count / num_div Notice that the total number of spaces can be larger than the number of actual children, the last line or column can be incomplete. The column sizes will be based only on the width of the children of the reference line, usually line 0. The line sizes will be based only on the height of the children of the reference column, usually column 0. It does not have a native representation.",
    "ClassName": "gridbox",
    "Name": "GridBox",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NORMALIZESIZE (non inheritable): normalizes all children natural size to be the biggest natural size among the reference line and/or the reference column. All natural width will be set to the biggest width, and all natural height will be set to the biggest height according to is value. Can be NO, HORIZONTAL (width only), VERTICAL (height only) or BOTH. Default: \"NO\". Same as using IupNormalizer. Notice that this is different from the HOMOGENEOUS* attributes in the sense that the children will have their sizes changed.",
        "AttributeName": "NORMALIZESIZE",
        "Name": "NormalizeSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "Both",
            "StrValue": "BOTH",
            "IntValue": null
          },
          {
            "Name": "None",
            "StrValue": "NONE",
            "IntValue": null
          }
        ],
        "Default": "NONE",
        "IsNullable": false
      },
      {
        "Documentation": "GAPLIN, CGAPLIN: Defines a vertical space in pixels between lines, CGAPLIN is in the same units of the SIZE attribute for the height. Default: \"0\".",
        "AttributeName": "GAPLIN",
        "Name": "GapLin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": "EXPANDCHILDREN (non inheritable): forces all children to expand in the given direction and to fully occupy its space available inside the box. Can be YES (both directions), HORIZONTAL, VERTICAL or NO. Default: \"NO\". This has the same effect as setting EXPAND on each child.",
        "AttributeName": "EXPANDCHILDREN",
        "Name": "ExpandChildren",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "None",
            "StrValue": "NONE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENTCOL (non inheritable): Horizontally aligns the elements within each column. Possible values: \"ALEFT\", \"ACENTER\", \"ARIGHT\". Default: \"ALEFT\". The alignment of a single column can also be set using \"ALIGNMENTCOLC\", where \"C\" is the column index, starting at 0 from left to right.",
        "AttributeName": "ALIGNMENTCOL",
        "Name": "AlignmentCol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": "SIZECOL (non inheritable): index of the column that will be used as reference when calculating the height of the lines. Default: 0. If set to -1 all columns will contribute for the line height, the highest cell of the line will be the line height (since 3.21).",
        "AttributeName": "SIZECOL",
        "Name": "SizeCol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "GAPCOL, CGAPCOL: Defines a horizontal space in pixels between columns, CGAPCOL is in the same units of the SIZE attribute for the height. Default: \"0\".",
        "AttributeName": "CGAPCOL",
        "Name": "CGapCol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MARGIN, CMARGIN: Defines a margin in pixels, CMARGIN is in the same units of the SIZE attribute. Its value has the format \"widthxheight\", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: \"0x0\" (no margin).",
        "AttributeName": "CMARGIN",
        "Name": "CMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable*): The default value is \"YES\". See the documentation of the attribute for EXPAND inheritance.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENTLIN (non inheritable): Vertically aligns the elements within each line. Possible values: \"ATOP\", \"ACENTER\", \"ABOTTOM\". Default: \"ATOP\". The alignment of a single line can also be set using \"ALIGNMENTLINL\", where \"L\" is the line index, starting at 0 from top to bottom.",
        "AttributeName": "ALIGNMENTLIN",
        "Name": "AlignmentLin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ATOP",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "SIZELIN (non inheritable): index of the line that will be used as reference when calculating the width of the columns. Default: 0. If set to -1 all lines will contribute for the column width, the wideest cell of the column will be the column width (since 3.21).",
        "AttributeName": "SIZELIN",
        "Name": "SizeLin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "GAPLIN, CGAPLIN: Defines a vertical space in pixels between lines, CGAPLIN is in the same units of the SIZE attribute for the height. Default: \"0\".",
        "AttributeName": "CGAPLIN",
        "Name": "CGapLin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (non inheritable): controls the distribution of the children in lines or in columns. Can be: HORIZONTAL or VERTICAL. Default: HORIZONTAL.",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "NGAPLIN, NCGAPLIN, NGAPCOL, NCGAPCOL (non inheritable): Same as *GAP* but are non inheritable.",
        "AttributeName": "NGAPCOL",
        "Name": "NGapCol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NMARGIN, NCMARGIN (non inheritable): Same as MARGIN but are non inheritable.",
        "AttributeName": "NMARGIN",
        "Name": "NMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HOMOGENEOUSCOL (non inheritable): forces all columns to have the same horizontal space, or width. The column width will be based on the widest child of the reference line (See SIZELIN). Default: \"NO\". Notice that this does not changes the children size, only the available space for each one of them to expand.",
        "AttributeName": "HOMOGENEOUSCOL",
        "Name": "HomogeneousCol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "NGAPLIN, NCGAPLIN, NGAPCOL, NCGAPCOL (non inheritable): Same as *GAP* but are non inheritable.",
        "AttributeName": "NCGAPCOL",
        "Name": "NcGapCol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "NGAPLIN, NCGAPLIN, NGAPCOL, NCGAPCOL (non inheritable): Same as *GAP* but are non inheritable.",
        "AttributeName": "NGAPLIN",
        "Name": "NGapLin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HOMOGENEOUSLIN (non inheritable): forces all lines to have the same vertical space, or height. The line height will be based on the highest child of the reference column (See SIZECOL). Default: \"NO\". Notice that this does not changes the children size, only the available space for each one of them to expand.",
        "AttributeName": "HOMOGENEOUSLIN",
        "Name": "HomogeneousLin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NUMDIV: controls the number of divisions along the distribution according to ORIENTATION. When ORIENTATION=HORIZONTAL, NUMDIV is the number of columns, when ORIENTATION=VERTICAL, NUMDIV is the number of lines. When value is AUTO, its actual value will be calculated to fit the maximum number of elements in the orientation direction. Default: AUTO.",
        "AttributeName": "NUMDIV",
        "Name": "NumDiv",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "AUTO",
        "IsNullable": false
      },
      {
        "Documentation": "NGAPLIN, NCGAPLIN, NGAPCOL, NCGAPCOL (non inheritable): Same as *GAP* but are non inheritable.",
        "AttributeName": "NCGAPLIN",
        "Name": "NcGapLin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NUMCOL (read-only): returns the number of columns.",
        "AttributeName": "NUMCOL",
        "Name": "NumCol",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "NUMLIN (read-only): returns the number of lines.",
        "AttributeName": "NUMLIN",
        "Name": "NumLin",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "GAPCOL, CGAPCOL: Defines a horizontal space in pixels between columns, CGAPCOL is in the same units of the SIZE attribute for the height. Default: \"0\".",
        "AttributeName": "GAPCOL",
        "Name": "GapCol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "FITTOCHILDREN (write-only): Set the RASTERSIZE attribute of the reference element in the given column or line, so that it will fit the widest element in the column or the highest element in the line. The number of the column or line must be preceded by a character identifying its type, \"C\" for columns and \"L\" for lines. For example \"C5\"=column 5 or \"L3\"=line 3. Can only be set after the layout of the dialog has been calculated at least 1 time. If FITMAXWIDTHn or FITMAXHEIGHTn are set for the column or line they are used as maximum limit for the size. (Since 3.10)",
        "AttributeName": "FITTOCHILDREN",
        "Name": "FitToChildren",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NMARGIN, NCMARGIN (non inheritable): Same as MARGIN but are non inheritable.",
        "AttributeName": "NCMARGIN",
        "Name": "NcMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "MARGIN, CMARGIN: Defines a margin in pixels, CMARGIN is in the same units of the SIZE attribute. Its value has the format \"widthxheight\", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: \"0x0\" (no margin).",
        "AttributeName": "MARGIN",
        "Name": "Margin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "UPDATEATTRIBFROMFONT_CB",
        "Name": "UpDateAttribfromFont",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": null,
    "ClassName": "imagergba",
    "Name": "ImageRgba",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Image",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCALED",
        "Name": "Scaled",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DPI",
        "Name": "Dpi",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BPP",
        "Name": "Bpp",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RESHAPE",
        "Name": "Reshape",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHANNELS",
        "Name": "Channels",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HOTSPOT",
        "Name": "Hotspot",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0:0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOSCALE",
        "Name": "AutoScale",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HEIGHT",
        "Name": "Height",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLEARCACHE",
        "Name": "ClearCache",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ORIGINALSCALE",
        "Name": "OriginalScale",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WIDTH",
        "Name": "Width",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": []
  },
  {
    "Documentation": "Creates an editable text field.",
    "ClassName": "text",
    "Name": "Text",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute TXTFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": "COUNT (read-only): returns the number of characters in the text, including the line breaks. (since 3.5)",
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "WORDWRAP (creation only): Valid only when MULTILINE=YES. If enabled will force a word wrap of lines that are greater than the with of the control, and the horizontal scrollbar will be removed. Default: NO.",
        "AttributeName": "WORDWRAP",
        "Name": "WordWrap",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PASSWORD (creation only) [Windows and GTK Only] (non inheritable): Hide the typed character using an \"*\". Default: \"NO\".",
        "AttributeName": "PASSWORD",
        "Name": "Password",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CARET (non inheritable): Character position of the insertion point. Its format depends in MULTILINE=YES. The first position, lin or col, is \"1\".",
        "AttributeName": "CARET",
        "Name": "Caret",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "LinColPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKDECIMALSYMBOL",
        "Name": "MaskDecimalSymbol",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "OVERWRITE [Windows and GTK Only] (non inheritable): turns the overwrite mode ON or OFF. Works only when FORMATTING=YES. (since 3.0)",
        "AttributeName": "OVERWRITE",
        "Name": "Overwrite",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDFORMATTAG_HANDLE",
        "Name": "AddFormatTagHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "User",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPININC",
        "Name": "SpinInc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "NOHIDESEL [Windows Only]: do not hide the selection when the control loses its focus. Default: Yes. (since 3.16)",
        "AttributeName": "NOHIDESEL",
        "Name": "NoHideSel",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "APPENDNEWLINE",
        "Name": "AppendNewLine",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "LOADRTF (write-only) [Windows Only]: loads formatted text from a Rich Text Format file given its filename. The attribute LOADRTFSTATUS is set to OK or FAILED after the file is loaded. (since 3.28)",
        "AttributeName": "LOADRTF",
        "Name": "LoadRtf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPFILESTARGET [Windows and GTK Only] (non inheritable): Enable or disable the drop of files. Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled. (since 3.0)",
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the control will still get the focus when clicked. Default: YES. (since 3.0)",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKFLOAT",
        "Name": "MaskFloat",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "FloatRange",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDFORMATTAG",
        "Name": "AddFormatTag",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "NC: Maximum number of characters allowed for keyboard input, larger text can still be set using attributes. The maximum value is the limit of the VALUE attribute. The \"0\" value is the same as maximum. Default: maximum.",
        "AttributeName": "NC",
        "Name": "Nc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "SAVERTF (write-only) [Windows Only]: saves formatted text to a Rich Text Format file given its filename. The attribute SAVERTFSTATUS is set to OK or FAILED after the file is saved. (since 3.28)",
        "AttributeName": "SAVERTF",
        "Name": "SaveRtf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "INSERT (write-only): Inserts a text in the caret's position, also replaces the current selection if any. Ignored if set before map.",
        "AttributeName": "INSERT",
        "Name": "Insert",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKREAL",
        "Name": "MaskReal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Signed",
            "StrValue": "SIGNED",
            "IntValue": null
          },
          {
            "Name": "Unsigned",
            "StrValue": "UNSIGNED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "LINEVALUE (read-only): returns the text of the line where the caret is. It does not include the \"\\n\" character. When MULTILINE=NO returns the same as VALUE. (since 3.5)",
        "AttributeName": "LINEVALUE",
        "Name": "LineValue",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLELINES: When MULTILINE=YES defines the number of visible lines for the Natural Size, this means that will act also as minimum number of visible lines. As for SIZE you can set to NULL after map to use it as an initial value. Default: 1 (since 3.0)",
        "AttributeName": "VISIBLELINES",
        "Name": "VisibleLines",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": true
      },
      {
        "Documentation": "SIZE (non inheritable): Since the contents can be changed by the user, the Natural Size is not affected by the text contents (since 3.0). Use VISIBLECOLUMNS and VISIBLELINES to control the Natural Size.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Default value: \"0x0\". In Windows, only the horizontal value is used. (since 3.0) (GTK 2.10 for single line)",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPINMIN",
        "Name": "SpinMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LOADRTFSTATUS",
        "Name": "LoadRtfStatus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Ok",
            "StrValue": "OK",
            "IntValue": null
          },
          {
            "Name": "Failed",
            "StrValue": "FAILED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SELECTION (non inheritable): Selection interval in characters. Returns NULL if there is no selection. Its format depends in MULTILINE=YES. The first position, lin or col, is \"1\".",
        "AttributeName": "SELECTION",
        "Name": "Selection",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Selection",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "SCROLLBAR (creation only): Valid only when MULTILINE=YES. Associates an automatic horizontal and/or vertical scrollbar to the multiline. Can be: \"VERTICAL\", \"HORIZONTAL\", \"YES\" (both) or \"NO\" (none). Default: \"YES\". For all systems, when SCROLLBAR!=NO the natural size will always include its size even if the native system hides the scrollbar. If AUTOHIDE=YES scrollbars are visible only if they are necessary, by default AUTOHIDE=NO. In Windows when FORMATTING=NO, AUTOHIDE is not supported. In Motif AUTOHIDE is not supported.",
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TABSIZE [Windows and GTK Only]: Valid only when MULTILINE=YES. Controls the number of characters for a tab stop. Default: 8.",
        "AttributeName": "TABSIZE",
        "Name": "TabsIZe",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "8",
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS(non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO. (since 3.23)",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color of the text. Default: the global attribute TXTBGCOLOR. Ignored in GTK when MULTILINE=NO.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUEMASKED (non inheritable) (write-only): sets VALUE but first checks if it is validated by MASK. If not does nothing. (since 3.4)",
        "AttributeName": "VALUEMASKED",
        "Name": "ValueMasked",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT [Windows and GTK Only] (non inheritable): horizontal text alignment. Possible values: \"ALEFT\", \"ARIGHT\", \"ACENTER\". Default: \"ALEFT\". In Motif, text is always left aligned.",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "SCROLLTOPOS (non inheritable, write only): Scroll the text to make the given character position visible. It uses the same format and reference of the CARETPOS attribute (\"pos\" starting at 0). (since 3.0)",
        "AttributeName": "SCROLLTOPOS",
        "Name": "ScrollTopOs",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FORMATTING [Windows and GTK Only] (non inheritable): When enabled allow the use of text formatting attributes. In GTK is always enabled, but only when MULTILINE=YES. Default: NO. (since 3.0)",
        "AttributeName": "FORMATTING",
        "Name": "Formatting",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SCROLLTO (non inheritable, write only): Scroll the text to make the given character position visible. It uses the same format and reference of the CARET attribute (\"lin:col\" or \"col\" starting at 1). In Windows, when FORMATTING=Yes \"col\" is ignored. (since 3.0)",
        "AttributeName": "SCROLLTO",
        "Name": "ScrollTo",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "LINECOUNT (read-only): returns the number of lines in the text. When MULTILINE=NO returns always \"1\". (since 3.5)",
        "AttributeName": "LINECOUNT",
        "Name": "LineCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVERTFSTATUS",
        "Name": "SaveRtfStatus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Ok",
            "StrValue": "OK",
            "IntValue": null
          },
          {
            "Name": "Failed",
            "StrValue": "FAILED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPINWRAP",
        "Name": "SpinWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLECOLUMNS: Defines the number of visible columns for the Natural Size, this means that will act also as minimum number of visible columns. It uses a wider character size than the one used for the SIZE attribute so strings will fit better without the need of extra columns. As for SIZE you can set to NULL after map to use it as an initial value. Default: 5 (since 3.0)",
        "AttributeName": "VISIBLECOLUMNS",
        "Name": "VisibleColumns",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "MASKINT",
        "Name": "MaskInt",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "SPINVALUE (non inheritable): the current value of the spin. The value is limited to the minimum and maximum values. SPINMAX (non inheritable): the maximum value. Default: 100. SPINMIN (non inheritable): the minimum value. Default: 0. SPININC (non inheritable): the increment value. Default: 1. SPINALIGN (creation only): the position of the spin. Can be LEFT or RIGHT. Default: RIGHT. In GTK is always RIGHT. SPINWRAP (creation only): if the position reach a limit it continues from the opposite limit. Default: NO. SPINAUTO (creation only): enables the automatic update of the text contents. Default: YES. Use SPINAUTO=NO and the VALUE attribute during SPIN_CB to control the text contents when the spin is incremented.",
        "AttributeName": "SPINVALUE",
        "Name": "SpinValue",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPINALIGN",
        "Name": "SpinAlign",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          }
        ],
        "Default": "RIGHT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKCASEI",
        "Name": "MaskCasei",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SELECTIONPOS (non inheritable): Same as SELECTION but using a zero based character index \"pos1:pos2\". Useful for indexing the VALUE string. The values ALL and NONE are also accepted. See the Notes below if using UTF-8 strings in GTK. (since 3.0)",
        "AttributeName": "SELECTIONPOS",
        "Name": "SelectionPos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Text entered by the user. The '\\n' character indicates a new line, valid only when MULTILINE=YES. After the element is mapped and if there is no text will return the empty string \"\".",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FILTER [Windows Only] (non inheritable): allows a custom filter to process the characters: Can be LOWERCASE, UPPERCASE or NUMBER (only numbers allowed). (since 3.0)",
        "AttributeName": "FILTER",
        "Name": "Filter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "LowerCase",
            "StrValue": "LOWERCASE",
            "IntValue": null
          },
          {
            "Name": "Number",
            "StrValue": "NUMBER",
            "IntValue": null
          },
          {
            "Name": "UpperCase",
            "StrValue": "UPPERCASE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SPINMAX",
        "Name": "SpinMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "100",
        "IsNullable": false
      },
      {
        "Documentation": "MULTILINE (creation only) (non inheritable): allows the edition of multiple lines. In single line mode some characters are invalid, like \"\\t\", \"\\r\" and \"\\n\". Default: NO. When set to Yes will also reset the SCROLLBAR attribute to Yes.",
        "AttributeName": "MULTILINE",
        "Name": "Multiline",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SELECTEDTEXT (non inheritable): Selection text. Returns NULL if there is no selection. When changed replaces the current selection. Similar to INSERT, but does nothing if there is no selection.",
        "AttributeName": "SELECTEDTEXT",
        "Name": "SelectedText",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ACTIVE, FONT, EXPAND, SCREENPOSITION, POSITION, MINSIZE, MAXSIZE, WID, TIP, RASTERSIZE, ZORDER, VISIBLE, THEME: also accepted.",
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHANGECASE (non inheritable): Change case according to given conversion. Can be UPPER, LOWER, TOGGLE, or TITLE. TITLE case change first letter of words separated by spaces to upper case others to lower case, but first letter is changed only if word has more than 3 characters, for instance: \"Best of the World\". Supports Latin-1 encoding only, even when using UTF-8. Does not depends on current locale. (since 3.28)",
        "AttributeName": "CHANGECASE",
        "Name": "ChangeCase",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Upper",
            "StrValue": "UPPER",
            "IntValue": null
          },
          {
            "Name": "Lower",
            "StrValue": "LOWER",
            "IntValue": null
          },
          {
            "Name": "Toggle",
            "StrValue": "TOGGLE",
            "IntValue": null
          },
          {
            "Name": "Title",
            "StrValue": "TITLE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CUEBANNER [Windows and GTK Only] (non inheritable): a text that is displayed when there is no text at the control. It works as a textual cue, or tip to prompt the user for input. Valid only for MULTILINE=NO, and works only when Visual Styles are enabled. (since 3.0) [GTK 3.2] (GTK support added in IUP 3.20)",
        "AttributeName": "CUEBANNER",
        "Name": "CueBanner",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "SPIN (non inheritable, creation only): enables a spin control attached to the element. Default: NO. The spin increments and decrements an integer number. The editing in the element is still available. (since 3.0)",
        "AttributeName": "SPIN",
        "Name": "Spin",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): Shows a border around the text. Default: \"YES\".",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "CARETPOS (non inheritable): Also the character position of the insertion point, but using a zero based character unique index \"pos\". Useful for indexing the VALUE string. See the Notes below if using UTF-8 strings in GTK. (since 3.0)",
        "AttributeName": "CARETPOS",
        "Name": "CaretPos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPINAUTO",
        "Name": "SpinAuto",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "MASK (non inheritable): Defines a mask that will filter interactive text input.",
        "AttributeName": "MASK",
        "Name": "Mask",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOHIDE",
        "Name": "AutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOREDRAW",
        "Name": "AutoRedraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CLIPBOARD (write-only): clear, cut, copy or paste the selection to or from the clipboard. Values: \"CLEAR\", \"CUT\", \"COPY\" or \"PASTE\". In Windows UNDO is also available, and REDO is available when FORMATTING=YES. (since 3.0)",
        "AttributeName": "CLIPBOARD",
        "Name": "Clipboard",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Copy",
            "StrValue": "COPY",
            "IntValue": null
          },
          {
            "Name": "Cut",
            "StrValue": "CUT",
            "IntValue": null
          },
          {
            "Name": "Paste",
            "StrValue": "PASTE",
            "IntValue": null
          },
          {
            "Name": "Clear",
            "StrValue": "CLEAR",
            "IntValue": null
          },
          {
            "Name": "Undo",
            "StrValue": "UNDO",
            "IntValue": null
          },
          {
            "Name": "Redo",
            "StrValue": "REDO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "REMOVEFORMATTING",
        "Name": "RemoveFormatting",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "All",
            "StrValue": "ALL",
            "IntValue": null
          },
          {
            "Name": "Selection",
            "StrValue": "SELECTION",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "READONLY: Allows the user only to read the contents, without changing it. Restricts keyboard input only, text value can still be changed using attributes. Navigation keys are still available. Possible values: \"YES\", \"NO\". Default: NO.",
        "AttributeName": "READONLY",
        "Name": "Readonly",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "APPEND (write-only): Inserts a text at the end of the current text. In the Multiline, if APPENDNEWLINE=YES, a \"\\n\" character will be automatically inserted before the appended text if the current text is not empty(APPENDNEWLINE default is YES). Ignored if set before map.",
        "AttributeName": "APPEND",
        "Name": "Append",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MASKNOEMPTY",
        "Name": "MaskNoEmpty",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CARET_CB",
        "Name": "Caret",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SPIN_CB",
        "Name": "Spin",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container for grouping mutual exclusive toggles. Only one of its descendent toggles will be active at a time. The toggles can be at any composition. It does not have a native representation.",
    "ClassName": "radio",
    "Name": "Radio",
    "ParentClassName": null,
    "ChildrenCount": 1,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "VALUE_HANDLE (non inheritable): Changes the active toggle. The value passed must be the handle of a child contained in the radio. When consulted if the toggles are not mapped into the native system the return value may be NULL or invalid. (since 3.0)",
        "AttributeName": "VALUE_HANDLE",
        "Name": "ValueHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Toggle",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): name identifier of the active toggle. The name is set by means of IupSetHandle. In Lua you can also use the element reference directly. When consulted if the toggles are not mapped into the native system the return value may be NULL or invalid.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Toggle",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a Gauge control. Shows a percent value that can be updated to simulate a progression. It inherits from IupCanvas. (Migrated from the IupControls library since IUP 3.24, it does not depend on the CD library anymore.)",
    "ClassName": "gauge",
    "Name": "Gauge",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Controls the gauge and text color. Default: \"0 120 220\" (changed in 3.28).",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 120 220",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "BACKCOLOR (non inheritable): color of the background inside the borders. Predefined to \"220 220 220. Can be NULL. When NULL it will use the parent's background color. (since 3.28)",
        "AttributeName": "BACKCOLOR",
        "Name": "BackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOW_TEXT",
        "Name": "ShowText",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLATCOLOR",
        "Name": "FlatColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160 160 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE (non inheritable): The initial size is \"120x14\". Set to NULL to allow the automatic layout use smaller values.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Default value: \"0x0\". (since 3.0)",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (creation only): can be \"VERTICAL\" or \"HORIZONTAL\". Default: \"HORIZONTAL\". Horizontal goes from left to right, and vertical from bottom to top. Width and height are swapped when orientation is set. (since 3.27)",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MIN (non inheritable): Contains the minimum value. Default is \"0\".",
        "AttributeName": "MIN",
        "Name": "Min",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWTEXT: Indicates if the text inside the Gauge is to be shown or not. If the gauge is dashed the text is never shown. Possible values: \"YES\" or \"NO\". Default: \"YES\".",
        "AttributeName": "SHOWTEXT",
        "Name": "ShowText",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Contains a number between \"MIN\" and \"MAX\", controlling the current position.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "MAX (non inheritable): Contains the maximum value. Default is \"1\".",
        "AttributeName": "MAX",
        "Name": "Max",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "FLAT: use a 1 pixel flat border instead of the default 3 pixels sunken border. Can be Yes or No. Default: No. (since 3.21)",
        "AttributeName": "FLAT",
        "Name": "Flat",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DASHED: Changes the style of the gauge for a dashed pattern. Default is \"NO\".",
        "AttributeName": "DASHED",
        "Name": "Dashed",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXT (non inheritable): Contains a text to be shown inside the Gauge when SHOW_TEXT=YES. If it is NULL, the percentage calculated from VALUE will be used. If the gauge is dashed the text is never shown. When ORIENTATION=VERTICAL text is drawn in 90.",
        "AttributeName": "TEXT",
        "Name": "Text",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a color palette to enable a color selection from several samples. It can select one or two colors. The primary color is selected with the left mouse button, and the secondary color is selected with the right mouse button. You can double click a cell to change its color and you can double click the preview area to switch between primary and secondary colors. (Migrated from the IupControls library since IUP 3.24, it does not depend on the CD library anymore.) It inherits from IupCanvas. Originally implemented by Andr Clinio.",
    "ClassName": "colorbar",
    "Name": "ColorBar",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "COUNT (read-only) (non inheritable): same as NUM_CELLS but it is read-only. (since 3.3)",
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "16",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SQUARED: Controls the aspect ratio of the color cells. Non square cells expand equally to occupy all of the control area. Default: \"YES\".",
        "AttributeName": "SQUARED",
        "Name": "Squared",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOW_PREVIEW",
        "Name": "ShowPreview",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "NUM_CELLS (non inheritable): Contains the number of color cells. Default: \"16\". The maximum number of colors is 256. The default colors use the same set of IupImage.",
        "AttributeName": "NUM_CELLS",
        "Name": "NumCells",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "16",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLATCOLOR",
        "Name": "FlatColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE: there is no initial size. You must define SIZE or RASTERSIZE.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SECONDARY_CELL (non inheritable): Contains the index of the secondary color. Default \"15\" (white).",
        "AttributeName": "SECONDARY_CELL",
        "Name": "SecondaryCell",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "15",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "VERTICAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FOCUSSELECT: when focus is changed the primary selection is also changed. (since 3.29)",
        "AttributeName": "FOCUSSELECT",
        "Name": "FocusSelect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOW_SECONDARY",
        "Name": "ShowSecondary",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHADOWED",
        "Name": "Shadowed",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NUM_PARTS (non inheritable): Contains the number of lines or columns. Default: \"1\".",
        "AttributeName": "NUM_PARTS",
        "Name": "NumParts",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "FLAT: use a 1 pixel flat border instead of the default 3 pixels sunken border. When enabled is the same as setting SHADOWED=NO. Can be Yes or No. Default: No. (since 3.24)",
        "AttributeName": "FLAT",
        "Name": "Flat",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PREVIEW_SIZE (non inheritable): Fixes the size of the preview area in pixels. The default size is dynamically calculated from the size of the control. The size is reset to the default when SHOW_PREVIEW=NO.",
        "AttributeName": "PREVIEW_SIZE",
        "Name": "PreviewSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TRANSPARENCY: Contains a color that will be not rendered in the color palette. The color cell will have a white and gray chess pattern. It can be used to create a palette with less colors than the number of cells.",
        "AttributeName": "TRANSPARENCY",
        "Name": "Transparency",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PRIMARY_CELL (non inheritable): Contains the index of the primary color. Default \"0\" (black).",
        "AttributeName": "PRIMARY_CELL",
        "Name": "PrimaryCell",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "CELLn: Contains the color of the \"n\" cell. \"n\" can be from 0 to NUM_CELLS-1.",
        "AttributeName": "CELL",
        "Name": "Cell",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SELECT_CB",
        "Name": "Select",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SWITCH_CB",
        "Name": "Switch",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "EXTENDED_CB",
        "Name": "ExtEnded",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CELL_CB",
        "Name": "Cell",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "String"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a progress dialog element. It is a predefined dialog for displaying the progress of an operation. The dialog is meant to be shown with the show functions IupShow or IupShowXY.",
    "ClassName": "progressdlg",
    "Name": "ProgressDlg",
    "ParentClassName": "dialog",
    "ChildrenCount": 0,
    "NativeType": "Dialog",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PERCENT",
        "Name": "Percent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLIENT",
        "Name": "MdiClient",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROL",
        "Name": "Control",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENU",
        "Name": "Menu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Menu",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOFLUSH",
        "Name": "NoFlush",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLEICON",
        "Name": "TrayTipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITYIMAGE",
        "Name": "OpacityImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HELPBUTTON",
        "Name": "HelpButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOFOCUS",
        "Name": "ShowNoFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATPARENT",
        "Name": "MaximizeAtParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITY",
        "Name": "Opacity",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COMPOSITED",
        "Name": "Composited",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDERSIZE",
        "Name": "BorderSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INC",
        "Name": "Inc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ICON: Dialog’s icon.",
        "AttributeName": "ICON",
        "Name": "Icon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLE: Simply call IupShow or IupHide for the dialog.",
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW",
        "Name": "CustomFrameDraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENUBOX",
        "Name": "MenuBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVE",
        "Name": "MdiActive",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXBOX",
        "Name": "MaxBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGHINT",
        "Name": "DialogHint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWMINIMIZENEXT",
        "Name": "ShowMinimizeNext",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGFRAME",
        "Name": "DialogFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NACTIVE",
        "Name": "NActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLE",
        "Name": "TrayTipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVEUNDER",
        "Name": "SaveUnder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAY",
        "Name": "Tray",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROGRESSHEIGHT",
        "Name": "ProgressHeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "30",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESS",
        "Name": "TaskbarProgress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "DialogSize",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIMENU",
        "Name": "MdiMenu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STARTFOCUS",
        "Name": "StartFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPDELAY",
        "Name": "TrayTipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONLIMITS",
        "Name": "CustomFrameCaptionLimits",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAME",
        "Name": "CustomFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDINEXT",
        "Name": "MdiNext",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE: Dialog title.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTESC",
        "Name": "DefaultEsc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PLACEMENT",
        "Name": "Placement",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Maximized",
            "StrValue": "MAXIMIZED",
            "IntValue": null
          },
          {
            "Name": "Minimized",
            "StrValue": "MINIMIZED",
            "IntValue": null
          },
          {
            "Name": "Full",
            "StrValue": "FULL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DESCRIPTION",
        "Name": "Description",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LAYERALPHA",
        "Name": "LayerAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOON",
        "Name": "TrayTipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIARRANGE",
        "Name": "MdiArrange",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "TileHorizontal",
            "StrValue": "TILEHORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "TileVertical",
            "StrValue": "TILEVERTICAL",
            "IntValue": null
          },
          {
            "Name": "Cascade",
            "StrValue": "CASCADE",
            "IntValue": null
          },
          {
            "Name": "Icon",
            "StrValue": "ICON",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZED",
        "Name": "Maximized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SHAPEIMAGE",
        "Name": "ShapeImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOACTIVATE",
        "Name": "ShowNoActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATDIALOG",
        "Name": "MaximizeAtDialog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINPERCENT",
        "Name": "MinPercent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "10",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOPMOST",
        "Name": "TopMost",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARBUTTON",
        "Name": "TaskbarButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Show",
            "StrValue": "SHOW",
            "IntValue": null
          },
          {
            "Name": "Hide",
            "StrValue": "HIDE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STATE",
        "Name": "State",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Aborted",
            "StrValue": "ABORTED",
            "IntValue": null
          },
          {
            "Name": "Processing",
            "StrValue": "PROCESSING",
            "IntValue": null
          },
          {
            "Name": "Undefined",
            "StrValue": "UNDEFINED",
            "IntValue": null
          },
          {
            "Name": "Idle",
            "StrValue": "IDLE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINBOX",
        "Name": "MinBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTENTER",
        "Name": "DefaultEnter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MODAL",
        "Name": "Modal",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE",
        "Name": "MdiActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "MdiActivate",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PARENTDIALOG (creation only): Name of a dialog to be used as parent. This dialog will be always in front of the parent dialog.",
        "AttributeName": "PARENTDIALOG",
        "Name": "ParentDialog",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Dialog",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKGROUND",
        "Name": "Background",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDETASKBAR",
        "Name": "HideTaskbar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BRINGFRONT",
        "Name": "BringFront",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYIMAGE",
        "Name": "TrayImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1x1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVEWINDOW",
        "Name": "ActiveWindow",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONHEIGHT",
        "Name": "CustomFrameCaptionHeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINCLOCK",
        "Name": "MinClock",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "250",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMESIMULATE",
        "Name": "CustomFramesImulate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLOSEALL",
        "Name": "MdiCloseAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHRINK",
        "Name": "Shrink",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIP",
        "Name": "TrayTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOOLBOX",
        "Name": "ToolBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIFRAME",
        "Name": "MdiFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICHILD",
        "Name": "MdiChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOTALCOUNT",
        "Name": "TotalCount",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSSTATE",
        "Name": "TaskbarProgressState",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "NoProgress",
            "StrValue": "NOPROGRESS",
            "IntValue": null
          },
          {
            "Name": "Indeterminate",
            "StrValue": "INDETERMINATE",
            "IntValue": null
          },
          {
            "Name": "Error",
            "StrValue": "ERROR",
            "IntValue": null
          },
          {
            "Name": "Paused",
            "StrValue": "PAUSED",
            "IntValue": null
          },
          {
            "Name": "Normal",
            "StrValue": "NORMAL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSVALUE",
        "Name": "TaskbarProgressValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FULLSCREEN",
        "Name": "FullScreen",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATIVEPARENT",
        "Name": "NativeParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEDIALOG",
        "Name": "MaximizedIalog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINIMIZED",
        "Name": "Minimized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIMULATEMODAL",
        "Name": "SimulateModal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "CLOSE_CB CLOSE_CB Called just before a dialog is closed when the user clicks the close button of the title bar or an equivalent action. Callback int function(Ihandle *ih); [in C] ih:close_cb() -> (ret: number) [in Lua] ih: identifies the element that activated the event. Returns: if IUP_IGNORE, it prevents the dialog from being closed. If you destroy the dialog in this callback, you must return IUP_IGNORE. IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "CLOSE_CB",
        "Name": "Close",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CANCEL_CB",
        "Name": "CanCel",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE_CB",
        "Name": "MdiActivate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEACTIVATE_CB",
        "Name": "CustomFrameActivate",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW_CB",
        "Name": "CustomFrameDraw",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SHOW_CB SHOW_CB Called right after the dialog is showed, hidden, maximized, minimized or restored from minimized/maximized. This callback is called when those actions were performed by the user or programmatically by the application. Callback int function(Ihandle *ih, int state); [in C] ih:show_cb(state: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. state: indicates which of the following situations generated the event: IUP_HIDE (since 3.0) IUP_SHOW IUP_RESTORE (was minimized or maximized) IUP_MINIMIZE IUP_MAXIMIZE (since 3.0) (not received in Motif when activated from the maximize button) Returns: IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "SHOW_CB",
        "Name": "Show",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYCLICK_CB",
        "Name": "TrayClick",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a Valuator control. Selects a value in a limited interval. Also known as Scale or Trackbar in native systems.",
    "ClassName": "val",
    "Name": "Val",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "STEP: Controls the increment for keyboard control and the mouse wheel. It is not the size of the increment. The increment size is \"step*(max-min)\", so it must be 0<step<1. Default is \"0.01\".",
        "AttributeName": "STEP",
        "Name": "Step",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TYPE",
        "Name": "Type",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the control will still get the focus when clicked. Default: YES. (since 3.0)",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (creation only) (non inheritable): Informs whether the valuator is \"VERTICAL\" or \"HORIZONTAL\". Vertical valuators are bottom to up, and horizontal valuators are left to right variations of min to max (but can be inverted using INVERTED). Default: \"HORIZONTAL\".",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": "TICKSPOS [Windows Only] (creation only): Allows to position the ticks in both sides (BOTH) or in the reverse side (REVERSE). Default: NORMAL. The normal position for horizontal orientation is at the top of the control, and for vertical orientation is at the left of the control. In Motif, the ticks position is always normal. (since 3.0)",
        "AttributeName": "TICKSPOS",
        "Name": "TicksPos",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NORMAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MIN: Contains the minimum valuator value. Default is \"0\". When changed the display will not be updated until VALUE is set.",
        "AttributeName": "MIN",
        "Name": "Min",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS(non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO. (since 3.23)",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: transparent in all systems except in Motif. It will use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RASTERSIZE (non inheritable): The initial size is 100 pixels along the major axis, and the handler normal size on the minor axis. If there are ticks then they are added to the natural size on the minor axis. The handler can be smaller than the normal size. Set to NULL to allow the automatic layout use smaller values.",
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PAGESTEP: Controls the increment for PgDn and PgUp keys. It is not the size of the increment. The increment size is \"pagestep*(max-min)\", so it must be 0<pagestep<1. Default is \"0.1\".",
        "AttributeName": "PAGESTEP",
        "Name": "PageStep",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SHOWTICKS [Windows and Motif Only]: The number of tick marks along the valuator trail. Minimum value is \"2\". Default is \"0\", in this case the ticks are not shown. It can not be changed to 0 from a non zero value, or vice-versa, after the control is mapped. GTK does not support ticks.",
        "AttributeName": "SHOWTICKS",
        "Name": "ShowTicks",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Contains a number between MIN and MAX, indicating the valuator position. Default: \"0.0\".",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "MAX: Contains the maximum valuator value. Default is \"1\". When changed the display will not be updated until VALUE is set.",
        "AttributeName": "MAX",
        "Name": "Max",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "INVERTED: Invert the minimum and maximum positions on screen. When INVERTED=YES maximum is at top and left (minimum is bottom and right), when INVERTED=NO maximum is at bottom and right (minimum is top and left). The initial value depends on ORIENTATION passed as parameter on creation, if ORIENTATION=VERTICAL default is YES, if ORIENTATION=HORIZONTAL default is NO. (since 3.0)",
        "AttributeName": "INVERTED",
        "Name": "Inverted",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON_RELEASE_CB",
        "Name": "ButtonRelease",
        "Arguments": [
          "Double"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MOUSEMOVE_CB",
        "Name": "MouseMove",
        "Arguments": [
          "Double"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON_PRESS_CB",
        "Name": "ButtonPress",
        "Arguments": [
          "Double"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a dial for regulating a given angular variable. It inherits from IupCanvas. (Migrated from the IupControls library since IUP 3.24, it does not depend on the CD library anymore.)",
    "ClassName": "dial",
    "Name": "Dial",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: foreground color. The default value is \"64 64 64\". (appears in circular dial since 3.24)",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "64 64 64",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TYPE",
        "Name": "Type",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLATCOLOR",
        "Name": "FlatColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160 160 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND: the default is \"NO\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE (non inheritable): the initial size is \"16x80\", \"80x16\" or \"40x35\" according to the dial orientation. Set to NULL to allow the automatic layout use smaller values.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (creation only) (non inheritable): dial layout configuration \"VERTICAL\", \"HORIZONTAL\" or \"CIRCULAR\". Default: \"HORIZONTAL\". Vertical increments when moved up, and decrements when moved down. Horizontal increments when moved right, and decrements when moved left. Circular increments when moved counter clock wise, and decrements when moved clock wise.",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "UNIT: unit of the angle. Can be \"DEGREES\" or \"RADIANS\". Default is \"RADIANS\". Used only in the callbacks.",
        "AttributeName": "UNIT",
        "Name": "Unit",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "RADIANS",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): The dial angular value in radians always. The value is reset to zero when the interaction is started, except for ORIENTATION=CIRCULAR. When orientation is vertical or horizontal, the dial measures relative angles. When orientation is circular the dial measure absolute angles, where the origin is at 3 O'clock.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "FLAT: use a 1 pixel flat border instead of the default 3 pixels sunken border. Can be Yes or No. Default: No. (since 3.24)",
        "AttributeName": "FLAT",
        "Name": "Flat",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "DENSITY: number of lines per pixel in the handle of the dial. Default is \"0.2\".",
        "AttributeName": "DENSITY",
        "Name": "Density",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON_RELEASE_CB",
        "Name": "ButtonRelease",
        "Arguments": [
          "Double"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MOUSEMOVE_CB",
        "Name": "MouseMove",
        "Arguments": [
          "Double"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON_PRESS_CB",
        "Name": "ButtonPress",
        "Arguments": [
          "Double"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container for composing elements in a irregular grid. It is a box that arranges the elements it contains from top to bottom and from left to right, by distributing the elements in lines or in columns. But its EXPAND attribute does not behave as a regular container, instead it behaves as a regular element expanding into the available space. The child elements are added to the control just like a vbox and hbox, sequentially. Then they are distributed accordingly the ORIENTATION attribute. When ORIENTATION=HORIZONTAL children are distributed from left to right on the first line until the line does not fits more elements according to the multibox current width, then on the second line, and so on. When ORIENTATION=VERTICAL children are distributed from top to bottom on the first column until columns does not fits more elements according to the multibox current height, then on the second column, and so on. Because of that its elements can overlap other elements in the dialog, so the ideal combination is to put the IupMultiBox inside an IupScrollBox. IMPORTANT: the actual element distribution in the container is done only after the natural size of the dialog is computed because it needs the current with or height to determine which elements will fit in the current space according to the orientation. The first time the multibox natural size is computed it returns simply the largest width and the highest height among the children. The next time it will use the size previously calculated with the line/column breaks, to avoid obtaining an outdated layout call IupRefresh or IupMap before showing the dialog (when the layout will be updated again). It does not have a native representation.",
    "ClassName": "multibox",
    "Name": "MultiBox",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MARGIN, CMARGIN: Defines a margin in pixels, CMARGIN is in the same units of the SIZE attribute. Its value has the format \"widthxheight\", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: \"0x0\" (no margin).",
        "AttributeName": "MARGIN",
        "Name": "Margin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "GAPHORIZ, CGAPHORIZ: Defines a horizontal space in pixels between elements, CGAPHORIZ is in the same units of the SIZE attribute for the height. Default: \"0\".",
        "AttributeName": "GAPHORIZ",
        "Name": "GapHoriz",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": "GAPVERT, CGAPVERT: Defines a vertical space in pixels between elements, CGAPVERT is in the same units of the SIZE attribute for the height. Default: \"0\".",
        "AttributeName": "GAPVERT",
        "Name": "GapVert",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "GAPHORIZ, CGAPHORIZ: Defines a horizontal space in pixels between elements, CGAPHORIZ is in the same units of the SIZE attribute for the height. Default: \"0\".",
        "AttributeName": "CGAPHORIZ",
        "Name": "CGapHoriz",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NUMLIN (read-only): returns the number of lines when ORIENTATION=HORIZONTAL. Returns 0 otherwise.",
        "AttributeName": "NUMLIN",
        "Name": "NumLin",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NGAPVERT, NCGAPVERT, NGAPHORIZ, NCGAPHORIZ (non inheritable): Same as *GAP* but are non inheritable.",
        "AttributeName": "NGAPVERT",
        "Name": "NGapVert",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "MARGIN, CMARGIN: Defines a margin in pixels, CMARGIN is in the same units of the SIZE attribute. Its value has the format \"widthxheight\", where width and height are integer values corresponding to the horizontal and vertical margins, respectively. Default: \"0x0\" (no margin).",
        "AttributeName": "CMARGIN",
        "Name": "CMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "GAPVERT, CGAPVERT: Defines a vertical space in pixels between elements, CGAPVERT is in the same units of the SIZE attribute for the height. Default: \"0\".",
        "AttributeName": "CGAPVERT",
        "Name": "CGapVert",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "NGAPVERT, NCGAPVERT, NGAPHORIZ, NCGAPHORIZ (non inheritable): Same as *GAP* but are non inheritable.",
        "AttributeName": "NCGAPHORIZ",
        "Name": "NcGapHoriz",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "NGAPVERT, NCGAPVERT, NGAPHORIZ, NCGAPHORIZ (non inheritable): Same as *GAP* but are non inheritable.",
        "AttributeName": "NGAPHORIZ",
        "Name": "NGapHoriz",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "NUMCOL (read-only): returns the number of columns when ORIENTATION=VERTICAL. Returns 0 otherwise.",
        "AttributeName": "NUMCOL",
        "Name": "NumCol",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": "NGAPVERT, NCGAPVERT, NGAPHORIZ, NCGAPHORIZ (non inheritable): Same as *GAP* but are non inheritable.",
        "AttributeName": "NCGAPVERT",
        "Name": "NcGapVert",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NMARGIN, NCMARGIN (non inheritable): Same as MARGIN but are non inheritable.",
        "AttributeName": "NMARGIN",
        "Name": "NMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "NMARGIN, NCMARGIN (non inheritable): Same as MARGIN but are non inheritable.",
        "AttributeName": "NCMARGIN",
        "Name": "NcMargin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Margin",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable*): The default value is \"YES\". See the documentation of the attribute for EXPAND inheritance.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (non inheritable): controls the distribution of the children in lines or in columns. Can be: HORIZONTAL or VERTICAL. Default: HORIZONTAL.",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDMAXSIZE (non inheritable): when defined limits the size of all children to a given maximum size. Uses the format \"widthxheight\". This affects each child size.",
        "AttributeName": "CHILDMAXSIZE",
        "Name": "ChildMaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDMINSPACE (non inheritable): when defined limits the space occupied by a child to a given minimum size. Uses the format \"widthxheight\". This does not affects the children size.",
        "AttributeName": "CHILDMINSPACE",
        "Name": "ChildMinSpace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "UPDATEATTRIBFROMFONT_CB",
        "Name": "UpDateAttribfromFont",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container that can interactively show or hide its child. It does not have a native representation, but it contains also several elements to implement the bar handler.",
    "ClassName": "expander",
    "Name": "Expander",
    "ParentClassName": null,
    "ChildrenCount": 2,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FRAMETIME",
        "Name": "FrameTime",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "30",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEOPENHIGHLIGHT",
        "Name": "ImageOpenHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRAPRESS1",
        "Name": "ImageExtraPress1",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRAPRESS2",
        "Name": "ImageExtraPress2",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRAPRESS3",
        "Name": "ImageExtraPress3",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKCOLOR (non inheritable): background color of the bar handler. If not defined it will use the background color of the native parent. (since 3.9)",
        "AttributeName": "BACKCOLOR",
        "Name": "BackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": "TITLEIMAGE (non inheritable): title image, shown in the bar handler near the expand/collapse button. When set it will reset TITLE (image and text title are mutually exclusive). Shown only when BARPOSITION=TOP. (since 3.14)",
        "AttributeName": "TITLEIMAGE",
        "Name": "TitleImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRA1",
        "Name": "ImageExtra1",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRA2",
        "Name": "ImageExtra2",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRA3",
        "Name": "ImageExtra3",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): image name to replace the arrow image by a custom image when STATE=CLOSE. Works only when BARPOSITION=TOP. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage. (since 3.11)",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "OPENCOLOR (non inheritable): title text color when STATE=OPEN. Defaults to the FORECOLOR if not defined. (since 3.14)",
        "AttributeName": "OPENCOLOR",
        "Name": "OpenColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HIGHCOLOR (non inheritable): title text color when highlighted. Works only when TITLEEXPAND=Yes. Defaults to the FORECOLOR if not defined. (since 3.14)",
        "AttributeName": "HIGHCOLOR",
        "Name": "HighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): the default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEIMAGEOPENHIGHLIGHT",
        "Name": "TitleImageOpenHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): title text, shown in the bar handler near the expand/collapse button. When set it will reset TITLEIMAGE. Shown only when BARPOSITION=TOP.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRAHIGHLIGHT1",
        "Name": "ImageExtraHighlight1",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRAHIGHLIGHT2",
        "Name": "ImageExtraHighlight2",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXTRAHIGHLIGHT3",
        "Name": "ImageExtraHighlight3",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "AUTOSHOW (non inheritable): enables the automatic show of the child when mouse is over the handler for more than 1 second. Default: No. See Notes bellow.",
        "AttributeName": "AUTOSHOW",
        "Name": "AutoShow",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BARSIZE (non inheritable): controls the size of the bar handler. Default: the height or width that fits all its internal elements according to BARPOSITION.",
        "AttributeName": "BARSIZE",
        "Name": "BarSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BARPOSITION (creation only): indicates the bar handler position. Possible values are \"TOP\", \"BOTTOM\", \"LEFT\" or \"RIGHT\". Default: \"TOP\".",
        "AttributeName": "BARPOSITION",
        "Name": "BarPosition",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TOP",
        "IsNullable": false
      },
      {
        "Documentation": "FRAMECOLOR (non inheritable): frame line color. Default: the global attribute DLGFGCOLOR. (since 3.23)",
        "AttributeName": "FRAMECOLOR",
        "Name": "FrameColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLEIMAGEOPEN: image name used when STATE=OPEN. TITLEIMAGEHIGHLIGHT: image name used when mouse is over the title image and STATE=CLOSE.TITLEIMAGEOPENHIGHLIGHT: image name used when mouse is over the title image and STATE=OPEN.",
        "AttributeName": "TITLEIMAGEOPEN",
        "Name": "TitleImageOpen",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "STATE (non inheritable): Show or hide the container elements. Possible values: \"OPEN\" (expanded) or \"CLOSE\" (collapsed). Default: OPEN. Setting this attribute will automatically change the layout of the entire dialog so the child can be recomposed.",
        "AttributeName": "STATE",
        "Name": "State",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Open",
            "StrValue": "OPEN",
            "IntValue": null
          },
          {
            "Name": "Closed",
            "StrValue": "CLOSED",
            "IntValue": null
          }
        ],
        "Default": "OPEN",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEHIGHLIGHT",
        "Name": "ImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NUMFRAMES",
        "Name": "NumFrames",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "10",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEIMAGEHIGHLIGHT",
        "Name": "TitleImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXTRABUTTONS (non inheritable) (creation only): sets the number of extra image buttons at right when BARPOSITION=TOP. The maximum number of buttons is 3. See the EXTRABUTTON_CB callback. Default: 0. (since 3.11)",
        "AttributeName": "EXTRABUTTONS",
        "Name": "ExtraButtons",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ANIMATION (non inheritable): enable animation during open/close. Works only for BARPOSITION=TOP and does not works for AUTOSHOW. Also the child must be a native container like IupTabs, IupFrame, IupBackgroundBox, or IupScrollBox, or it will not work accordantly. Values can be SLIDE (child controls slide down), CURTAIN (child controls appears as if a curtain is being pulled) or NO. Default: NO. ((since 3.14)",
        "AttributeName": "ANIMATION",
        "Name": "Animation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Slide",
            "StrValue": "SLIDE",
            "IntValue": null
          },
          {
            "Name": "Curtain",
            "StrValue": "CURTAIN",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLEEXPAND (non inheritable): enable the expand/collapse action also at the tile. Default: NO. (since 3.14)",
        "AttributeName": "TITLEEXPAND",
        "Name": "TitleExpand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FORECOLOR (non inheritable): title text color. Default: the global attribute DLGFGCOLOR. (since 3.9)",
        "AttributeName": "FORECOLOR",
        "Name": "ForeColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": "STATEREFRESH (non inheritable): when state is changed IupRefresh is automatically called. Can be Yes or No. Default: Yes. (since 3.16)",
        "AttributeName": "STATEREFRESH",
        "Name": "StateRefresh",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEOPEN: image name used when STATE=OPEN. IMAGEHIGHLIGHT: image name used when mouse is over the bar handler and STATE=CLOSE.IMAGEOPENHIGHLIGHT: image name used when mouse is over the bar handler and STATE=OPEN.",
        "AttributeName": "IMAGEOPEN",
        "Name": "ImageOpen",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRAMEWIDTH (non inheritable): frame line width. Default: 1. (since 3.23)",
        "AttributeName": "FRAMEWIDTH",
        "Name": "FrameWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "FRAME (non inheritable): enables the frame line around the bar area. Default: No. (since 3.23)",
        "AttributeName": "FRAME",
        "Name": "Frame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRABUTTON_CB",
        "Name": "ExtraButton",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "OPENCLOSE_CB",
        "Name": "OpenClose",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container for position elements in absolute coordinates. It is a concrete layout container. It does not have a native representation. The IupCbox is equivalent of a IupVbox or IupHbox where all the children have the FLOATING attribute set to YES, but children must use CX and CY attributes instead of the POSITION attribute.",
    "ClassName": "cbox",
    "Name": "CBox",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE / RASTERSIZE (non inheritable): Must be defined for each child. If not defined for the box, then it will be the bounding box that includes all children in their position.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates the separator interface element. It shows a line between two menu items.",
    "ClassName": "separator",
    "Name": "Separator",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Menu",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": []
  },
  {
    "Documentation": "Creates a menu element, which groups 3 types of interface elements: item, submenu and separator. Any other interface element defined inside a menu will be an error.",
    "ClassName": "menu",
    "Name": "Menu",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Menu",
    "Attributes": [
      {
        "Documentation": "BGCOLOR: the background color of the menu, affects all items in the menu. (since 3.0)",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "MENUBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RADIO (non inheritable): enables the automatic toggle of one child item. When a child item is selected the other item is automatically deselected. The menu acts like a IupRadio for its children. Submenus and their children are not affected.",
        "AttributeName": "RADIO",
        "Name": "Radio",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": "MENUCLOSE_CB MENUCLOSE_CB Called just after the menu is closed. Callback int function(Ihandle *ih); [in C] ih:menuclose_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects IupMenu",
        "AttributeName": "MENUCLOSE_CB",
        "Name": "MenuClose",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "OPEN_CB OPEN_CB Called just before the menu is opened. Callback int function(Ihandle *ih); [in C] ih:open_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects IupMenu",
        "AttributeName": "OPEN_CB",
        "Name": "Open",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a Valuator control, but it does not have native decorations. Selects a value in a limited interval. Also known as Scale or Trackbar in native systems. It behaves just like an IupVal, but since it is not a native control it has more flexibility for additional options. But ticks are NOT supported. It inherits from IupCanvas.",
    "ClassName": "flatval",
    "Name": "FlatVal",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Controls the handler color. Default: \"0 120 220\".",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 120 220",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HASFOCUS",
        "Name": "HasFocus",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "STEP (non inheritable): Controls the increment for keyboard control and the mouse wheel. It is not the size of the increment. The increment size is \"step*(max-min)\", so it must be 0<step<1. Default is \"0.01\".",
        "AttributeName": "STEP",
        "Name": "Step",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HANDLERSIZE (non inheritable): handler size in the same direction of the ORIENTATION. Default: 0. When 0 it will be calculated with half of the dimension opposite to the ORIENTATION. If IMAGE is used, it will be ignored. When IMAGE is not used is the handler size in the opposite direction is the size of the element.",
        "AttributeName": "HANDLERSIZE",
        "Name": "HandlerSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUSFEEDBACK",
        "Name": "FocusFeedback",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SLIDERCOLOR: slider background color. Default: \"220 220 220\".",
        "AttributeName": "SLIDERCOLOR",
        "Name": "SliderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "220 220 220",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the control will still get the focus when clicked. Default: YES.",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PSCOLOR: color used to indicate a press state. Pre-defined to \"0 60 190\". Can be set to NULL. If NULL FGCOLOR will be used instead.",
        "AttributeName": "PSCOLOR",
        "Name": "PsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): Image name for the handler. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage. If defined the handler will be replaced by the image.",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SIZE (non inheritable): The natural size is the height of one character in one direction and the width of 15 characters in the other.",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERHLCOLOR: color used for borders when highlighted. Pre-defined to \"0 120 220\". Can be set to NULL. If NULL BORDERCOLOR will be used instead.",
        "AttributeName": "BORDERHLCOLOR",
        "Name": "BorderHlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (creation only) (non inheritable): Informs whether the valuator is \"VERTICAL\" or \"HORIZONTAL\". Vertical valuators are bottom to up, and horizontal valuators are left to right variations of min to max. Default: \"HORIZONTAL\".",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MIN: Contains the minimum valuator value. Default is \"0\". When changed the display will not be updated until VALUE is set.",
        "AttributeName": "MIN",
        "Name": "Min",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS(non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO.",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: ignored. It will use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERPSCOLOR: color used for borders when pressed or selected. Default use BORDERCOLOR.",
        "AttributeName": "BORDERPSCOLOR",
        "Name": "BorderPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PAGESTEP: Controls the increment for PgDn and PgUp keys. It is not the size of the increment. The increment size is \"pagestep*(max-min)\", so it must be 0<pagestep<1. Default is \"0.1\".",
        "AttributeName": "PAGESTEP",
        "Name": "PageStep",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERCOLOR: color used for borders. Default: \"50 150 255\". This is for the drawn border.",
        "AttributeName": "BORDERCOLOR",
        "Name": "BorderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "50 150 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HLCOLOR: color used to indicate a highlight state. Pre-defined to \"30 150 250\". Can be set to NULL. If NULL FGCOLOR will be used instead.",
        "AttributeName": "HLCOLOR",
        "Name": "HlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEPRESS (non inheritable): Image name of the element in pressed state. If it is not defined then the IMAGE is used.",
        "AttributeName": "IMAGEPRESS",
        "Name": "ImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Contains a number between MIN and MAX, indicating the valuator position. Default: \"0.0\".",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEZOOM (non inheritable): if set the back image will be zoomed to occupy the full background. Aspect ratio is NOT preserved. Can be Yes or No. Default: No.",
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FITTOBACKIMAGE (non inheritable): enable the natural size to be computed from the BACKIMAGE. If BACKIMAGE is not defined will be ignored. Can be Yes or No. Default: No.",
        "AttributeName": "FITTOBACKIMAGE",
        "Name": "FitToBackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEHIGHLIGHT (non inheritable): Image name of the element in highlight state. If it is not defined then the IMAGE is used.",
        "AttributeName": "IMAGEHIGHLIGHT",
        "Name": "ImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGE (non inheritable): image name to be used as background. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEINACTIVE (non inheritable): Image name of the element when inactive. If it is not defined then the IMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "IMAGEINACTIVE",
        "Name": "ImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "MAX: Contains the maximum valuator value. Default is \"1\". When changed the display will not be updated until VALUE is set.",
        "AttributeName": "MAX",
        "Name": "Max",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): the default value is \"NO\". This is the IupCanvas border.",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "SLIDERBORDERCOLOR: slider border color. Default: \"160 160 160\".",
        "AttributeName": "SLIDERBORDERCOLOR",
        "Name": "SliderBorderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160 160 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SLIDERSIZE (non inheritable): slider size in the same direction of the ORIENTATION. Default: 5. Ignored when BACKIMAGE is used.",
        "AttributeName": "SLIDERSIZE",
        "Name": "SliderSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERWIDTH: line width used for borders. Default: \"1\". Any borders can be hidden by simply setting this value to 0. This is for the IupFlatButton drawn border.",
        "AttributeName": "BORDERWIDTH",
        "Name": "BorderWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_FOCUS_CB",
        "Name": "FlatFocus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_LEAVEWINDOW_CB",
        "Name": "FlatLeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ENTERWINDOW_CB",
        "Name": "FlatEnterWindow",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_BUTTON_CB",
        "Name": "FlatButton",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGING_CB",
        "Name": "ValueChangIng",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_WHEEL_CB",
        "Name": "FlatWheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_MOTION_CB",
        "Name": "FlatMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an interface element that is a toggle, but it does not have native decorations. When selected, this element activates a function in the application. Its visual presentation can contain a text and/or an image. It behaves just like an IupToggle, but since it is not a native control it has more flexibility for additional options. It inherits from IupCanvas.",
    "ClassName": "flattoggle",
    "Name": "FlatToggle",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKFGCOLOR",
        "Name": "CheckFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HASFOCUS (read-only): returns the button state if has focus. Can be Yes or No.",
        "AttributeName": "HASFOCUS",
        "Name": "HasFocus",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEHIGHLIGHT (non inheritable): foreground image name of the element in highlight state. If it is not defined then the FRONTIMAGE is used.",
        "AttributeName": "FRONTIMAGEHIGHLIGHT",
        "Name": "FrontImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKIMAGENOTDEFHIGHLIGHT",
        "Name": "CheckImageNotDefHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SELECTEDNOTIFY (non inheritable): for a toggle inside a radio notify the selected toggle when pressed again. (since 3.28)",
        "AttributeName": "SELECTEDNOTIFY",
        "Name": "SelectedNotify",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHECKRIGHT (non inheritable): place the check box at the right. Can be \"YES\" or \"NO\". Default: \"NO\".",
        "AttributeName": "CHECKRIGHT",
        "Name": "CheckRight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKIMAGENOTDEFINACTIVE",
        "Name": "CheckImageNotDefInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHECKIMAGEHIGHLIGHT (non inheritable): check box image name of the element in highlight state when VALUE=OFF. If it is not defined then the CHECKIMAGE is used.",
        "AttributeName": "CHECKIMAGEHIGHLIGHT",
        "Name": "CheckImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FOCUSFEEDBACK (non inheritable): draw the focus feedback. Can be Yes or No. Default: Yes. (since 3.26)",
        "AttributeName": "FOCUSFEEDBACK",
        "Name": "FocusFeedback",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKIMAGEONINACTIVE",
        "Name": "CheckImageOnInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the button will respect CANFOCUS in opposite to the other controls. Default: YES.",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PSCOLOR: background color used to indicate a press state. Pre-defined to \"150 200 235\". Can be set to NULL. If NULL BGCOLOR will be used instead.",
        "AttributeName": "PSCOLOR",
        "Name": "PsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): Image name. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKPSCOLOR",
        "Name": "CheckPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"NO\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKIMAGEONPRESS",
        "Name": "CheckImageOnPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Alignment does not includes the padding area. Default value: \"0x0\". Value can be DEFAULTBUTTONPADDING, so the global attribute of this name will be used instead (since 3.29).",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERHLCOLOR: color used for borders when highlighted. Default use BORDERCOLOR.",
        "AttributeName": "BORDERHLCOLOR",
        "Name": "BorderHlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTHLCOLOR: text color used to indicate a highlight state. If not defined FGCOLOR will be used instead. (since 3.26)",
        "AttributeName": "TEXTHLCOLOR",
        "Name": "TextHlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "CHECKIMAGE (non inheritable): image name to be used as check box when VALUE=OFF, be sure the image size is equal to CHECKSIZE-2. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage. If this attribute is defined the check box is not drawn, the images will be used instead.",
        "AttributeName": "CHECKIMAGE",
        "Name": "CheckImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTCLIP",
        "Name": "TextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTELLIPSIS (non inheritable): If the text is larger that its box, an ellipsis (\"...\") will be placed near the last visible part of the text and replace the invisible part. It will be ignored when TEXTWRAP=Yes. (since 3.25)",
        "AttributeName": "TEXTELLIPSIS",
        "Name": "TextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKIMAGENOTDEF",
        "Name": "CheckImageNotDef",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEINACTIVE (non inheritable): background image name of the element when inactive. If it is not defined then the BACKIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "BACKIMAGEINACTIVE",
        "Name": "BackImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): toggle text. The '\\n' character is accepted for line change.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "RADIO (read-only): returns if the toggle is inside a radio. Can be \"YES\" or \"NO\".",
        "AttributeName": "RADIO",
        "Name": "Radio",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS (non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO.",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color. If text and image are not defined, the button is configured to simply show a color, in this case set the button size because the natural size will be very small. If not defined it will use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHECKIMAGEPRESS (non inheritable): check box image name of the element in pressed state when VALUE=OFF. If it is not defined then the CHECKIMAGE is used.",
        "AttributeName": "CHECKIMAGEPRESS",
        "Name": "CheckImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HIGHLIGHTED (read-only): returns the button state if highlighted. Can be Yes or No.",
        "AttributeName": "HIGHLIGHTED",
        "Name": "HighlightEd",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKBGCOLOR",
        "Name": "CheckBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): horizontal and vertical alignment of the set image+text. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\", combined to \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: \"ACENTER:ACENTER\". Partial values are also accepted, like \"ARIGHT\" or \":ATOP\", the other value will be obtained from the default value. Alignment does not includes the padding area.",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ACENTER:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SPACING (non inheritable): spacing between the image and the text. Default: \"2\".",
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": true
      },
      {
        "Documentation": "BORDERPSCOLOR: color used for borders when pressed or selected. Default use BORDERCOLOR.",
        "AttributeName": "BORDERPSCOLOR",
        "Name": "BorderPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "TEXTPSCOLOR: text color used to indicate a press state. If not defined FGCOLOR will be used instead. (since 3.26)",
        "AttributeName": "TEXTPSCOLOR",
        "Name": "TextPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHECKSPACING (non inheritable): spacing between the check box and the image+text. The space occupies the image+text area. Default: 5",
        "AttributeName": "CHECKSPACING",
        "Name": "CheckSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5",
        "IsNullable": false
      },
      {
        "Documentation": "BORDERCOLOR: color used for borders. Default: \"50 150 255\". This is for the IupFlatToggle drawn border.",
        "AttributeName": "BORDERCOLOR",
        "Name": "BorderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "50 150 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKIMAGEONHIGHLIGHT",
        "Name": "CheckImageOnHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEINACTIVE (non inheritable): foreground image name of the element when inactive. If it is not defined then the FRONTIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "FRONTIMAGEINACTIVE",
        "Name": "FrontImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEHIGHLIGHT (non inheritable): background image name of the element in highlight state. If it is not defined then the BACKIMAGE is used.",
        "AttributeName": "BACKIMAGEHIGHLIGHT",
        "Name": "BackImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEPRESS (non inheritable): foreground image name of the element in pressed state. If it is not defined then the FRONTIMAGE is used.",
        "AttributeName": "FRONTIMAGEPRESS",
        "Name": "FrontImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CSPACING: same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute. (since 3.29)",
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HLCOLOR: background color used to indicate a highlight state. Pre-defined to \"200 225 245\". Can be set to NULL. If NULL BGCOLOR will be used instead.",
        "AttributeName": "HLCOLOR",
        "Name": "HlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGE (non inheritable): image name to be used as foreground. The foreground image is drawn in the same position as the background, but it is drawn at last. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "FRONTIMAGE",
        "Name": "FrontImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKHLCOLOR",
        "Name": "CheckHlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKIMAGENOTDEFPRESS",
        "Name": "CheckImageNotDefPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEPRESS (non inheritable): Image name of the element in pressed state. If it is not defined then the IMAGE is used.",
        "AttributeName": "IMAGEPRESS",
        "Name": "ImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "CHECKIMAGEINACTIVE (non inheritable): check box image name of the element when inactive and VALUE=OFF. If it is not defined then the CHECKIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "CHECKIMAGEINACTIVE",
        "Name": "CheckImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Toggle's state. Values can be \"ON\", \"OFF\" or \"TOGGLE\". If 3STATE=YES then can also be \"NOTDEF\". Default: \"OFF\". The TOGGLE option will invert the current state. Can only be set to ON if the toggle is inside a radio, it will automatically set to OFF the previous toggle that was ON in the radio.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEZOOM (non inheritable): if set the back image will be zoomed to occupy the full background. Aspect ratio is NOT preserved. Can be Yes or No. Default: No. (since 3.25)",
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTORIENTATION",
        "Name": "TextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FITTOBACKIMAGE (non inheritable): enable the natural size to be computed from the BACKIMAGE. If BACKIMAGE is not defined will be ignored. Can be Yes or No. Default: No.",
        "AttributeName": "FITTOBACKIMAGE",
        "Name": "FitToBackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEHIGHLIGHT (non inheritable): Image name of the element in highlight state. If it is not defined then the IMAGE is used.",
        "AttributeName": "IMAGEHIGHLIGHT",
        "Name": "ImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGE (non inheritable): image name to be used as background. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEINACTIVE (non inheritable): Image name of the element when inactive. If it is not defined then the IMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "IMAGEINACTIVE",
        "Name": "ImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "SHOWBORDER: by default borders are drawn only when the button is highlighted, if SHOWBORDER=Yes borders are always show. When SHOWBORDER=Yes and BGCOLOR is not defined, the actual BGCOLOR will be a darker version of the background color of the native parent.",
        "AttributeName": "SHOWBORDER",
        "Name": "ShowBorder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHECKSIZE (non inheritable): size of the check box when visible. Default depends on the resolution: 16 (dpi <= 120), or 24 (dpi > 120). Set it to 0 to hide the check box. When the check box is shown the borders are not shown, and the background is not highlighted.",
        "AttributeName": "CHECKSIZE",
        "Name": "CheckSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): the default value is \"NO\". This is the IupCanvas border.",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "IGNORERADIO (non inheritable): when set the toggle will not behave as a radio when inside an IupRadio hierarchy.",
        "AttributeName": "IGNORERADIO",
        "Name": "IgnoreRadio",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEPOSITION (non inheritable): Position of the image relative to the text when both are displayed. Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.",
        "AttributeName": "IMAGEPOSITION",
        "Name": "ImagePosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          },
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          }
        ],
        "Default": "LEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERWIDTH: line width used for borders. Default: \"1\". Any borders can be hidden by simply setting this value to 0. This is for the IupFlatToggle drawn border. When the check box is shown the borders are not shown, and the background is not highlighted.",
        "AttributeName": "BORDERWIDTH",
        "Name": "BorderWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTALIGNMENT (non inheritable): Horizontal text alignment for multiple lines. Can be: ALEFT, ARIGHT or ACENTER. Default: ALEFT.",
        "AttributeName": "TEXTALIGNMENT",
        "Name": "TextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          },
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHECKALIGN (non inheritable): vertical alignment of the check box. Can be \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: ACENTER. (since 3.26)",
        "AttributeName": "CHECKALIGN",
        "Name": "CheckAlign",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHECKIMAGEON",
        "Name": "CheckImageOn",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTWRAP (non inheritable): For single line texts if the text is larger than its box the line will be automatically broken in multiple lines. Notice that this is done internally by the system, the element natural size will still use only a single line. For the remaining lines to be visible the element should use EXPAND=VERTICAL or set a SIZE/RASTERSIZE with enough height for the wrapped lines. (since 3.25)",
        "AttributeName": "TEXTWRAP",
        "Name": "TextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEPRESS (non inheritable): background image name of the element in pressed state. If it is not defined then the BACKIMAGE is used.",
        "AttributeName": "BACKIMAGEPRESS",
        "Name": "BackImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": "PRESSED (read-only): returns the button state if pressed. Can be Yes or No.",
        "AttributeName": "PRESSED",
        "Name": "Pressed",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_FOCUS_CB",
        "Name": "FlatFocus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_LEAVEWINDOW_CB",
        "Name": "FlatLeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ENTERWINDOW_CB",
        "Name": "FlatEnterWindow",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_BUTTON_CB",
        "Name": "FlatButton",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ACTION",
        "Name": "FlatAction",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_MOTION_CB",
        "Name": "FlatMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a month calendar interface element, where the user can select a date. GTK and Windows only. NOT available in Motif.",
    "ClassName": "calendar",
    "Name": "Calendar",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "TODAY (read-only): Returns the date corresponding to today in VALUE format.",
        "AttributeName": "TODAY",
        "Name": "Today",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Date",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE: the current date always in the format \"year/month/day\" (\"%d/%d/%d\" in C). Can be set to \"TODAY\". Default value is the today date.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WEEKNUMBERS",
        "Name": "WeekNumbers",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an item of the menu interface element. When selected, it generates an action.",
    "ClassName": "item",
    "Name": "Item",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Menu",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "FLAT_ALPHA",
        "Name": "FlatAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Item text. The \"&\" character can be used to define a mnemonic, the next character will be used as key. Use \"&&\" to show the \"&\" character instead on defining a mnemonic. When in a menu bar an item that has a mnemonic can be activated from any control in the dialog using the \"Alt+key\" combination.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMPRESS [Windows and GTK Only] (non inheritable): Image name of the check mark image when VALUE=ON.",
        "AttributeName": "IMPRESS",
        "Name": "Impress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE [Windows and GTK Only] (non inheritable): Image name of the check mark image when VALUE=OFF. In Windows, an item in a menu bar cannot have a check mark. Ignored if item in a menu bar. A recommended size would be 16x16 to fit the image in the menu item. In Windows, if larger than the check mark area it will be cropped.",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "MENUBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": "TITLEIMAGE (non inheritable): Image name of the title image. In Windows, it appears before of the title text and after the check mark area (so both title and title image can be visible). In Motif, it must be at least defined during map, it replaces the text, and only images will be possible to set (TITLE will be hidden). In GTK, it will appear on the check mark area. (since 3.0)",
        "AttributeName": "TITLEIMAGE",
        "Name": "TitleImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "KEY (non inheritable): Underlines a key character in the submenu title. It is updated only when TITLE is updated. Deprecated (since 3.0), use the mnemonic support directly in the TITLE attribute.",
        "AttributeName": "KEY",
        "Name": "Key",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Indicates the item's state. When the value is ON, a mark will be displayed to the left of the item. Default: OFF. An item in a menu bar cannot have a check mark. When IMAGE is used, the checkmark is not shown. See the item AUTOTOGGLE attribute and the menu RADIO attribute.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "On",
            "StrValue": "ON",
            "IntValue": null
          },
          {
            "Name": "Off",
            "StrValue": "OFF",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (non inheritable): In Windows, returns the HMENU of the parent menu.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "AUTOTOGGLE (non inheritable): enables the automatic toggle of VALUE state when the item is activated. Default: NO. (since 3.0)",
        "AttributeName": "AUTOTOGGLE",
        "Name": "AutoToggle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HIGHLIGHT_CB HIGHLIGHT_CB Callback triggered every time the user selects an IupItem or IupSubmenu. Callback int function(Ihandle *ih); [in C] elem:highlight_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects IupItem, IupSubmenu",
        "AttributeName": "HIGHLIGHT_CB",
        "Name": "Highlight",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a void container for composing elements created using a list of IupParam elements. Each param is used to create several lines of controls internally arranged in a vertical composition. It does not have a native representation.",
    "ClassName": "parambox",
    "Name": "ParamBox",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": "MODIFIABLE: controls the active state of all controls but when disabled allows the text boxes to be read-only and selectable instead of inactive. Default: Yes. (since 3.20)",
        "AttributeName": "MODIFIABLE",
        "Name": "Modifiable",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "STATUS [read-only]: set to 1 when button1 is activated, and set to 0 when button2 is activated or the IupGetParam dialog close button is clicked.",
        "AttributeName": "STATUS",
        "Name": "Status",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "USERDATA: will hold the user data passed to the callback.",
        "AttributeName": "USERDATA",
        "Name": "UserData",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "VoidPtr",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BUTTON1, BUTTON2, BUTTON3 [read-only]: returns an IUP Ihandle* of the respective button in the button box.",
        "AttributeName": "BUTTON1",
        "Name": "Button1",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON2",
        "Name": "Button2",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTON3",
        "Name": "Button3",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable*): The default value is \"YES\". See the documentation of the attribute for EXPAND inheritance.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WID (read-only): returns -1 if mapped.",
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PARAMCOUNT [read-only]: returns the number of parameters not counting separators and button names.",
        "AttributeName": "PARAMCOUNT",
        "Name": "ParamCount",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "LABELALIGN: controls the alignment of all labels. Can be ALEFT or ARIGHT. Default: ALEFT. (since 3.20)",
        "AttributeName": "LABELALIGN",
        "Name": "LabelAlign",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "PARAM_CB",
        "Name": "Param",
        "Arguments": [
          "Int",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an interface element that is a button, but it does not have native decorations. When selected, this element activates a function in the application. Its visual presentation can contain a text and/or an image. It behaves just like an IupButton, but since it is not a native control it has more flexibility for additional options. It can also behave like an IupToggle (without the checkmark). It inherits from IupCanvas.",
    "ClassName": "flatbutton",
    "Name": "FlatButton",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "HASFOCUS (read-only): returns the button state if has focus. Can be Yes or No. (since 3.21)",
        "AttributeName": "HASFOCUS",
        "Name": "HasFocus",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEHIGHLIGHT (non inheritable): foreground image name of the element in highlight state. If it is not defined then the FRONTIMAGE is used.",
        "AttributeName": "FRONTIMAGEHIGHLIGHT",
        "Name": "FrontImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FOCUSFEEDBACK (non inheritable): draw the focus feedback. Can be Yes or No. Default: Yes. (since 3.26)",
        "AttributeName": "FOCUSFEEDBACK",
        "Name": "FocusFeedback",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. Default: YES.",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PSCOLOR: background color used to indicate a press state. Pre-defined to \"150 200 235\". Can be set to NULL. If NULL BGCOLOR will be used instead.",
        "AttributeName": "PSCOLOR",
        "Name": "PsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): Image name. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"NO\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Alignment does not includes the padding area. Default value: \"0x0\". Value can be DEFAULTBUTTONPADDING, so the global attribute of this name will be used instead (since 3.29).",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERHLCOLOR: color used for borders when highlighted. Default use BORDERCOLOR. (since 3.19)",
        "AttributeName": "BORDERHLCOLOR",
        "Name": "BorderHlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTHLCOLOR: text color used to indicate a highlight state. If not defined FGCOLOR will be used instead. (since 3.26)",
        "AttributeName": "TEXTHLCOLOR",
        "Name": "TextHlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": "TOGGLE: enabled the toggle behavior. Default: NO.",
        "AttributeName": "TOGGLE",
        "Name": "Toggle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTCLIP",
        "Name": "TextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTELLIPSIS (non inheritable): If the text is larger that its box, an ellipsis (\"...\") will be placed near the last visible part of the text and replace the invisible part. It will be ignored when TEXTWRAP=Yes. (since 3.25)",
        "AttributeName": "TEXTELLIPSIS",
        "Name": "TextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEINACTIVE (non inheritable): background image name of the element when inactive. If it is not defined then the BACKIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "BACKIMAGEINACTIVE",
        "Name": "BackImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Label's text. The '\\n' character is accepted for line change.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "RADIO (read-only): returns if the toggle is inside a radio. Can be \"YES\" or \"NO\". Valid only after the element is mapped and TOGGLE=Yes, before returns NULL.",
        "AttributeName": "RADIO",
        "Name": "Radio",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS (non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO. (since 3.23)",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color. If text and image are not defined, the button is configured to simply show a color, in this case set the button size because the natural size will be very small. If not defined it will use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HIGHLIGHTED (read-only): returns the button state if highlighted. Can be Yes or No. (since 3.21)",
        "AttributeName": "HIGHLIGHTED",
        "Name": "HighlightEd",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): horizontal and vertical alignment of the set image+text. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\", combined to \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: \"ACENTER:ACENTER\". Partial values are also accepted, like \"ARIGHT\" or \":ATOP\", the other value will be obtained from the default value. Alignment does not includes the padding area.",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ACENTER:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SPACING (non inheritable): spacing between the image and the text. Default: \"2\".",
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": true
      },
      {
        "Documentation": "BORDERPSCOLOR: color used for borders when pressed or selected. Default use BORDERCOLOR. (since 3.19)",
        "AttributeName": "BORDERPSCOLOR",
        "Name": "BorderPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "TEXTPSCOLOR: text color used to indicate a press state. If not defined FGCOLOR will be used instead. (since 3.26)",
        "AttributeName": "TEXTPSCOLOR",
        "Name": "TextPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERCOLOR: color used for borders. Default: \"50 150 255\". This is for the IupFlatButton drawn border.",
        "AttributeName": "BORDERCOLOR",
        "Name": "BorderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "50 150 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEINACTIVE (non inheritable): foreground image name of the element when inactive. If it is not defined then the FRONTIMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "FRONTIMAGEINACTIVE",
        "Name": "FrontImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEHIGHLIGHT (non inheritable): background image name of the element in highlight state. If it is not defined then the BACKIMAGE is used.",
        "AttributeName": "BACKIMAGEHIGHLIGHT",
        "Name": "BackImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGEPRESS (non inheritable): foreground image name of the element in pressed state. If it is not defined then the FRONTIMAGE is used.",
        "AttributeName": "FRONTIMAGEPRESS",
        "Name": "FrontImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CSPACING: same as SPACING but using the units of the vertical part of the SIZE attribute. It will actually set the SPACING attribute. (since 3.29)",
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HLCOLOR: background color used to indicate a highlight state. Pre-defined to \"200 225 245\". Can be set to NULL. If NULL BGCOLOR will be used instead.",
        "AttributeName": "HLCOLOR",
        "Name": "HlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FRONTIMAGE (non inheritable): image name to be used as foreground. The foreground image is drawn in the same position as the background, but it is drawn at last. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "FRONTIMAGE",
        "Name": "FrontImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEPRESS (non inheritable): Image name of the element in pressed state. If it is not defined then the IMAGE is used.",
        "AttributeName": "IMAGEPRESS",
        "Name": "ImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Toggle's state. Values can be \"ON\", \"OFF\" or \"TOGGLE\". Default: \"OFF\". The TOGGLE option will invert the current state. Valid only when TOGGLE=Yes. Can only be set to ON for a toggle inside a radio, it will automatically set to OFF the previous toggle that was ON.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEZOOM (non inheritable): if set the back image will be zoomed to occupy the full background. Aspect ratio is NOT preserved. Can be Yes or No. Default: No. (since 3.25)",
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CPADDING: same as PADDING but using the units of the SIZE attribute. It will actually set the PADDING attribute. (since 3.29)",
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTORIENTATION",
        "Name": "TextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "FITTOBACKIMAGE (non inheritable): enable the natural size to be computed from the BACKIMAGE. If BACKIMAGE is not defined will be ignored. Can be Yes or No. Default: No.",
        "AttributeName": "FITTOBACKIMAGE",
        "Name": "FitToBackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEHIGHLIGHT (non inheritable): Image name of the element in highlight state. If it is not defined then the IMAGE is used.",
        "AttributeName": "IMAGEHIGHLIGHT",
        "Name": "ImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGE (non inheritable): image name to be used as background. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage.",
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEINACTIVE (non inheritable): Image name of the element when inactive. If it is not defined then the IMAGE is used and its colors will be replaced by a modified version creating the disabled effect.",
        "AttributeName": "IMAGEINACTIVE",
        "Name": "ImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "SHOWBORDER: by default borders are drawn only when the button is highlighted, if SHOWBORDER=Yes borders are always show. When SHOWBORDER=Yes and BGCOLOR is not defined, the actual BGCOLOR will be a darker version of the background color of the native parent. (since 3.25)",
        "AttributeName": "SHOWBORDER",
        "Name": "ShowBorder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): the default value is \"NO\". This is the IupCanvas border.",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "IGNORERADIO (non inheritable): when set the toggle will not behave as a radio when inside an IupRadio hierarchy. (since 3.21)",
        "AttributeName": "IGNORERADIO",
        "Name": "IgnoreRadio",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMAGEPOSITION (non inheritable): Position of the image relative to the text when both are displayed. Can be: LEFT, RIGHT, TOP, BOTTOM. Default: LEFT.",
        "AttributeName": "IMAGEPOSITION",
        "Name": "ImagePosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          },
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          }
        ],
        "Default": "LEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERWIDTH: line width used for borders. Default: \"1\". Any borders can be hidden by simply setting this value to 0. This is for the IupFlatButton drawn border.",
        "AttributeName": "BORDERWIDTH",
        "Name": "BorderWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTALIGNMENT (non inheritable): Horizontal text alignment for multiple lines. Can be: ALEFT, ARIGHT or ACENTER. Default: ALEFT. (since 3.22)",
        "AttributeName": "TEXTALIGNMENT",
        "Name": "TextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          },
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TEXTWRAP (non inheritable): For single line texts if the text is larger than its box the line will be automatically broken in multiple lines. Notice that this is done internally by the system, the element natural size will still use only a single line. For the remaining lines to be visible the element should use EXPAND=VERTICAL or set a SIZE/RASTERSIZE with enough height for the wrapped lines. (since 3.25)",
        "AttributeName": "TEXTWRAP",
        "Name": "TextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKIMAGEPRESS (non inheritable): background image name of the element in pressed state. If it is not defined then the BACKIMAGE is used.",
        "AttributeName": "BACKIMAGEPRESS",
        "Name": "BackImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": "PRESSED (read-only): returns the button state if pressed. Can be Yes or No. (since 3.21)",
        "AttributeName": "PRESSED",
        "Name": "Pressed",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_FOCUS_CB",
        "Name": "FlatFocus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_LEAVEWINDOW_CB",
        "Name": "FlatLeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ENTERWINDOW_CB",
        "Name": "FlatEnterWindow",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_BUTTON_CB",
        "Name": "FlatButton",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ACTION",
        "Name": "FlatAction",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_MOTION_CB",
        "Name": "FlatMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an interface element that is a canvas - a drawing area for your application.",
    "ClassName": "canvas",
    "Name": "Canvas",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": "HDC_WMPAINT [Windows Only] (non inheritable): Contains the HDC created with the BeginPaint inside the WM_PAINT message. Valid only during the ACTION callback.",
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DROPFILESTARGET [Windows and GTK Only] (non inheritable): Enable or disable the drop of files. Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled.",
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the canvas will respect CANFOCUS differently to some other controls. Default: YES. (since 3.0)",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CURSOR (non inheritable): Defines a cursor for the canvas. The Windows SDK recommends that cursors and icons should be implemented as resources rather than created at run time.",
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\". The natural size is the size of 1 character.",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "SCROLLBAR (creation only): Associates a horizontal and/or vertical scrollbar to the canvas. Default: \"NO\". The secondary attributes are all non inheritable.",
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS(non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO. (since 3.23)",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color. The background is painted only if the ACTION callback is not defined. If the callback is defined the application must draw all the canvas contents. In GTK or Motif if you set the ACTION callback after map then you should also set BGCOLOR to any value just after setting the callback or the first redraw will be lost. Default: \"255 255 255\".",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DX: Size of the thumb in the horizontal scrollbar. Also the horizontal page size. Default: \"0.1\". DY: Size of the thumb in the vertical scrollbar. Also the vertical page size. Default: \"0.1\". POSX: Position of the thumb in the horizontal scrollbar. Default: \"0.0\". POSY: Position of the thumb in the vertical scrollbar. Default: \"0.0\". XMIN: Minimum value of the horizontal scrollbar. Default: \"0.0\". XMAX: Maximum value of the horizontal scrollbar. Default: \"1.0\". YMIN: Minimum value of the vertical scrollbar. Default: \"0.0\". YMAX: Maximum value of the vertical scrollbar. Default: \"1.0\". LINEX: The amount the thumb moves when an horizontal step is performed. Default: 1/10th of DX. (since 3.0) LINEY: The amount the thumb moves when a vertical step is performed. Default: 1/10th of DY. (since 3.0) XAUTOHIDE: When enabled, if DX >= XMAX-XMIN then the horizontal scrollbar is hidden. Default: \"YES\". (since 3.0) YAUTOHIDE: When enabled, if DY >= YMAX-YMIN then the vertical scrollbar is hidden. Default: \"YES\". (since 3.0)",
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DRAWSIZE (non inheritable): The size of the drawing area in pixels. This size is also used in the RESIZE_CB callback.",
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKINGSTORE [Motif Only]: Controls the canvas backing store flag. The default value is \"YES\".",
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "DRAWDRIVER (read-only): returns the name of the draw driver in use by the IupDraw API. Can be: X11 (Motif), GDK (GTK), Cairo (GTK), D2D (Windows), GDI+ (Windows) or GDI (Windows). (since 3.25)",
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "HWND [Windows Only] (non inheritable, read-only): Returns the Windows Window handle. Available in the Windows driver or in the GTK driver in Windows.",
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ACTIVE, FONT, SCREENPOSITION, POSITION, MINSIZE, MAXSIZE, WID, TIP, SIZE, RASTERSIZE, ZORDER, VISIBLE, THEME: also accepted.",
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): Shows a border around the canvas. Default: \"YES\".",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "WHEELDROPFOCUS (non inheritable): when the wheel is used the focus control receives a SHOWDROPDOWN=No. (since 3.28)",
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TOUCH [Windows 7 Only]: enable the multi-touch events processing. (since 3.3)",
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a dialog element. It manages user interaction with the interface elements. For any interface element to be shown, it must be encapsulated in a dialog.",
    "ClassName": "dialog",
    "Name": "Dialog",
    "ParentClassName": null,
    "ChildrenCount": 1,
    "NativeType": "Dialog",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLIENT",
        "Name": "MdiClient",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROL",
        "Name": "Control",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENU",
        "Name": "Menu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Menu",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOFLUSH",
        "Name": "NoFlush",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLEICON",
        "Name": "TrayTipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITYIMAGE",
        "Name": "OpacityImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HELPBUTTON",
        "Name": "HelpButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOFOCUS",
        "Name": "ShowNoFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATPARENT",
        "Name": "MaximizeAtParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITY",
        "Name": "Opacity",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COMPOSITED",
        "Name": "Composited",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDERSIZE (non inheritable) (read only): returns the border size. (since 3.18)",
        "AttributeName": "BORDERSIZE",
        "Name": "BorderSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ICON",
        "Name": "Icon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VISIBLE: Simply call IupShow or IupHide for the dialog.",
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW",
        "Name": "CustomFrameDraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CURSOR (non inheritable): Defines a cursor for the dialog.",
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENUBOX",
        "Name": "MenuBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVE",
        "Name": "MdiActive",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXBOX",
        "Name": "MaxBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGHINT",
        "Name": "DialogHint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWMINIMIZENEXT",
        "Name": "ShowMinimizeNext",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGFRAME",
        "Name": "DialogFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "NACTIVE (non inheritable): same as ACTIVE but does not affects the controls inside the dialog. (since 3.13)",
        "AttributeName": "NACTIVE",
        "Name": "NActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLE",
        "Name": "TrayTipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVEUNDER",
        "Name": "SaveUnder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAY",
        "Name": "Tray",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESS",
        "Name": "TaskbarProgress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDOFFSET: Allow to specify a position offset for the child. Available for native containers only. It will not affect the natural size, and allows to position controls outside the client area. Format \"dxxdy\", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: 0x0. (since 3.14)",
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "SIZE (non inheritable): Dialogs size. Additionally the following values can also be defined for width and/or height: \"FULL\": Defines the dialogs width (or height) equal to the screen's width (or height) \"HALF\": Defines the dialogs width (or height) equal to half the screen's width (or height) \"THIRD\": Defines the dialogs width (or height) equal to 1/3 the screen's width (or height) \"QUARTER\": Defines the dialogs width (or height) equal to 1/4 of the screen's width (or height) \"EIGHTH\": Defines the dialogs width (or height) equal to 1/8 of the screen's width (or height)",
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "DialogSize",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIMENU",
        "Name": "MdiMenu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STARTFOCUS",
        "Name": "StartFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPDELAY",
        "Name": "TrayTipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONLIMITS",
        "Name": "CustomFrameCaptionLimits",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAME",
        "Name": "CustomFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDINEXT",
        "Name": "MdiNext",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Dialogs title. Default: NULL. If you want to remove the title bar you must also set MENUBOX=NO, MAXBOX=NO and MINBOX=NO, before map. But in Motif and GTK it will hide it only if RESIZE=NO also.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTESC",
        "Name": "DefaultEsc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PLACEMENT",
        "Name": "Placement",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Maximized",
            "StrValue": "MAXIMIZED",
            "IntValue": null
          },
          {
            "Name": "Minimized",
            "StrValue": "MINIMIZED",
            "IntValue": null
          },
          {
            "Name": "Full",
            "StrValue": "FULL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "LAYERALPHA",
        "Name": "LayerAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOON",
        "Name": "TrayTipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIARRANGE",
        "Name": "MdiArrange",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "TileHorizontal",
            "StrValue": "TILEHORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "TileVertical",
            "StrValue": "TILEVERTICAL",
            "IntValue": null
          },
          {
            "Name": "Cascade",
            "StrValue": "CASCADE",
            "IntValue": null
          },
          {
            "Name": "Icon",
            "StrValue": "ICON",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZED",
        "Name": "Maximized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SHAPEIMAGE",
        "Name": "ShapeImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOACTIVATE",
        "Name": "ShowNoActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATDIALOG",
        "Name": "MaximizeAtDialog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOPMOST",
        "Name": "TopMost",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARBUTTON",
        "Name": "TaskbarButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Show",
            "StrValue": "SHOW",
            "IntValue": null
          },
          {
            "Name": "Hide",
            "StrValue": "HIDE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINBOX",
        "Name": "MinBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTENTER",
        "Name": "DefaultEnter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MODAL",
        "Name": "Modal",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE",
        "Name": "MdiActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "MdiActivate",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PARENTDIALOG",
        "Name": "ParentDialog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Dialog",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BACKGROUND (non inheritable): Dialog background color or image. Can be a non inheritable alternative to BGCOLOR or can be the name of an image to be tiled on the background. See also the screenshots of the sample.c results with normal background, changing the dialog BACKGROUND, the dialog BGCOLOR and the children BGCOLOR. Not working in GTK 3. (since 3.0)",
        "AttributeName": "BACKGROUND",
        "Name": "Background",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDETASKBAR",
        "Name": "HideTaskbar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BRINGFRONT",
        "Name": "BringFront",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYIMAGE",
        "Name": "TrayImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ACTIVE, BGCOLOR, FONT, EXPAND, SCREENPOSITION, WID, TIP, CLIENTOFFSET, CLIENTSIZE, RASTERSIZE, ZORDER: also accepted. Note that ACTIVE, BGCOLOR and FONT will also affect all the controls inside the dialog.",
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1x1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVEWINDOW",
        "Name": "ActiveWindow",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONHEIGHT",
        "Name": "CustomFrameCaptionHeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (non inheritable) (creation only): Shows a resize border around the dialog. Default: \"YES\". BORDER=NO is useful only when RESIZE=NO, MAXBOX=NO, MINBOX=NO, MENUBOX=NO and TITLE=NULL, if any of these are defined there will be always some border.",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMESIMULATE",
        "Name": "CustomFramesImulate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLOSEALL",
        "Name": "MdiCloseAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHRINK",
        "Name": "Shrink",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIP",
        "Name": "TrayTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOOLBOX",
        "Name": "ToolBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIFRAME",
        "Name": "MdiFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICHILD",
        "Name": "MdiChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSSTATE",
        "Name": "TaskbarProgressState",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "NoProgress",
            "StrValue": "NOPROGRESS",
            "IntValue": null
          },
          {
            "Name": "Indeterminate",
            "StrValue": "INDETERMINATE",
            "IntValue": null
          },
          {
            "Name": "Error",
            "StrValue": "ERROR",
            "IntValue": null
          },
          {
            "Name": "Paused",
            "StrValue": "PAUSED",
            "IntValue": null
          },
          {
            "Name": "Normal",
            "StrValue": "NORMAL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSVALUE",
        "Name": "TaskbarProgressValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FULLSCREEN",
        "Name": "FullScreen",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATIVEPARENT",
        "Name": "NativeParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEDIALOG",
        "Name": "MaximizedIalog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINIMIZED",
        "Name": "Minimized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIMULATEMODAL",
        "Name": "SimulateModal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "CLOSE_CB CLOSE_CB Called just before a dialog is closed when the user clicks the close button of the title bar or an equivalent action. Callback int function(Ihandle *ih); [in C] ih:close_cb() -> (ret: number) [in Lua] ih: identifies the element that activated the event. Returns: if IUP_IGNORE, it prevents the dialog from being closed. If you destroy the dialog in this callback, you must return IUP_IGNORE. IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "CLOSE_CB",
        "Name": "Close",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE_CB",
        "Name": "MdiActivate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEACTIVATE_CB",
        "Name": "CustomFrameActivate",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW_CB",
        "Name": "CustomFrameDraw",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SHOW_CB SHOW_CB Called right after the dialog is showed, hidden, maximized, minimized or restored from minimized/maximized. This callback is called when those actions were performed by the user or programmatically by the application. Callback int function(Ihandle *ih, int state); [in C] ih:show_cb(state: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. state: indicates which of the following situations generated the event: IUP_HIDE (since 3.0) IUP_SHOW IUP_RESTORE (was minimized or maximized) IUP_MINIMIZE IUP_MAXIMIZE (since 3.0) (not received in Motif when activated from the maximize button) Returns: IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "SHOW_CB",
        "Name": "Show",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYCLICK_CB",
        "Name": "TrayClick",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a user element in IUP, which is not associated to any interface element. It is used to map an external element to a IUP element. Its use is usually for additional elements, but you can use it to create an Ihandle* to store private attributes. It is also a void container. Its children can be dynamically added using IupAppend or IupInsert.",
    "ClassName": "user",
    "Name": "User",
    "ParentClassName": null,
    "ChildrenCount": -1,
    "NativeType": "Other",
    "Attributes": [
      {
        "Documentation": "CLEARATTRIBUTES (write-only, non inheritable): it will clear all attributes stored internally and remove all references. (since 3.0)",
        "AttributeName": "CLEARATTRIBUTES",
        "Name": "ClearAttributes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates an element for selecting a color. The selection is done using a cylindrical projection of the RGB cube. The transformation defines a coordinate color system called HSI, that is still the RGB color space but using cylindrical coordinates. H is for Hue, and it is the angle around the RGB cube diagonal starting at red (RGB=255 0 0). S is for Saturation, and it is the normal distance from the color to the diagonal, normalized by its maximum value at the specified Hue. This also defines a point at the diagonal used to define I. I is for Intensity, and it is the distance from the point defined at the diagonal to black (RGB=0 0 0). I can also be seen as the projection of the color vector onto the diagonal. But I is not linear, see Notes below. (Migrated from the IupControls library since IUP 3.24, it does not depend on the CD library anymore.) For a dialog that simply returns the selected color, you can use function IupGetColor or IupColorDlg.",
    "ClassName": "colorbrowser",
    "Name": "ColorBrowser",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": "HSI (non inheritable): the color selected in the control, in the \"h s i\" format; h, s and i are floating point numbers ranging from 0-360, 0-1 and 0-1 respectively.",
        "AttributeName": "HSI",
        "Name": "Hsi",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RGB (non inheritable): the color selected in the control, in the \"r g b\" format; r, g and b are integers ranging from 0 to 255. Default: \"255 0 0\".",
        "AttributeName": "RGB",
        "Name": "Rgb",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND: The default is \"NO\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RASTERSIZE (non inheritable): the initial size is \"181x181\". Set to NULL to allow the automatic layout use smaller values.",
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAG_CB",
        "Name": "Drag",
        "Arguments": [
          "Char",
          "Char",
          "Char"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CHANGE_CB",
        "Name": "Change",
        "Arguments": [
          "Char",
          "Char",
          "Char"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates the toggle interface element. It is a two-state (on/off) button that, when selected, generates an action that activates a function in the associated application. Its visual representation can contain a text or an image.",
    "ClassName": "toggle",
    "Name": "Toggle",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Color of the text shown on the toggle. In Windows, when using Visual Styles FGCOLOR is ignored. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": "RIGHTBUTTON (Windows Only) (creation only): place the check button at the right of the text. Can be \"YES\" or \"NO\". Default: \"NO\".",
        "AttributeName": "RIGHTBUTTON",
        "Name": "RightButton",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMPRESS (non inheritable): Image name of the pressed toggle. Unlike buttons, toggles always display the button border when IMAGE and IMPRESS are both defined. (GTK 2.6)",
        "AttributeName": "IMPRESS",
        "Name": "Impress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "IMINACTIVE (non inheritable): Image name of the inactive toggle. If it is not defined but IMAGE is defined then for inactive toggles the colors will be replaced by a modified version of the background color creating the disabled effect. (GTK 2.6)",
        "AttributeName": "IMINACTIVE",
        "Name": "IMinActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS (creation only) (non inheritable): enables the focus traversal of the control. In Windows the control will still get the focus when clicked. Default: YES. (since 3.0)",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "IMAGE (non inheritable): Image name. When the IMAGE attribute is defined, the TITLE is not shown. This makes the toggle looks just like a button with an image, but its behavior remains the same. Use IupSetHandle or IupSetAttributeHandle to associate an image to a name. See also IupImage. (GTK 2.6)",
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "PADDING: internal margin when IMAGE is defined. Works just like the MARGIN attribute of the IupHbox and IupVbox containers, but uses a different name to avoid inheritance problems. Default value: \"0x0\". Value can be DEFAULTBUTTONPADDING, so the global attribute of this name will be used instead (since 3.29). (since 3.0)",
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Toggle's text. If IMAGE is not defined before map, then the default behavior is to contain a text. The button behavior can not be changed after map. The natural size will be larger enough to include all the text in the selected font, even using multiple lines, plus the button borders or check box if any. The '\\n' character is accepted for line change. The \"&\" character can be used to define a mnemonic, the next character will be used as key. Use \"&&\" to show the \"&\" character instead on defining a mnemonic. The toggle can be activated from any control in the dialog using the \"Alt+key\" combination. (mnemonic support since 3.0)",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RADIO (read-only): returns if the toggle is inside a radio. Can be \"YES\" or \"NO\". Valid only after the element is mapped, before returns NULL. (since 3.0)",
        "AttributeName": "RADIO",
        "Name": "Radio",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PROPAGATEFOCUS(non inheritable): enables the focus callback forwarding to the next native parent with FOCUS_CB defined. Default: NO. (since 3.23)",
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: Background color of toggle mark when displaying a text. The text background is transparent, it will use the background color of the native parent. When displaying an image in Windows the background is ignored and the system color is used. Default: the global attribute DLGBGCOLOR.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ALIGNMENT (non inheritable): horizontal and vertical alignment when IMAGE is defined. Possible values: \"ALEFT\", \"ACENTER\" and \"ARIGHT\", combined to \"ATOP\", \"ACENTER\" and \"ABOTTOM\". Default: \"ACENTER:ACENTER\". Partial values are also accepted, like \"ARIGHT\" or \":ATOP\", the other value will be obtained from the default value. In Motif, vertical alignment is restricted to \"ACENTER\". In Windows works only when Visual Styles is active. Text is always left aligned. (since 3.0)",
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ACENTER:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": "MARKUP [GTK only]: allows the title string to contains pango markup commands. Works only if a mnemonic is NOT defined in the title. Can be \"YES\" or \"NO\". Default: \"NO\".",
        "AttributeName": "MARKUP",
        "Name": "Markup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "3STATE (creation only): Enable a three state toggle. Valid for toggles with text only and that do not belong to a radio. Can be \"YES\" or NO\". Default: \"NO\".",
        "AttributeName": "3STATE",
        "Name": "3State",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_ALPHA",
        "Name": "FlatAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Toggle's state. Values can be \"ON\", \"OFF\" or \"TOGGLE\". If 3STATE=YES then can also be \"NOTDEF\". Default: \"OFF\". The TOGGLE option will invert the current state (since 3.7). In GTK if you change the state of a radio, the unchecked toggle will receive an ACTION callback notification. Can only be set to ON if the toggle is inside a radio, it will automatically set to OFF the previous toggle that was ON in the radio.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "On",
            "StrValue": "ON",
            "IntValue": null
          },
          {
            "Name": "Off",
            "StrValue": "OFF",
            "IntValue": null
          },
          {
            "Name": "NotDef",
            "StrValue": "NOTDEF",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "FLAT (creation only): Hides the toggle borders until the mouse enter the toggle area when the toggle is not checked. If the toggle is checked, then the borders will be shown even if flat is enabled. Used only when IMAGE is defined. Can be YES or NO. Default: NO. (since 3.3)",
        "AttributeName": "FLAT",
        "Name": "Flat",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "No",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "IGNORERADIO (non inheritable): when set the toggle will not behave as a radio when inside an IupRadio hierarchy. (since 3.21)",
        "AttributeName": "IGNORERADIO",
        "Name": "IgnoreRadio",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "VALUECHANGED_CB",
        "Name": "ValueChanged",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": null,
    "ClassName": "spinbox",
    "Name": "SpinBox",
    "ParentClassName": null,
    "ChildrenCount": 2,
    "NativeType": "Void",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SPIN_CB",
        "Name": "Spin",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a label that displays an underlined clickable text. It inherits from IupLabel.",
    "ClassName": "link",
    "Name": "Link",
    "ParentClassName": "label",
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text color. Default: the global attribute LINKFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "LINKFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WORDWRAP",
        "Name": "WordWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SEPARATOR",
        "Name": "Separator",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "URL",
        "Name": "Url",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "PADDING",
        "Name": "Padding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ALIGNMENT",
        "Name": "Alignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Alignment",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKUP",
        "Name": "Markup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ELLIPSIS",
        "Name": "Ellipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CPADDING",
        "Name": "CPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": null,
    "ClassName": "imagergb",
    "Name": "ImageRgb",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Image",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCALED",
        "Name": "Scaled",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DPI",
        "Name": "Dpi",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BPP",
        "Name": "Bpp",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RESHAPE",
        "Name": "Reshape",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHANNELS",
        "Name": "Channels",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HOTSPOT",
        "Name": "Hotspot",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0:0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOSCALE",
        "Name": "AutoScale",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HEIGHT",
        "Name": "Height",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLEARCACHE",
        "Name": "ClearCache",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ORIGINALSCALE",
        "Name": "OriginalScale",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WIDTH",
        "Name": "Width",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": []
  },
  {
    "Documentation": "Creates a tree containing nodes of branches or leaves. Both branches and leaves can have an associated text and image. The branches can be expanded or collapsed. When a branch is expanded, its immediate children are visible, and when it is collapsed they are hidden. The leaves can generate an \"executed\" or \"renamed\" actions, branches can only generate a \"renamed\" action. The focus node is the node with the focus rectangle, marked nodes have their background inverted. It behaves like IupFlatTree but it does not depends on the native system. It inherits from IupCanvas.",
    "ClassName": "flattree",
    "Name": "FlatTree",
    "ParentClassName": "canvas",
    "ChildrenCount": 0,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ICONSPACING",
        "Name": "IconSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDELINES",
        "Name": "HideLines",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FIRST",
        "Name": "First",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEFONTSTYLE",
        "Name": "TitleFontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERDATA",
        "Name": "UserData",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "VoidPtr",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ROOTCOUNT",
        "Name": "RootCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ARROWIMAGES",
        "Name": "ArrowImages",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "MARKED",
        "Name": "Marked",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEBRANCHEXPANDED",
        "Name": "ImageBranchExpanded",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "IMGEXPANDED",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLEVISIBLE",
        "Name": "ToggleVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TEXTPSCOLOR",
        "Name": "TextPsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWTRANSPARENT",
        "Name": "ShowTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLEBGCOLOR",
        "Name": "ToggleBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HASFOCUS",
        "Name": "HasFocus",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTONBGCOLOR",
        "Name": "ButtonBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "240 240 240",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUSFEEDBACK",
        "Name": "FocusFeedback",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDERCOLOR",
        "Name": "BorderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "50 150 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMINACTIVE",
        "Name": "SbImageBottomInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPPRESS",
        "Name": "SbImageTopPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOP",
        "Name": "SbImageTop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKIMAGEZOOM",
        "Name": "BackImageZoom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTINACTIVE",
        "Name": "SbImageRightInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOREDRAW",
        "Name": "AutoRedraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INDENTATION",
        "Name": "Indentation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDLEAF",
        "Name": "AddLeaf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKWHENTOGGLE",
        "Name": "MarkWhenToggle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPEQUALDRAG",
        "Name": "DropEqualDrag",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRATEXTWIDTH",
        "Name": "ExtraTextWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEFONT",
        "Name": "TitleFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOM",
        "Name": "SbImageBottom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INSERTBRANCH",
        "Name": "InsertBranch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_HIGHCOLOR",
        "Name": "SbHighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "132 132 132",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDEXPANDED",
        "Name": "AddExpanded",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTONPLUSIMAGE",
        "Name": "ButtonPlusImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTONBRDCOLOR",
        "Name": "ButtonBrdColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "150 150 150",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPINACTIVE",
        "Name": "SbImageTopInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARK",
        "Name": "Mark",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DELNODE",
        "Name": "DelNode",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTONSIZE",
        "Name": "ButtonsIZe",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RENAME",
        "Name": "Rename",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOTALCHILDCOUNT",
        "Name": "TotalChildCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRATEXT",
        "Name": "ExtraText",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKEDNODES",
        "Name": "MarkedNodes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STATE",
        "Name": "State",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Expanded",
            "StrValue": "EXPANDED",
            "IntValue": null
          },
          {
            "Name": "Collapsed",
            "StrValue": "COLLAPSED",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROPTREE",
        "Name": "DragDropTree",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COLOR",
        "Name": "Color",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ITEMTIP",
        "Name": "ItemTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MOVENODE",
        "Name": "MoveNode",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBARSIZE",
        "Name": "ScrollBarSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "15",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTPRESS",
        "Name": "SbImageRightPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWTOGGLE",
        "Name": "ShowToggle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_PRESSCOLOR",
        "Name": "SbPressColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "96 96 96",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGE",
        "Name": "Image",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NEXT",
        "Name": "Next",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LASTADDNODE",
        "Name": "LastAddNode",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COPYNODE",
        "Name": "CopyNode",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTHIGHLIGHT",
        "Name": "SbImageLeftHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFT",
        "Name": "SbImageLeft",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLEFGCOLOR",
        "Name": "ToggleFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGELEAF",
        "Name": "ImageLeaf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "IMGLEAF",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTONFGCOLOR",
        "Name": "ButtonFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "50 100 150",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDERWIDTH",
        "Name": "BorderWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPHIGHLIGHT",
        "Name": "SbImageTopHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BUTTONMINUSIMAGE",
        "Name": "ButtonMinusImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HLCOLOR",
        "Name": "HlColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "TXTHLCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CSPACING",
        "Name": "CSpacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWRENAME",
        "Name": "ShowRename",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKMODE",
        "Name": "MarkMode",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "SINGLE",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEPTH",
        "Name": "Depth",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "INSERTLEAF",
        "Name": "InsertLeaf",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ADDBRANCH",
        "Name": "AddBranch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEEXPANDED",
        "Name": "ImageExpanded",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PREVIOUS",
        "Name": "Previous",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MARKSTART",
        "Name": "MarkStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_BACKCOLOR",
        "Name": "SbBackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKCOLOR",
        "Name": "BackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATINGDELAY",
        "Name": "FloatingDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINECOLOR",
        "Name": "LineColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "110 110 110",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "IMAGEBRANCHCOLLAPSED",
        "Name": "ImageBranchCollapsed",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "IMGCOLLAPSED",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDALL",
        "Name": "ExpandAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTHIGHLIGHT",
        "Name": "SbImageRightHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKIMAGE",
        "Name": "BackImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTPRESS",
        "Name": "SbImageLeftPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LAST",
        "Name": "Last",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HLCOLORALPHA",
        "Name": "HlColorAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "128",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RENAMECARET",
        "Name": "RenameCaret",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PARENT",
        "Name": "Parent",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMHIGHLIGHT",
        "Name": "SbImageBottomHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLEVALUE",
        "Name": "ToggleValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "On",
            "StrValue": "ON",
            "IntValue": null
          },
          {
            "Name": "Off",
            "StrValue": "OFF",
            "IntValue": null
          },
          {
            "Name": "NotDef",
            "StrValue": "NOTDEF",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PSCOLOR",
        "Name": "PsColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWFLOATING",
        "Name": "ShowFloating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHT",
        "Name": "SbImageRight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLESIZE",
        "Name": "ToggleSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTINACTIVE",
        "Name": "SbImageLeftInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDCOUNT",
        "Name": "ChildCount",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLATSCROLLBAR",
        "Name": "FlatScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EMPTYTOGGLE",
        "Name": "EmptyToggle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWARROWS",
        "Name": "ShowArrows",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDEBUTTONS",
        "Name": "HideButtons",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOPITEM",
        "Name": "TopItem",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "KIND",
        "Name": "Kind",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TITLEFONTSIZE",
        "Name": "TitleFontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RENAMESELECTION",
        "Name": "RenameSelection",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWDRAGDROP",
        "Name": "ShowDragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SPACING",
        "Name": "Spacing",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_FORECOLOR",
        "Name": "SbForeColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "220 220 220",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMPRESS",
        "Name": "SbImageBottomPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_FOCUS_CB",
        "Name": "FlatFocus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWRENAME_CB",
        "Name": "ShowRename",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "SELECTION_CB",
        "Name": "Selection",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "EXECUTEBRANCH_CB",
        "Name": "ExecuteBranch",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "BRANCHCLOSE_CB",
        "Name": "BranchClose",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTISELECTION_CB",
        "Name": "MultiSelection",
        "Arguments": [
          "RefInt",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_LEAVEWINDOW_CB",
        "Name": "FlatLeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "NODEREMOVED_CB",
        "Name": "NodeRemoved",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP_CB",
        "Name": "DragDrop",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_BUTTON_CB",
        "Name": "FlatButton",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "RENAME_CB",
        "Name": "Rename",
        "Arguments": [
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TOGGLEVALUE_CB",
        "Name": "ToggleValue",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_MOTION_CB",
        "Name": "FlatMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "EXECUTELEAF_CB",
        "Name": "ExecuteLeaf",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTIUNSELECTION_CB",
        "Name": "MultiUnselection",
        "Arguments": [
          "RefInt",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "BRANCHOPEN_CB",
        "Name": "BranchOpen",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "RIGHTCLICK_CB",
        "Name": "RightClick",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a progress bar control. Shows a percent value that can be updated to simulate a progression. It is similar of IupGauge, but uses native controls internally. Also does not have support for text inside the bar.",
    "ClassName": "progressbar",
    "Name": "ProgressBar",
    "ParentClassName": null,
    "ChildrenCount": 0,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "FGCOLOR [Windows Classic and Motif only]: Controls the bar color. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "ORIENTATION (creation only): can be \"VERTICAL\" or \"HORIZONTAL\". Default: \"HORIZONTAL\". Horizontal goes from left to right, and vertical from bottom to top.",
        "AttributeName": "ORIENTATION",
        "Name": "Orientation",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": "MARQUEE (creation): displays an undefined state. Default: NO. You can set the attribute after map but only to start or stop the animation. In Windows it will work only if using Visual Styles.",
        "AttributeName": "MARQUEE",
        "Name": "Marquee",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "MIN (non inheritable): Contains the minimum value. Default is \"0\". The control display is not updated, must set VALUE attribute to update.",
        "AttributeName": "MIN",
        "Name": "Min",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR [Windows Classic and Motif only]: controls the background color. Default: the global attribute DLGBGCOLOR.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "RASTERSIZE: The initial size is defined as \"200x30\". Set to NULL to allow the use of smaller values in the layout computation.",
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "VALUE (non inheritable): Contains a number between \"MIN\" and \"MAX\", controlling the current position.",
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": "MAX (non inheritable): Contains the maximum value. Default is \"1\". The control display is not updated, must set VALUE attribute to update.",
        "AttributeName": "MAX",
        "Name": "Max",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "DASHED (creation only in Windows) [Windows and GTK only]: Changes the style of the progress bar for a dashed pattern. Default is \"NO\". In Windows it is not supported since Windows Vista when using Visual Styles.",
        "AttributeName": "DASHED",
        "Name": "Dashed",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a native container that allows its child to be scrolled. It inherits from IupCanvas. The difference from IupScrollBox is that its scrollbars are drawn.",
    "ClassName": "flatscrollbox",
    "Name": "FlatScrollBox",
    "ParentClassName": "canvas",
    "ChildrenCount": 3,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANVASBOX",
        "Name": "CanvasBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMPRESS",
        "Name": "SbImageBottomPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWTRANSPARENT",
        "Name": "ShowTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_PRESSCOLOR",
        "Name": "SbPressColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "96 96 96",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATINGDELAY",
        "Name": "FloatingDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CANFOCUS: is set to NO.",
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMHIGHLIGHT",
        "Name": "SbImageBottomHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_BACKCOLOR",
        "Name": "SbBackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTPRESS",
        "Name": "SbImageLeftPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTHIGHLIGHT",
        "Name": "SbImageRightHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTOCHILD",
        "Name": "ScrollToChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWARROWS",
        "Name": "ShowArrows",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": "CHILDOFFSET: Allow to specify a position offset for the child. Available for native containers only. It will not affect the natural size, and allows to position controls outside the client area. Format \"dxxdy\", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: 0x0.",
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTOCHILD_HANDLE",
        "Name": "ScrollToChildHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOP",
        "Name": "SbImageTop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWFLOATING",
        "Name": "ShowFloating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_HIGHCOLOR",
        "Name": "SbHighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "132 132 132",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTINACTIVE",
        "Name": "SbImageLeftInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SCROLLBAR (read-only): is always \"NO\". So the IupCanvas native scrollbars are hidden. See the FLATSCROLLBAR attribute bellow. YAUTOHIDE and XAUTOHIDE will be always Yes.",
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTINACTIVE",
        "Name": "SbImageRightInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: will always use the background color of the native parent.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "LAYOUTDRAG (non inheritable): When the scrollbar is moved automatically update the children layout. Default: YES. If set to NO then the layout will be updated only when the mouse drag is released.",
        "AttributeName": "LAYOUTDRAG",
        "Name": "LayoutDrag",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHTPRESS",
        "Name": "SbImageRightPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": "FLATSCROLLBAR: Can be Yes, Vertical or Horizontal. Can be set only before map. Default: Yes.",
        "AttributeName": "FLATSCROLLBAR",
        "Name": "FlatScrollBar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLTO",
        "Name": "ScrollTo",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFT",
        "Name": "SbImageLeft",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPHIGHLIGHT",
        "Name": "SbImageTopHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_FORECOLOR",
        "Name": "SbForeColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "220 220 220",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGELEFTHIGHLIGHT",
        "Name": "SbImageLeftHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOM",
        "Name": "SbImageBottom",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGEBOTTOMINACTIVE",
        "Name": "SbImageBottomInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ARROWIMAGES",
        "Name": "ArrowImages",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BORDER (creation only): it is always \"NO\".",
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": true,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBARSIZE",
        "Name": "ScrollBarSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "15",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPINACTIVE",
        "Name": "SbImageTopInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGERIGHT",
        "Name": "SbImageRight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_IMAGETOPPRESS",
        "Name": "SbImageTopPress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LAYOUTUPDATE_CB",
        "Name": "LayoutUpDate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates the Message Dialog element. It is a predefined dialog for displaying a message. The dialog can be shown with the IupPopup function only.",
    "ClassName": "messagedlg",
    "Name": "MessageDlg",
    "ParentClassName": "dialog",
    "ChildrenCount": 0,
    "NativeType": "Dialog",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLIENT",
        "Name": "MdiClient",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROL",
        "Name": "Control",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENU",
        "Name": "Menu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Menu",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NOFLUSH",
        "Name": "NoFlush",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLEICON",
        "Name": "TrayTipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITYIMAGE",
        "Name": "OpacityImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HELPBUTTON",
        "Name": "HelpButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOFOCUS",
        "Name": "ShowNoFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATPARENT",
        "Name": "MaximizeAtParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "OPACITY",
        "Name": "Opacity",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COMPOSITED",
        "Name": "Composited",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDERSIZE",
        "Name": "BorderSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ICON",
        "Name": "Icon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW",
        "Name": "CustomFrameDraw",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MENUBOX",
        "Name": "MenuBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": "DIALOGTYPE: Type of dialog defines which icon will be displayed besides the message text. Can have values: \"MESSAGE\" (No Icon), \"ERROR\" (Stop-sign), \"WARNING\" (Exclamation-point), \"QUESTION\" (Question-mark) or \"INFORMATION\" (Letter \"i\"). Default: \"MESSAGE\".",
        "AttributeName": "DIALOGTYPE",
        "Name": "DialogType",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Error",
            "StrValue": "ERROR",
            "IntValue": null
          },
          {
            "Name": "Warning",
            "StrValue": "WARNING",
            "IntValue": null
          },
          {
            "Name": "Information",
            "StrValue": "INFORMATION",
            "IntValue": null
          },
          {
            "Name": "Question",
            "StrValue": "QUESTION",
            "IntValue": null
          }
        ],
        "Default": "MESSAGE",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVE",
        "Name": "MdiActive",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXBOX",
        "Name": "MaxBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGHINT",
        "Name": "DialogHint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWMINIMIZENEXT",
        "Name": "ShowMinimizeNext",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DIALOGFRAME",
        "Name": "DialogFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NACTIVE",
        "Name": "NActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOONTITLE",
        "Name": "TrayTipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SAVEUNDER",
        "Name": "SaveUnder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAY",
        "Name": "Tray",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BUTTONS: Buttons configuration. Can have values: \"OK\", \"OKCANCEL\", \"RETRYCANCEL\", \"YESNO\", or \"YESNOCANCEL\". Default: \"OK\". Additionally the \"Help\" button is displayed if the HELP_CB callback is defined. (RETRYCANCEL and YESNOCANCEL since 3.16)",
        "AttributeName": "BUTTONS",
        "Name": "Buttons",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "OkCanCel",
            "StrValue": "OKCANCEL",
            "IntValue": null
          },
          {
            "Name": "RetrYCanCel",
            "StrValue": "RETRYCANCEL",
            "IntValue": null
          },
          {
            "Name": "YesNo",
            "StrValue": "YESNO",
            "IntValue": null
          },
          {
            "Name": "YesNoCanCel",
            "StrValue": "YESNOCANCEL",
            "IntValue": null
          },
          {
            "Name": "Ok",
            "StrValue": "OK",
            "IntValue": null
          }
        ],
        "Default": "OK",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESS",
        "Name": "TaskbarProgress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "DialogSize",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BUTTONRESPONSE: Number of the pressed button. Can be \"1\", \"2\" or \"3\". Default: \"1\".",
        "AttributeName": "BUTTONRESPONSE",
        "Name": "ButtonResponse",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Button1",
            "StrValue": null,
            "IntValue": 1
          },
          {
            "Name": "Button2",
            "StrValue": null,
            "IntValue": 2
          },
          {
            "Name": "Button3",
            "StrValue": null,
            "IntValue": 3
          }
        ],
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "AUTOMODAL",
        "Name": "AutoModal",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIMENU",
        "Name": "MdiMenu",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "STARTFOCUS",
        "Name": "StartFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPDELAY",
        "Name": "TrayTipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONLIMITS",
        "Name": "CustomFrameCaptionLimits",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Range",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAME",
        "Name": "CustomFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDINEXT",
        "Name": "MdiNext",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "TITLE: Dialog title.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTESC",
        "Name": "DefaultEsc",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PLACEMENT",
        "Name": "Placement",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Maximized",
            "StrValue": "MAXIMIZED",
            "IntValue": null
          },
          {
            "Name": "Minimized",
            "StrValue": "MINIMIZED",
            "IntValue": null
          },
          {
            "Name": "Full",
            "StrValue": "FULL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "LAYERALPHA",
        "Name": "LayerAlpha",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIPBALLOON",
        "Name": "TrayTipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "BUTTONDEFAULT: Number of the default button. Can be \"1\", \"2\" or \"3\". \"2\" is valid only for \"RETRYCANCEL\", \"OKCANCEL\" and \"YESNO\" button configurations. \"3\" is valid only for \"YESNOCANCEL\". Default: \"1\".",
        "AttributeName": "BUTTONDEFAULT",
        "Name": "ButtonDefault",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Button1",
            "StrValue": null,
            "IntValue": 1
          },
          {
            "Name": "Button2",
            "StrValue": null,
            "IntValue": 2
          },
          {
            "Name": "Button3",
            "StrValue": null,
            "IntValue": 3
          }
        ],
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RESIZE",
        "Name": "Resize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIARRANGE",
        "Name": "MdiArrange",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "TileHorizontal",
            "StrValue": "TILEHORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "TileVertical",
            "StrValue": "TILEVERTICAL",
            "IntValue": null
          },
          {
            "Name": "Cascade",
            "StrValue": "CASCADE",
            "IntValue": null
          },
          {
            "Name": "Icon",
            "StrValue": "ICON",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZED",
        "Name": "Maximized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SHAPEIMAGE",
        "Name": "ShapeImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWNOACTIVATE",
        "Name": "ShowNoActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEATDIALOG",
        "Name": "MaximizeAtDialog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOPMOST",
        "Name": "TopMost",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARBUTTON",
        "Name": "TaskbarButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Show",
            "StrValue": "SHOW",
            "IntValue": null
          },
          {
            "Name": "Hide",
            "StrValue": "HIDE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINBOX",
        "Name": "MinBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DEFAULTENTER",
        "Name": "DefaultEnter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Button",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MODAL",
        "Name": "Modal",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE",
        "Name": "MdiActivate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "MdiActivate",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "PARENTDIALOG (creation only): Name of a dialog to be used as parent. This dialog will be always in front of the parent dialog. If not defined in Motif the dialog could not be modal.",
        "AttributeName": "PARENTDIALOG",
        "Name": "ParentDialog",
        "CreationOnly": true,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": "Dialog",
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKGROUND",
        "Name": "Background",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIDETASKBAR",
        "Name": "HideTaskbar",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BRINGFRONT",
        "Name": "BringFront",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYIMAGE",
        "Name": "TrayImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1x1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVEWINDOW",
        "Name": "ActiveWindow",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMECAPTIONHEIGHT",
        "Name": "CustomFrameCaptionHeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMESIMULATE",
        "Name": "CustomFramesImulate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICLOSEALL",
        "Name": "MdiCloseAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Void",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHRINK",
        "Name": "Shrink",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYTIP",
        "Name": "TrayTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOOLBOX",
        "Name": "ToolBox",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDIFRAME",
        "Name": "MdiFrame",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MDICHILD",
        "Name": "MdiChild",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSSTATE",
        "Name": "TaskbarProgressState",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "NoProgress",
            "StrValue": "NOPROGRESS",
            "IntValue": null
          },
          {
            "Name": "Indeterminate",
            "StrValue": "INDETERMINATE",
            "IntValue": null
          },
          {
            "Name": "Error",
            "StrValue": "ERROR",
            "IntValue": null
          },
          {
            "Name": "Paused",
            "StrValue": "PAUSED",
            "IntValue": null
          },
          {
            "Name": "Normal",
            "StrValue": "NORMAL",
            "IntValue": null
          }
        ],
        "Default": "NORMAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TASKBARPROGRESSVALUE",
        "Name": "TaskbarProgressValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FULLSCREEN",
        "Name": "FullScreen",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATIVEPARENT",
        "Name": "NativeParent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXIMIZEDIALOG",
        "Name": "MaximizedIalog",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINIMIZED",
        "Name": "Minimized",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIMULATEMODAL",
        "Name": "SimulateModal",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "CLOSE_CB CLOSE_CB Called just before a dialog is closed when the user clicks the close button of the title bar or an equivalent action. Callback int function(Ihandle *ih); [in C] ih:close_cb() -> (ret: number) [in Lua] ih: identifies the element that activated the event. Returns: if IUP_IGNORE, it prevents the dialog from being closed. If you destroy the dialog in this callback, you must return IUP_IGNORE. IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "CLOSE_CB",
        "Name": "Close",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MDIACTIVATE_CB",
        "Name": "MdiActivate",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEACTIVATE_CB",
        "Name": "CustomFrameActivate",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "CUSTOMFRAMEDRAW_CB",
        "Name": "CustomFrameDraw",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SHOW_CB SHOW_CB Called right after the dialog is showed, hidden, maximized, minimized or restored from minimized/maximized. This callback is called when those actions were performed by the user or programmatically by the application. Callback int function(Ihandle *ih, int state); [in C] ih:show_cb(state: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. state: indicates which of the following situations generated the event: IUP_HIDE (since 3.0) IUP_SHOW IUP_RESTORE (was minimized or maximized) IUP_MINIMIZE IUP_MAXIMIZE (since 3.0) (not received in Motif when activated from the maximize button) Returns: IUP_CLOSE will be processed. Affects IupDialog",
        "AttributeName": "SHOW_CB",
        "Name": "Show",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TRAYCLICK_CB",
        "Name": "TrayClick",
        "Arguments": [
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a native container, which draws a frame with a title around its child.",
    "ClassName": "frame",
    "Name": "Frame",
    "ParentClassName": null,
    "ChildrenCount": 1,
    "NativeType": "Control",
    "Attributes": [
      {
        "Documentation": "FGCOLOR: Text title color. Not available in Windows when using Windows Visual Styles. Default: the global attribute DLGFGCOLOR.",
        "AttributeName": "FGCOLOR",
        "Name": "FgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "CHILDOFFSET: Allow to specify a position offset for the child. Available for native containers only. It will not affect the natural size, and allows to position controls outside the client area. Format \"dxxdy\", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: 0x0. (since 3.14)",
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "EXPAND (non inheritable): The default value is \"YES\".",
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": "SUNKEN: When not using a title, the frame line defines a sunken area (lowered area). Valid values: YES or NO. Default: NO.",
        "AttributeName": "SUNKEN",
        "Name": "Sunken",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": "TITLE (non inheritable): Text the user will see at the top of the frame. If not defined during creation it can not be added lately, to be changed it must be at least \"\" during creation.",
        "AttributeName": "TITLE",
        "Name": "Title",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": "BGCOLOR: ignored, transparent in all systems. Will use the background color of the native parent. Except if TITLE is not defined and BGCOLOR is defined before map (can be changed later), then the frame will have a color background.",
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      }
    ]
  },
  {
    "Documentation": "Creates a native container for composing elements in hidden layers with only one layer visible (just like IupZbox), but its visibility can be interactively controlled. The interaction is done in a line of tabs with titles and arranged according to the tab type. Also known as Notebook in native systems. Identical to the IupTabs control but the decorations and buttons are manually drawn. It inherits from IupCanvas.",
    "ClassName": "flattabs",
    "Name": "FlatTabs",
    "ParentClassName": "canvas",
    "ChildrenCount": -1,
    "NativeType": "Canvas",
    "Attributes": [
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTLAYOUTCENTER",
        "Name": "DrawTextLayoutCenter",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HDC_WMPAINT",
        "Name": "HdcwmPaint",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGTYPES",
        "Name": "DragTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HFONT",
        "Name": "HFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XMAX",
        "Name": "XMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLOSEIMAGEHIGHLIGHT",
        "Name": "CloseImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SIZE",
        "Name": "Size",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "SCREENPOSITION",
        "Name": "ScreenPosition",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLOSEIMAGE",
        "Name": "CloseImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "IMGFLATCLOSE",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "X",
        "Name": "X",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "Y",
        "Name": "Y",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUEPOS",
        "Name": "ValuePos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE",
        "Name": "Value",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSTEXTALIGNMENT",
        "Name": "TabsTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSIMAGESPACING",
        "Name": "TabsImagesPacIng",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "2",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPFGCOLOR",
        "Name": "TipFgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0 0 0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPAND",
        "Name": "Expand",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          },
          {
            "Name": "HorizontalFree",
            "StrValue": "HORIZONTALFREE",
            "IntValue": null
          },
          {
            "Name": "VerticalFree",
            "StrValue": "VERTICALFREE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTORIENTATION",
        "Name": "DrawTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRABORDERCOLOR",
        "Name": "ExtraBorderColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FORECOLOR",
        "Name": "ForeColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "50 150 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPRECT",
        "Name": "TipRect",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rect",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTALIGNMENT",
        "Name": "DrawTextAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "ACenter",
            "StrValue": "ACENTER",
            "IntValue": null
          },
          {
            "Name": "ARight",
            "StrValue": "ARIGHT",
            "IntValue": null
          },
          {
            "Name": "ALeft",
            "StrValue": "ALEFT",
            "IntValue": null
          }
        ],
        "Default": "ALEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCE",
        "Name": "DragSource",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWCOLOR",
        "Name": "DrawColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAALIGNMENT",
        "Name": "ExtraAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSTEXTWRAP",
        "Name": "TabsTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWLINEWIDTH",
        "Name": "DrawLineWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTOFFSET",
        "Name": "ClientOffset",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "USERSIZE",
        "Name": "UserSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "XMIN",
        "Name": "XMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTELLIPSIS",
        "Name": "DrawTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABFORECOLOR",
        "Name": "TabForeColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HASFOCUS",
        "Name": "HasFocus",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CONTROLID",
        "Name": "ControlId",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUSFEEDBACK",
        "Name": "FocusFeedback",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABTIP",
        "Name": "TabTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRATITLE",
        "Name": "ExtraTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABTITLE",
        "Name": "TabTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSIZE",
        "Name": "DrawSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BORDER",
        "Name": "Border",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CANFOCUS",
        "Name": "CanFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSHIGHCOLOR",
        "Name": "TabsHighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABORIENTATION",
        "Name": "TabOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Horizontal",
            "StrValue": "HORIZONTAL",
            "IntValue": null
          },
          {
            "Name": "Vertical",
            "StrValue": "VERTICAL",
            "IntValue": null
          }
        ],
        "Default": "HORIZONTAL",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YAUTOHIDE",
        "Name": "YAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTCLIP",
        "Name": "DrawTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "THEME",
        "Name": "Theme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ZORDER",
        "Name": "ZOrder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": true,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          },
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSPADDING",
        "Name": "TabsPadding",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "6x4",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWLINES",
        "Name": "ShowLines",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VALUE_HANDLE",
        "Name": "ValueHandle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "VISIBLE",
        "Name": "Visible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BGCOLOR",
        "Name": "BgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 255",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "RASTERSIZE",
        "Name": "RasterSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWSTYLE",
        "Name": "DrawStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Fill",
            "StrValue": "FILL",
            "IntValue": null
          },
          {
            "Name": "StrokeDash",
            "StrValue": "STROKE_DASH",
            "IntValue": null
          },
          {
            "Name": "StrokeDot",
            "StrValue": "STROKE_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDot",
            "StrValue": "STROKE_DASH_DOT",
            "IntValue": null
          },
          {
            "Name": "StrokeDashDotdot",
            "StrValue": "STROKE_DASH_DOT_DOT",
            "IntValue": null
          },
          {
            "Name": "DrawStroke",
            "StrValue": "DRAW_STROKE",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTARGET",
        "Name": "DropTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHARSIZE",
        "Name": "CharSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWMAKEINACTIVE",
        "Name": "DrawMakeInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HIGHCOLOR",
        "Name": "HighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSTART",
        "Name": "DragStart",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DX",
        "Name": "DX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DY",
        "Name": "DY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSFONTSTYLE",
        "Name": "TabsFontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSITION",
        "Name": "Position",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "XYPos",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MINSIZE",
        "Name": "MinSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0x0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "LINEX",
        "Name": "LineX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NATURALSIZE",
        "Name": "NaturalSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": true
      },
      {
        "Documentation": null,
        "AttributeName": "LINEY",
        "Name": "LineY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAVALUE",
        "Name": "ExtraValue",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABHIGHCOLOR",
        "Name": "TabHighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SHOWCLOSE",
        "Name": "ShowClose",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPTYPES",
        "Name": "DropTypes",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HANDLENAME",
        "Name": "HandleName",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTFACE",
        "Name": "FontFace",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSTEXTORIENTATION",
        "Name": "TabsTextOrientation",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABFONTSIZE",
        "Name": "TabFontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAPRESSCOLOR",
        "Name": "ExtraPressColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAFORECOLOR",
        "Name": "ExtraForeColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FIXEDWIDTH",
        "Name": "FixedWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "MAXSIZE",
        "Name": "MaxSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": "65535x65535",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABTYPE",
        "Name": "TabType",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Bottom",
            "StrValue": "BOTTOM",
            "IntValue": null
          },
          {
            "Name": "Left",
            "StrValue": "LEFT",
            "IntValue": null
          },
          {
            "Name": "Right",
            "StrValue": "RIGHT",
            "IntValue": null
          },
          {
            "Name": "Top",
            "StrValue": "TOP",
            "IntValue": null
          }
        ],
        "Default": "TOP",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSOR",
        "Name": "DragCursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSTYLE",
        "Name": "FontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONT",
        "Name": "Font",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DEFAULTFONT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HWND",
        "Name": "Hwnd",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Handle",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CURSOR",
        "Name": "Cursor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ARROW",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABVISIBLE",
        "Name": "TabVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSTEXTCLIP",
        "Name": "TabsTextClip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRABORDERWIDTH",
        "Name": "ExtraBorderWidth",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSALIGNMENT",
        "Name": "TabsAlignment",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "ACENTER:ACENTER",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGCURSORCOPY",
        "Name": "DragCursorCopy",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRATIP",
        "Name": "ExtraTip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WHEELDROPFOCUS",
        "Name": "WheelDropFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "HTTRANSPARENT",
        "Name": "HtTransparent",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLEICON",
        "Name": "TipBalloonTitleIcon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWUSEDIRECT2D",
        "Name": "DrawUsedIRect2d",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABFONTSTYLE",
        "Name": "TabFontStyle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XHIDDEN",
        "Name": "XHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SB_RESIZE",
        "Name": "SbResize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FONTSIZE",
        "Name": "FontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWANTIALIAS",
        "Name": "DrawAntialias",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABACTIVE",
        "Name": "TabActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRATOGGLE",
        "Name": "ExtraToggle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMAX",
        "Name": "YMax",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "1",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSFONT",
        "Name": "TabsFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLIENTSIZE",
        "Name": "ClientSize",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NTHEME",
        "Name": "NTheme",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGSOURCEMOVE",
        "Name": "DragSourceMove",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABCHANGEONCHECK",
        "Name": "TabChangeOnCheck",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLOSEIMAGEINACTIVE",
        "Name": "CloseImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "ACTIVE",
        "Name": "Active",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "WID",
        "Name": "WId",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSBACKCOLOR",
        "Name": "TabsBackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGBGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLOSEPRESSCOLOR",
        "Name": "ClosePressColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "150 200 235",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSIMAGEPOSITION",
        "Name": "TabsImagePosition",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "LEFT",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSX",
        "Name": "PosX",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "POSY",
        "Name": "PosY",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSLINECOLOR",
        "Name": "TabsLineColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "160 160 160",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDSIZEALL",
        "Name": "ChildSizeAll",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "XAUTOHIDE",
        "Name": "XAutoHide",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPVISIBLE",
        "Name": "TipVisible",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAHIGHCOLOR",
        "Name": "ExtraHighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAIMAGEPRESS",
        "Name": "ExtraImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWFONT",
        "Name": "DrawFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDWEIGHT",
        "Name": "ExpandWeight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Double",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBGCOLOR",
        "Name": "TipBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": "255 255 225",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRASHOWBORDER",
        "Name": "ExtraShowBorder",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWBGCOLOR",
        "Name": "DrawBgColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Rgb",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAFONT",
        "Name": "ExtraFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YMIN",
        "Name": "YMin",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "0",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSTEXTELLIPSIS",
        "Name": "TabsTextEllipsis",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAIMAGEHIGHLIGHT",
        "Name": "ExtraImageHighlight",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NORMALIZERGROUP",
        "Name": "NormalizerGroup",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "SCROLLBAR",
        "Name": "ScrollBar",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DROPFILESTARGET",
        "Name": "DropFilesTarget",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLOSEHIGHCOLOR",
        "Name": "CloseHighColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "200 225 245",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDBUTTONSTATE",
        "Name": "ExpandButtonsTate",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "Yes",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CLOSEIMAGEPRESS",
        "Name": "CloseImagePress",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "IMGFLATCLOSEPRESS",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOONTITLE",
        "Name": "TipBalloonTitle",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSFONTSIZE",
        "Name": "TabsFontSize",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABSFORECOLOR",
        "Name": "TabsForeColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "DLGFGCOLOR",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "CHILDOFFSET",
        "Name": "ChildOffset",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Size",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWTEXTWRAP",
        "Name": "DrawTextWrap",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "COUNT",
        "Name": "Count",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIP",
        "Name": "Tip",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDBUTTON",
        "Name": "ExpandButton",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDROP",
        "Name": "DragDrop",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPDELAY",
        "Name": "TipDelay",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "5000",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TIPBALLOON",
        "Name": "TipBalloon",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXPANDBUTTONPOS",
        "Name": "ExpandButtonPos",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAACTIVE",
        "Name": "ExtraActive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "YHIDDEN",
        "Name": "YHidden",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAIMAGE",
        "Name": "ExtraImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "FLOATING",
        "Name": "Floating",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Enum",
        "HandleName": null,
        "EnumValues": [
          {
            "Name": "Yes",
            "StrValue": "YES",
            "IntValue": null
          },
          {
            "Name": "Ignore",
            "StrValue": "IGNORE",
            "IntValue": null
          },
          {
            "Name": "No",
            "StrValue": "NO",
            "IntValue": null
          }
        ],
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABIMAGE",
        "Name": "TabImage",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABFONT",
        "Name": "TabFont",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRAIMAGEINACTIVE",
        "Name": "ExtraImageInactive",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH",
        "Name": "Touch",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "NAME",
        "Name": "Name",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRABUTTONS",
        "Name": "ExtraButtons",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Int",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "TABBACKCOLOR",
        "Name": "TabBackColor",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Unknown",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "PROPAGATEFOCUS",
        "Name": "PropagateFocus",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "NO",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "BACKINGSTORE",
        "Name": "BackingStore",
        "CreationOnly": false,
        "ReadOnly": false,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "Boolean",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": "YES",
        "IsNullable": false
      },
      {
        "Documentation": null,
        "AttributeName": "DRAWDRIVER",
        "Name": "DrawDriver",
        "CreationOnly": false,
        "ReadOnly": true,
        "WriteOnly": false,
        "HasIndex": false,
        "NonInheritable": false,
        "DataType": "String",
        "DataFormat": "Binary",
        "HandleName": null,
        "EnumValues": null,
        "Default": null,
        "IsNullable": false
      }
    ],
    "Callbacks": [
      {
        "Documentation": "WHEEL_CB WHEEL_CB Action generated when the mouse wheel is rotated. If this callback is not defined the wheel will automatically scroll the canvas in the vertical direction by some lines, the SCROLL_CB callback if defined will be called with the IUP_SBDRAGV operation. Callback int function(Ihandle *ih, float delta, int x, int y, char *status); [in C] ih:wheel_cb(delta, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. delta: the amount the wheel was rotated in notches. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes In Motif and GTK delta is always 1 or -1. In Windows is some situations delta can reach the value of two. In the future with more precise wheels this increment can be changed. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "WHEEL_CB",
        "Name": "Wheel",
        "Arguments": [
          "Float",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DESTROY_CB DESTROY_CB Called right before an element is destroyed. Callback int function(Ihandle *ih); [in C] ih:destroy_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes If the dialog is visible then it is hidden before it is destroyed. The callback will be called right after it is hidden. The callback will be called before all other destroy procedures. For instance, if the element has children then it is called before the children are destroyed. For language binding implementations use the callback name \"LDESTROY_CB\" to release memory allocated by the binding for the element. Also the callback will be called before the language callback. Affects All.",
        "AttributeName": "DESTROY_CB",
        "Name": "Destroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KILLFOCUS_CB KILLFOCUS_CB Action generated when an element loses keyboard focus. This callback is called before the GETFOCUS_CB of the element that gets the focus. Callback int function(Ihandle *ih); [in C] ih:killfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All elements with user interaction, except menus. In Windows, there are restrictions when using this callback. From MSDN on WM_KILLFOCUS: \"While processing this message, do not make any function calls that display or activate a window. This causes the thread to yield control and can cause the application to stop responding to messages. See Also GETFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "KILLFOCUS_CB",
        "Name": "KillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MOTION_CB MOTION_CB Action generated when the mouse moves. Callback int function(Ihandle *ih, int x, int y, char *status); [in C] ih:motion_cb(x, y: number, status: string) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. x, y: position in the canvas where the event has occurred, in pixels. status: status of mouse buttons and certain keyboard keys at the moment the event was generated. The same macros used for BUTTON_CB can be used for this status. Notes Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupGLCanvas",
        "AttributeName": "MOTION_CB",
        "Name": "Motion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGEND_CB",
        "Name": "DragEnd",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "POSTMESSAGE_CB",
        "Name": "PostMessage",
        "Arguments": [
          "String",
          "Int",
          "Double",
          "VoidPtr"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "SCROLL_CB SCROLL_CB Called when some manipulation is made to the scrollbar. The canvas is automatically redrawn only if this callback is NOT defined. (GTK 2.8) Also the POSX and POSY values will not be correctly updated for older GTK versions. In Ubuntu, when liboverlay-scrollbar is enabled (the new tiny auto-hide scrollbar) only the IUP_SBPOSV and IUP_SBPOSH codes are used. Callback int function(Ihandle *ih, int op, float posx, float posy); [in C] ih:scroll_cb(op, posx, posy: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. op: indicates the operation performed on the scrollbar. If the manipulation was made on the vertical scrollbar, it can have the following values: IUP_SBUP - line up IUP_SBDN - line down IUP_SBPGUP - page up IUP_SBPGDN - page down IUP_SBPOSV - vertical positioning IUP_SBDRAGV - vertical drag If it was on the horizontal scrollbar, the following values are valid: IUP_SBLEFT - column left IUP_SBRIGHT - column right IUP_SBPGLEFT - page left IUP_SBPGRIGHT - page right IUP_SBPOSH - horizontal positioning IUP_SBDRAGH - horizontal drag posx, posy: the same as the ACTION canvas callback (corresponding to the values of attributes POSX and POSY). Notes IUP_SBDRAGH and IUP_SBDRAGV are not supported in GTK. During drag IUP_SBPOSH and IUP_SBPOSV are used. In Windows, after a drag when mouse is released IUP_SBPOSH or IUP_SBPOSV are called. Affects IupCanvas, IupGLCanvas, SCROLLBAR",
        "AttributeName": "SCROLL_CB",
        "Name": "Scroll",
        "Arguments": [
          "Int",
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "EXTRABUTTON_CB",
        "Name": "ExtraButton",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "WOM_CB WOM_CB Action generated when an audio device receives an event. [Windows Only] Callback int function(Ihandle *ih, int state); [in C] ih:wom_cb(state: number) -> (ret: number) [in Lua] ih: identifies the element that activated the event. state: can be opening=1, done=0, or closing=-1. Notes This callback is used to syncronize video playback with audio. It is sent when the audio device: Message Description opening is opened by using the waveOutOpen function. done is finished with a data block sent by using the waveOutWrite function. closing is closed by using the waveOutClose function. You must use the HWND attribute when calling waveOutOpen in the dwCallback parameter and set fdwOpen to CALLBACK_WINDOW. Affects IupDialog, IupCanvas, IupGLCanvas",
        "AttributeName": "WOM_CB",
        "Name": "Wom",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_KILLFOCUS_CB",
        "Name": "FlatKillFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPDATA_CB",
        "Name": "DropData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "K_ANY K_ANY Action generated when a keyboard event occurs. Callback int function(Ihandle *ih, int c); [in C] ih:k_any(c: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. Returns: If IUP_IGNORE is returned the key is ignored and not processed by the control and not propagated. If returns IUP_CONTINUE, the key will be processed and the event will be propagated to the parent of the element receiving it, this is the default behavior. If returns IUP_DEFAULT the key is processed but it is not propagated. IUP_CLOSE will be processed. Notes Keyboard callbacks depend on the keyboard usage of the control with the focus. So if you return IUP_IGNORE the control will usually not process the key. But be aware that sometimes the control process the key in another event so even returning IUP_IGNORE the key can get processed. Although it will not be propagated. IMPORTANT: The callbacks \"K_*\" of the dialog or native containers depend on the IUP_CONTINUE return value to work while the control is in focus. If the callback does not exists it is automatically propagated to the parent of the element. K_* callbacks All defined keys are also callbacks of any element, called when the respective key is activated. For example: \"K_cC\" is also a callback activated when the user press Ctrl+C, when the focus is at the element or at a children with focus. This is the way an application can create shortcut keys, also called hot keys. These callbacks are not available in IupLua. Affects All elements with keyboard interaction.",
        "AttributeName": "K_ANY",
        "Name": "KAny",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TABCHANGE_CB",
        "Name": "TabChange",
        "Arguments": [
          "Handle",
          "Handle"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "UNMAP_CB UNMAP_CB Called right before an element is unmapped. Callback int function(Ihandle *ih); [in C] ih:unmap_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "UNMAP_CB",
        "Name": "Unmap",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TABCLOSE_CB",
        "Name": "TabClose",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ENTERWINDOW_CB ENTERWINDOW_CB Action generated when the mouse enters the native element. Callback int function(Ihandle *ih); [in C] ih:enterwindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also LEAVEWINDOW_CB",
        "AttributeName": "ENTERWINDOW_CB",
        "Name": "EnterWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "LEAVEWINDOW_CB LEAVEWINDOW_CB Action generated when the mouse leaves the native element. Callback int function(Ihandle *ih); [in C] ih:leavewindow_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Notes When the cursor is moved from one element to another, the call order in all platforms will be first the LEAVEWINDOW_CB callback of the old control followed by the ENTERWINDOW_CB callback of the new control. (since 3.14) If the mouse button is hold pressed and the cursor moves outside the element the behavior is system dependent. In Windows the LEAVEWINDOW_CB/ENTERWINDOW_CB callbacks are NOT called, in GTK the callbacks are called. Affects All controls with user interaction. See Also ENTERWINDOW_CB",
        "AttributeName": "LEAVEWINDOW_CB",
        "Name": "LeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_LEAVEWINDOW_CB",
        "Name": "FlatLeaveWindow",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGBEGIN_CB",
        "Name": "DragBegin",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_BUTTON_CB",
        "Name": "FlatButton",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATASIZE_CB",
        "Name": "DragDataSize",
        "Arguments": [
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "LDESTROY_CB",
        "Name": "LDestroy",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "ACTION ACTION Action generated when the element is activated. Affects each element differently. Callback int function(Ihandle *ih); [in C] ih:action() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. In some elements, this callback may receive more parameters, apart from ih. Please refer to each element's documentation. Affects IupButton, IupItem, IupList, IupText, IupCanvas, IupMultiline, IupToggle",
        "AttributeName": "ACTION",
        "Name": "Action",
        "Arguments": [
          "Float",
          "Float"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "MULTITOUCH_CB",
        "Name": "MultiTouch",
        "Arguments": [
          "Int",
          "RefInt",
          "RefInt",
          "RefInt"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DROPMOTION_CB",
        "Name": "DropMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TABCHANGEPOS_CB",
        "Name": "TabChangePos",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "KEYPRESS_CB KEYPRESS_CB Action generated when a key is pressed or released. If the key is pressed and held several calls will occur. It is called after the callback K_ANY is processed. Callback int function(Ihandle *ih, int c, int press); [in C] ih:keypress_cb(c, press: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. c: identifier of typed key. Please refer to the Keyboard Codes table for a list of possible values. press: 1 is the user pressed the key or 0 otherwise. Returns: If IUP_IGNORE is returned the key is ignored by the system. IUP_CLOSE will be processed. Affects IupCanvas",
        "AttributeName": "KEYPRESS_CB",
        "Name": "KeyPress",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "TOUCH_CB",
        "Name": "Touch",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "RESIZE_CB RESIZE_CB Action generated when the canvas or dialog size is changed. Callback int function(Ihandle *ih, int width, int height); [in C] ih:resize_cb(width, height: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. width: the width of the internal element size in pixels not considering the decorations (client size) height: the height of the internal element size in pixels not considering the decorations (client size) Notes For the dialog, this action is also generated when the dialog is mapped, after the map and before the show. When XAUTOHIDE=Yes or YAUTOHIDE=Yes, if the canvas scrollbar is hidden/shown after changing the DX or DY attributes from inside the callback, the size of the drawing area will immediately change, so the parameters with and height will be invalid. To update the parameters consult the DRAWSIZE attribute. Also activate the drawing toolkit only after updating the DX or DY attributes. Affects IupCanvas, IupGLCanvas, IupDialog",
        "AttributeName": "RESIZE_CB",
        "Name": "Resize",
        "Arguments": [
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "GETFOCUS_CB GETFOCUS_CB Action generated when an element is given keyboard focus. This callback is called after the KILLFOCUS_CB of the element that loosed the focus. The IupGetFocus function during the callback returns the element that loosed the focus. Callback int function(Ihandle *ih); [in C] ih:getfocus_cb() -> (ret: number) [in Lua] ih: identifier of the element that received keyboard focus. Affects All elements with user interaction, except menus. See Also KILLFOCUS_CB, IupGetFocus, IupSetFocus",
        "AttributeName": "GETFOCUS_CB",
        "Name": "GetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": "HELP_CB HELP_CB Action generated when the user press F1 at a control. In Motif is also activated by the Help button in some workstations keyboard. Callback void function(Ihandle *ih); [in C] ih:help_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Returns: IUP_CLOSE will be processed. Affects All elements with user interaction.",
        "AttributeName": "HELP_CB",
        "Name": "Help",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FOCUS_CB",
        "Name": "Focus",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "DROPFILES_CB DROPFILES_CB Action called when a file is \"dropped\" into the control. When several files are dropped at once, the callback is called several times, once for each file. If defined after the element is mapped then the attribute DROPFILESTARGET must be set to YES. [Windows and GTK Only] (GTK 2.6) Callback int function(Ihandle *ih, const char* filename, int num, int x, int y); [in C] ih:dropfiles_cb(filename: string; num, x, y: number) -> (ret: number) [in Lua] ih: identifier of the element that activated the event. filename: Name of the dropped file. num: Number index of the dropped file. If several files are dropped, num is the index of the dropped file starting from \"total-1\" to \"0\". x: X coordinate of the point where the user released the mouse button. y: Y coordinate of the point where the user released the mouse button. Returns: If IUP_IGNORE is returned the callback will NOT be called for the next dropped files, and the processing of dropped files will be interrupted. Affects IupDialog, IupCanvas, IupGLCanvas, IupText, IupList",
        "AttributeName": "DROPFILES_CB",
        "Name": "DropFiles",
        "Arguments": [
          "String",
          "Int",
          "Int",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_MOTION_CB",
        "Name": "FlatMotion",
        "Arguments": [
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "DRAGDATA_CB",
        "Name": "DragData",
        "Arguments": [
          "String",
          "VoidPtr",
          "Int"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "BUTTON_CB BUTTON_CB Action generated when a mouse button is pressed or released. Callback int function(Ihandle* ih, int button, int pressed, int x, int y, char* status); [in C] ih:button_cb(button, pressed, x, y: number, status: string) -> (ret: number) [in Lua] ih: identifies the element that activated the event. button: identifies the activated mouse button: IUP_BUTTON1 - left mouse button (button 1); IUP_BUTTON2 - middle mouse button (button 2); IUP_BUTTON3 - right mouse button (button 3). pressed: indicates the state of the button: 0 - mouse button was released; 1 - mouse button was pressed. x, y: position in the canvas where the event has occurred, in pixels. status: status of the mouse buttons and some keyboard keys at the moment the event is generated. The following macros must be used for verification: iup_isshift(status) iup_iscontrol(status) iup_isbutton1(status) iup_isbutton2(status) iup_isbutton3(status) iup_isbutton4(status) iup_isbutton5(status) iup_isdouble(status) iup_isalt(status) iup_issys(status) They return 1 if the respective key or button is pressed, and 0 otherwise. These macros are also available in Lua, returning a boolean. Returns: IUP_CLOSE will be processed. On some controls if IUP_IGNORE is returned the action is ignored (this is system dependent). Notes This callback can be used to customize a button behavior. For a standard button behavior use the ACTION callback of the IupButton. For a single click the callback is called twice, one for pressed=1 and one for pressed=0. Only after both calls the ACTION callback is called. In Windows, if a dialog is shown or popup in any situation there could be unpredictable results because the native system still has processing to be done even after the callback is called. A double click is preceded by two single clicks, one for pressed=1 and one for pressed=0, and followed by a press=0, all three without the double click flag set. In GTK, it is preceded by an additional two single clicks sequence. For example, for one double click all the following calls are made: BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) (in GTK only) BUTTON_CB(but=1 (1), x=154, y=83 [ 1 D ]) BUTTON_CB(but=1 (0), x=154, y=83 [ 1 ]) Between press and release all mouse events are redirected only to this control, even if the cursor moves outside the element. So the BUTTON_CB callback when released and the MOTION_CB callback can be called with coordinates outside the element rectangle. Affects IupCanvas, IupButton, IupText, IupList, IupGLCanvas",
        "AttributeName": "BUTTON_CB",
        "Name": "Button",
        "Arguments": [
          "Int",
          "Int",
          "Int",
          "Int",
          "String"
        ],
        "ReturnType": "Void"
      },
      {
        "Documentation": "MAP_CB MAP_CB Called right after an element is mapped and its attributes updated in IupMap. When the element is a dialog, it is called after the layout is updated. For all other elements is called before the layout is updated, so the element current size will still be 0x0 during MAP_CB (since 3.14). Callback int function(Ihandle *ih); [in C] ih:map_cb() -> (ret: number) [in Lua] ih: identifier of the element that activated the event. Affects All that have a native representation.",
        "AttributeName": "MAP_CB",
        "Name": "Map",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "FLAT_GETFOCUS_CB",
        "Name": "FlatGetFocus",
        "Arguments": [],
        "ReturnType": "Void"
      },
      {
        "Documentation": null,
        "AttributeName": "RIGHTCLICK_CB",
        "Name": "RightClick",
        "Arguments": [
          "Int"
        ],
        "ReturnType": "Void"
      }
    ]
  }
]